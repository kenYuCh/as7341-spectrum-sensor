

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Apr 14 14:11:56 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18425
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    33                           	psect	cinit,global,class=CODE,merge=1,delta=2
    34                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    35                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    38                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    39                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    40                           	psect	clrtext,global,class=CODE,delta=2
    41                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    42                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    43                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    44                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    45                           	psect	text1,local,class=CODE,merge=1,delta=2
    46                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text8,local,class=CODE,merge=1,delta=2
    53                           	psect	text9,local,class=CODE,merge=1,delta=2
    54                           	psect	text10,local,class=CODE,merge=1,delta=2
    55                           	psect	text11,local,class=CODE,merge=1,delta=2
    56                           	psect	text12,local,class=CODE,merge=1,delta=2
    57                           	psect	text13,local,class=CODE,merge=1,delta=2
    58                           	psect	text14,local,class=CODE,merge=1,delta=2
    59                           	psect	text15,local,class=CODE,merge=1,delta=2
    60                           	psect	text16,local,class=CODE,merge=1,delta=2
    61                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text18,local,class=CODE,merge=1,delta=2
    63                           	psect	text19,local,class=CODE,merge=1,delta=2
    64                           	psect	text20,local,class=CODE,merge=1,delta=2
    65                           	psect	text21,local,class=CODE,merge=1,delta=2
    66                           	psect	text22,local,class=CODE,merge=1,delta=2
    67                           	psect	text23,local,class=CODE,merge=1,delta=2
    68                           	psect	text24,local,class=CODE,merge=1,delta=2
    69                           	psect	text25,local,class=CODE,merge=1,delta=2
    70                           	psect	text26,local,class=CODE,merge=1,delta=2
    71                           	psect	text27,local,class=CODE,merge=1,delta=2
    72                           	psect	text28,local,class=CODE,merge=1,delta=2
    73                           	psect	text29,local,class=CODE,merge=1,delta=2
    74                           	psect	text30,local,class=CODE,merge=1,delta=2
    75                           	psect	text31,local,class=CODE,merge=1,delta=2
    76                           	psect	text32,local,class=CODE,merge=1,delta=2
    77                           	psect	text33,local,class=CODE,merge=1,delta=2
    78                           	psect	text34,local,class=CODE,merge=1,delta=2
    79                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text36,local,class=CODE,merge=1,delta=2
    81                           	psect	text37,local,class=CODE,merge=1,delta=2
    82                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    83                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text42,local,class=CODE,merge=1,delta=2
    87                           	psect	text43,local,class=CODE,merge=1,delta=2
    88                           	psect	text44,local,class=CODE,merge=1,delta=2
    89                           	psect	text45,local,class=CODE,merge=1,delta=2
    90                           	psect	text46,local,class=CODE,merge=1,delta=2
    91                           	psect	text47,local,class=CODE,merge=1,delta=2
    92                           	psect	text48,local,class=CODE,merge=1,delta=2
    93                           	psect	text49,local,class=CODE,merge=1,delta=2
    94                           	psect	text50,local,class=CODE,merge=1,delta=2
    95                           	psect	text51,local,class=CODE,merge=1,delta=2
    96                           	psect	text52,local,class=CODE,merge=1,delta=2
    97                           	psect	text53,local,class=CODE,merge=1,delta=2
    98                           	psect	text54,local,class=CODE,merge=1,delta=2
    99                           	psect	text55,local,class=CODE,merge=1,delta=2
   100                           	psect	text56,local,class=CODE,merge=1,delta=2
   101                           	psect	text57,local,class=CODE,merge=1,delta=2
   102                           	psect	text58,local,class=CODE,merge=1,delta=2
   103                           	psect	intentry,global,class=CODE,delta=2
   104                           	psect	text60,local,class=CODE,merge=1,delta=2
   105                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   106                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   107                           	dabs	1,0x7E,2
   108     0000                     
   109                           ; Version 2.40
   110                           ; Generated 04/07/2022 GMT
   111                           ; 
   112                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution. Publication is not required when
   126                           ;        this file is used in an embedded application.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC16F18425 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000E                     	;# 
   158     0012                     	;# 
   159     0014                     	;# 
   160     0018                     	;# 
   161     001A                     	;# 
   162     008C                     	;# 
   163     008C                     	;# 
   164     008D                     	;# 
   165     008E                     	;# 
   166     008E                     	;# 
   167     008F                     	;# 
   168     0090                     	;# 
   169     0090                     	;# 
   170     0091                     	;# 
   171     0092                     	;# 
   172     0092                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0094                     	;# 
   176     0095                     	;# 
   177     0096                     	;# 
   178     0096                     	;# 
   179     0097                     	;# 
   180     0098                     	;# 
   181     0099                     	;# 
   182     009A                     	;# 
   183     009B                     	;# 
   184     009B                     	;# 
   185     009C                     	;# 
   186     009D                     	;# 
   187     009D                     	;# 
   188     009E                     	;# 
   189     009F                     	;# 
   190     010C                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     010F                     	;# 
   196     0110                     	;# 
   197     0111                     	;# 
   198     0112                     	;# 
   199     0113                     	;# 
   200     0114                     	;# 
   201     0115                     	;# 
   202     0116                     	;# 
   203     0117                     	;# 
   204     0118                     	;# 
   205     0119                     	;# 
   206     0119                     	;# 
   207     0119                     	;# 
   208     011A                     	;# 
   209     011A                     	;# 
   210     011A                     	;# 
   211     011B                     	;# 
   212     011B                     	;# 
   213     011B                     	;# 
   214     011B                     	;# 
   215     011B                     	;# 
   216     011C                     	;# 
   217     011C                     	;# 
   218     011C                     	;# 
   219     011D                     	;# 
   220     011D                     	;# 
   221     011D                     	;# 
   222     011E                     	;# 
   223     011E                     	;# 
   224     011E                     	;# 
   225     011F                     	;# 
   226     011F                     	;# 
   227     011F                     	;# 
   228     011F                     	;# 
   229     011F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     018E                     	;# 
   233     018F                     	;# 
   234     0190                     	;# 
   235     0191                     	;# 
   236     0192                     	;# 
   237     0196                     	;# 
   238     0197                     	;# 
   239     0198                     	;# 
   240     0199                     	;# 
   241     019A                     	;# 
   242     019B                     	;# 
   243     019C                     	;# 
   244     020C                     	;# 
   245     020D                     	;# 
   246     020E                     	;# 
   247     020E                     	;# 
   248     020F                     	;# 
   249     020F                     	;# 
   250     0210                     	;# 
   251     0210                     	;# 
   252     0211                     	;# 
   253     0211                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0214                     	;# 
   257     0214                     	;# 
   258     0215                     	;# 
   259     0215                     	;# 
   260     0216                     	;# 
   261     0216                     	;# 
   262     0217                     	;# 
   263     0217                     	;# 
   264     0218                     	;# 
   265     0219                     	;# 
   266     021A                     	;# 
   267     021A                     	;# 
   268     021B                     	;# 
   269     021B                     	;# 
   270     021C                     	;# 
   271     021C                     	;# 
   272     021D                     	;# 
   273     021D                     	;# 
   274     021E                     	;# 
   275     021F                     	;# 
   276     028C                     	;# 
   277     028C                     	;# 
   278     028D                     	;# 
   279     028D                     	;# 
   280     028E                     	;# 
   281     028F                     	;# 
   282     0290                     	;# 
   283     0291                     	;# 
   284     0292                     	;# 
   285     0292                     	;# 
   286     0293                     	;# 
   287     0293                     	;# 
   288     0294                     	;# 
   289     0295                     	;# 
   290     0296                     	;# 
   291     0297                     	;# 
   292     0298                     	;# 
   293     0298                     	;# 
   294     0299                     	;# 
   295     0299                     	;# 
   296     029A                     	;# 
   297     029B                     	;# 
   298     029C                     	;# 
   299     029D                     	;# 
   300     029F                     	;# 
   301     030C                     	;# 
   302     030C                     	;# 
   303     030D                     	;# 
   304     030E                     	;# 
   305     030F                     	;# 
   306     0310                     	;# 
   307     0310                     	;# 
   308     0311                     	;# 
   309     0312                     	;# 
   310     0313                     	;# 
   311     0314                     	;# 
   312     0314                     	;# 
   313     0315                     	;# 
   314     0316                     	;# 
   315     0317                     	;# 
   316     0318                     	;# 
   317     0318                     	;# 
   318     0319                     	;# 
   319     031A                     	;# 
   320     031B                     	;# 
   321     038C                     	;# 
   322     038C                     	;# 
   323     038D                     	;# 
   324     038E                     	;# 
   325     0390                     	;# 
   326     0390                     	;# 
   327     0391                     	;# 
   328     0392                     	;# 
   329     048C                     	;# 
   330     048C                     	;# 
   331     048D                     	;# 
   332     048E                     	;# 
   333     048F                     	;# 
   334     048F                     	;# 
   335     0490                     	;# 
   336     0491                     	;# 
   337     0492                     	;# 
   338     0492                     	;# 
   339     0493                     	;# 
   340     0494                     	;# 
   341     0495                     	;# 
   342     0495                     	;# 
   343     0496                     	;# 
   344     0497                     	;# 
   345     0498                     	;# 
   346     0499                     	;# 
   347     049A                     	;# 
   348     049B                     	;# 
   349     049C                     	;# 
   350     049D                     	;# 
   351     058C                     	;# 
   352     058C                     	;# 
   353     058D                     	;# 
   354     058E                     	;# 
   355     058F                     	;# 
   356     058F                     	;# 
   357     0590                     	;# 
   358     0591                     	;# 
   359     0592                     	;# 
   360     0593                     	;# 
   361     059C                     	;# 
   362     059C                     	;# 
   363     059D                     	;# 
   364     059D                     	;# 
   365     059E                     	;# 
   366     059F                     	;# 
   367     060C                     	;# 
   368     060C                     	;# 
   369     060D                     	;# 
   370     060D                     	;# 
   371     060E                     	;# 
   372     060F                     	;# 
   373     0610                     	;# 
   374     0611                     	;# 
   375     0612                     	;# 
   376     0613                     	;# 
   377     0614                     	;# 
   378     0616                     	;# 
   379     0616                     	;# 
   380     0617                     	;# 
   381     0617                     	;# 
   382     0618                     	;# 
   383     0619                     	;# 
   384     061A                     	;# 
   385     061B                     	;# 
   386     061C                     	;# 
   387     061D                     	;# 
   388     061E                     	;# 
   389     070C                     	;# 
   390     070D                     	;# 
   391     070E                     	;# 
   392     070F                     	;# 
   393     0710                     	;# 
   394     0711                     	;# 
   395     0712                     	;# 
   396     0713                     	;# 
   397     0714                     	;# 
   398     0716                     	;# 
   399     0717                     	;# 
   400     0718                     	;# 
   401     0719                     	;# 
   402     071A                     	;# 
   403     071B                     	;# 
   404     071C                     	;# 
   405     071D                     	;# 
   406     071E                     	;# 
   407     0796                     	;# 
   408     0797                     	;# 
   409     0798                     	;# 
   410     0799                     	;# 
   411     079A                     	;# 
   412     079B                     	;# 
   413     079C                     	;# 
   414     079D                     	;# 
   415     080C                     	;# 
   416     080D                     	;# 
   417     080E                     	;# 
   418     080F                     	;# 
   419     0810                     	;# 
   420     0811                     	;# 
   421     0812                     	;# 
   422     0813                     	;# 
   423     0814                     	;# 
   424     081A                     	;# 
   425     081A                     	;# 
   426     081B                     	;# 
   427     081C                     	;# 
   428     081C                     	;# 
   429     081D                     	;# 
   430     081E                     	;# 
   431     081F                     	;# 
   432     088C                     	;# 
   433     088D                     	;# 
   434     088E                     	;# 
   435     088F                     	;# 
   436     0890                     	;# 
   437     0891                     	;# 
   438     0892                     	;# 
   439     0893                     	;# 
   440     0895                     	;# 
   441     0896                     	;# 
   442     0897                     	;# 
   443     0898                     	;# 
   444     0899                     	;# 
   445     089A                     	;# 
   446     089B                     	;# 
   447     090C                     	;# 
   448     090E                     	;# 
   449     090F                     	;# 
   450     091F                     	;# 
   451     098F                     	;# 
   452     098F                     	;# 
   453     0990                     	;# 
   454     0991                     	;# 
   455     0992                     	;# 
   456     0993                     	;# 
   457     0994                     	;# 
   458     0995                     	;# 
   459     0996                     	;# 
   460     0997                     	;# 
   461     1E0F                     	;# 
   462     1E10                     	;# 
   463     1E11                     	;# 
   464     1E12                     	;# 
   465     1E13                     	;# 
   466     1E14                     	;# 
   467     1E15                     	;# 
   468     1E16                     	;# 
   469     1E17                     	;# 
   470     1E18                     	;# 
   471     1E19                     	;# 
   472     1E1A                     	;# 
   473     1E1B                     	;# 
   474     1E1C                     	;# 
   475     1E1D                     	;# 
   476     1E1E                     	;# 
   477     1E1F                     	;# 
   478     1E20                     	;# 
   479     1E21                     	;# 
   480     1E22                     	;# 
   481     1E23                     	;# 
   482     1E24                     	;# 
   483     1E25                     	;# 
   484     1E26                     	;# 
   485     1E27                     	;# 
   486     1E28                     	;# 
   487     1E29                     	;# 
   488     1E2A                     	;# 
   489     1E2B                     	;# 
   490     1E2C                     	;# 
   491     1E2D                     	;# 
   492     1E2E                     	;# 
   493     1E2F                     	;# 
   494     1E30                     	;# 
   495     1E31                     	;# 
   496     1E32                     	;# 
   497     1E33                     	;# 
   498     1E34                     	;# 
   499     1E35                     	;# 
   500     1E36                     	;# 
   501     1E37                     	;# 
   502     1E8F                     	;# 
   503     1E90                     	;# 
   504     1E91                     	;# 
   505     1E92                     	;# 
   506     1E93                     	;# 
   507     1E94                     	;# 
   508     1E95                     	;# 
   509     1E96                     	;# 
   510     1E97                     	;# 
   511     1E9C                     	;# 
   512     1E9D                     	;# 
   513     1E9E                     	;# 
   514     1EA1                     	;# 
   515     1EA2                     	;# 
   516     1EA3                     	;# 
   517     1EA4                     	;# 
   518     1EA9                     	;# 
   519     1EAA                     	;# 
   520     1EB1                     	;# 
   521     1EB2                     	;# 
   522     1EB8                     	;# 
   523     1EB9                     	;# 
   524     1EBA                     	;# 
   525     1EBB                     	;# 
   526     1EBC                     	;# 
   527     1EBD                     	;# 
   528     1EBE                     	;# 
   529     1EC3                     	;# 
   530     1EC5                     	;# 
   531     1EC6                     	;# 
   532     1EC7                     	;# 
   533     1EC8                     	;# 
   534     1EC9                     	;# 
   535     1ECA                     	;# 
   536     1ECB                     	;# 
   537     1ECC                     	;# 
   538     1F10                     	;# 
   539     1F11                     	;# 
   540     1F12                     	;# 
   541     1F14                     	;# 
   542     1F15                     	;# 
   543     1F20                     	;# 
   544     1F21                     	;# 
   545     1F22                     	;# 
   546     1F23                     	;# 
   547     1F24                     	;# 
   548     1F25                     	;# 
   549     1F38                     	;# 
   550     1F39                     	;# 
   551     1F3A                     	;# 
   552     1F3B                     	;# 
   553     1F3C                     	;# 
   554     1F3D                     	;# 
   555     1F3E                     	;# 
   556     1F3F                     	;# 
   557     1F4E                     	;# 
   558     1F4F                     	;# 
   559     1F50                     	;# 
   560     1F51                     	;# 
   561     1F52                     	;# 
   562     1F53                     	;# 
   563     1F54                     	;# 
   564     1F55                     	;# 
   565     1FE4                     	;# 
   566     1FE5                     	;# 
   567     1FE6                     	;# 
   568     1FE7                     	;# 
   569     1FE8                     	;# 
   570     1FE8                     	;# 
   571     1FE9                     	;# 
   572     1FEA                     	;# 
   573     1FEB                     	;# 
   574     1FED                     	;# 
   575     1FEE                     	;# 
   576     1FEF                     	;# 
   577     0000                     	;# 
   578     0001                     	;# 
   579     0002                     	;# 
   580     0003                     	;# 
   581     0004                     	;# 
   582     0005                     	;# 
   583     0006                     	;# 
   584     0007                     	;# 
   585     0008                     	;# 
   586     0009                     	;# 
   587     000A                     	;# 
   588     000B                     	;# 
   589     000C                     	;# 
   590     000E                     	;# 
   591     0012                     	;# 
   592     0014                     	;# 
   593     0018                     	;# 
   594     001A                     	;# 
   595     008C                     	;# 
   596     008C                     	;# 
   597     008D                     	;# 
   598     008E                     	;# 
   599     008E                     	;# 
   600     008F                     	;# 
   601     0090                     	;# 
   602     0090                     	;# 
   603     0091                     	;# 
   604     0092                     	;# 
   605     0092                     	;# 
   606     0093                     	;# 
   607     0094                     	;# 
   608     0094                     	;# 
   609     0095                     	;# 
   610     0096                     	;# 
   611     0096                     	;# 
   612     0097                     	;# 
   613     0098                     	;# 
   614     0099                     	;# 
   615     009A                     	;# 
   616     009B                     	;# 
   617     009B                     	;# 
   618     009C                     	;# 
   619     009D                     	;# 
   620     009D                     	;# 
   621     009E                     	;# 
   622     009F                     	;# 
   623     010C                     	;# 
   624     010C                     	;# 
   625     010D                     	;# 
   626     010E                     	;# 
   627     010F                     	;# 
   628     010F                     	;# 
   629     0110                     	;# 
   630     0111                     	;# 
   631     0112                     	;# 
   632     0113                     	;# 
   633     0114                     	;# 
   634     0115                     	;# 
   635     0116                     	;# 
   636     0117                     	;# 
   637     0118                     	;# 
   638     0119                     	;# 
   639     0119                     	;# 
   640     0119                     	;# 
   641     011A                     	;# 
   642     011A                     	;# 
   643     011A                     	;# 
   644     011B                     	;# 
   645     011B                     	;# 
   646     011B                     	;# 
   647     011B                     	;# 
   648     011B                     	;# 
   649     011C                     	;# 
   650     011C                     	;# 
   651     011C                     	;# 
   652     011D                     	;# 
   653     011D                     	;# 
   654     011D                     	;# 
   655     011E                     	;# 
   656     011E                     	;# 
   657     011E                     	;# 
   658     011F                     	;# 
   659     011F                     	;# 
   660     011F                     	;# 
   661     011F                     	;# 
   662     011F                     	;# 
   663     018C                     	;# 
   664     018D                     	;# 
   665     018E                     	;# 
   666     018F                     	;# 
   667     0190                     	;# 
   668     0191                     	;# 
   669     0192                     	;# 
   670     0196                     	;# 
   671     0197                     	;# 
   672     0198                     	;# 
   673     0199                     	;# 
   674     019A                     	;# 
   675     019B                     	;# 
   676     019C                     	;# 
   677     020C                     	;# 
   678     020D                     	;# 
   679     020E                     	;# 
   680     020E                     	;# 
   681     020F                     	;# 
   682     020F                     	;# 
   683     0210                     	;# 
   684     0210                     	;# 
   685     0211                     	;# 
   686     0211                     	;# 
   687     0212                     	;# 
   688     0213                     	;# 
   689     0214                     	;# 
   690     0214                     	;# 
   691     0215                     	;# 
   692     0215                     	;# 
   693     0216                     	;# 
   694     0216                     	;# 
   695     0217                     	;# 
   696     0217                     	;# 
   697     0218                     	;# 
   698     0219                     	;# 
   699     021A                     	;# 
   700     021A                     	;# 
   701     021B                     	;# 
   702     021B                     	;# 
   703     021C                     	;# 
   704     021C                     	;# 
   705     021D                     	;# 
   706     021D                     	;# 
   707     021E                     	;# 
   708     021F                     	;# 
   709     028C                     	;# 
   710     028C                     	;# 
   711     028D                     	;# 
   712     028D                     	;# 
   713     028E                     	;# 
   714     028F                     	;# 
   715     0290                     	;# 
   716     0291                     	;# 
   717     0292                     	;# 
   718     0292                     	;# 
   719     0293                     	;# 
   720     0293                     	;# 
   721     0294                     	;# 
   722     0295                     	;# 
   723     0296                     	;# 
   724     0297                     	;# 
   725     0298                     	;# 
   726     0298                     	;# 
   727     0299                     	;# 
   728     0299                     	;# 
   729     029A                     	;# 
   730     029B                     	;# 
   731     029C                     	;# 
   732     029D                     	;# 
   733     029F                     	;# 
   734     030C                     	;# 
   735     030C                     	;# 
   736     030D                     	;# 
   737     030E                     	;# 
   738     030F                     	;# 
   739     0310                     	;# 
   740     0310                     	;# 
   741     0311                     	;# 
   742     0312                     	;# 
   743     0313                     	;# 
   744     0314                     	;# 
   745     0314                     	;# 
   746     0315                     	;# 
   747     0316                     	;# 
   748     0317                     	;# 
   749     0318                     	;# 
   750     0318                     	;# 
   751     0319                     	;# 
   752     031A                     	;# 
   753     031B                     	;# 
   754     038C                     	;# 
   755     038C                     	;# 
   756     038D                     	;# 
   757     038E                     	;# 
   758     0390                     	;# 
   759     0390                     	;# 
   760     0391                     	;# 
   761     0392                     	;# 
   762     048C                     	;# 
   763     048C                     	;# 
   764     048D                     	;# 
   765     048E                     	;# 
   766     048F                     	;# 
   767     048F                     	;# 
   768     0490                     	;# 
   769     0491                     	;# 
   770     0492                     	;# 
   771     0492                     	;# 
   772     0493                     	;# 
   773     0494                     	;# 
   774     0495                     	;# 
   775     0495                     	;# 
   776     0496                     	;# 
   777     0497                     	;# 
   778     0498                     	;# 
   779     0499                     	;# 
   780     049A                     	;# 
   781     049B                     	;# 
   782     049C                     	;# 
   783     049D                     	;# 
   784     058C                     	;# 
   785     058C                     	;# 
   786     058D                     	;# 
   787     058E                     	;# 
   788     058F                     	;# 
   789     058F                     	;# 
   790     0590                     	;# 
   791     0591                     	;# 
   792     0592                     	;# 
   793     0593                     	;# 
   794     059C                     	;# 
   795     059C                     	;# 
   796     059D                     	;# 
   797     059D                     	;# 
   798     059E                     	;# 
   799     059F                     	;# 
   800     060C                     	;# 
   801     060C                     	;# 
   802     060D                     	;# 
   803     060D                     	;# 
   804     060E                     	;# 
   805     060F                     	;# 
   806     0610                     	;# 
   807     0611                     	;# 
   808     0612                     	;# 
   809     0613                     	;# 
   810     0614                     	;# 
   811     0616                     	;# 
   812     0616                     	;# 
   813     0617                     	;# 
   814     0617                     	;# 
   815     0618                     	;# 
   816     0619                     	;# 
   817     061A                     	;# 
   818     061B                     	;# 
   819     061C                     	;# 
   820     061D                     	;# 
   821     061E                     	;# 
   822     070C                     	;# 
   823     070D                     	;# 
   824     070E                     	;# 
   825     070F                     	;# 
   826     0710                     	;# 
   827     0711                     	;# 
   828     0712                     	;# 
   829     0713                     	;# 
   830     0714                     	;# 
   831     0716                     	;# 
   832     0717                     	;# 
   833     0718                     	;# 
   834     0719                     	;# 
   835     071A                     	;# 
   836     071B                     	;# 
   837     071C                     	;# 
   838     071D                     	;# 
   839     071E                     	;# 
   840     0796                     	;# 
   841     0797                     	;# 
   842     0798                     	;# 
   843     0799                     	;# 
   844     079A                     	;# 
   845     079B                     	;# 
   846     079C                     	;# 
   847     079D                     	;# 
   848     080C                     	;# 
   849     080D                     	;# 
   850     080E                     	;# 
   851     080F                     	;# 
   852     0810                     	;# 
   853     0811                     	;# 
   854     0812                     	;# 
   855     0813                     	;# 
   856     0814                     	;# 
   857     081A                     	;# 
   858     081A                     	;# 
   859     081B                     	;# 
   860     081C                     	;# 
   861     081C                     	;# 
   862     081D                     	;# 
   863     081E                     	;# 
   864     081F                     	;# 
   865     088C                     	;# 
   866     088D                     	;# 
   867     088E                     	;# 
   868     088F                     	;# 
   869     0890                     	;# 
   870     0891                     	;# 
   871     0892                     	;# 
   872     0893                     	;# 
   873     0895                     	;# 
   874     0896                     	;# 
   875     0897                     	;# 
   876     0898                     	;# 
   877     0899                     	;# 
   878     089A                     	;# 
   879     089B                     	;# 
   880     090C                     	;# 
   881     090E                     	;# 
   882     090F                     	;# 
   883     091F                     	;# 
   884     098F                     	;# 
   885     098F                     	;# 
   886     0990                     	;# 
   887     0991                     	;# 
   888     0992                     	;# 
   889     0993                     	;# 
   890     0994                     	;# 
   891     0995                     	;# 
   892     0996                     	;# 
   893     0997                     	;# 
   894     1E0F                     	;# 
   895     1E10                     	;# 
   896     1E11                     	;# 
   897     1E12                     	;# 
   898     1E13                     	;# 
   899     1E14                     	;# 
   900     1E15                     	;# 
   901     1E16                     	;# 
   902     1E17                     	;# 
   903     1E18                     	;# 
   904     1E19                     	;# 
   905     1E1A                     	;# 
   906     1E1B                     	;# 
   907     1E1C                     	;# 
   908     1E1D                     	;# 
   909     1E1E                     	;# 
   910     1E1F                     	;# 
   911     1E20                     	;# 
   912     1E21                     	;# 
   913     1E22                     	;# 
   914     1E23                     	;# 
   915     1E24                     	;# 
   916     1E25                     	;# 
   917     1E26                     	;# 
   918     1E27                     	;# 
   919     1E28                     	;# 
   920     1E29                     	;# 
   921     1E2A                     	;# 
   922     1E2B                     	;# 
   923     1E2C                     	;# 
   924     1E2D                     	;# 
   925     1E2E                     	;# 
   926     1E2F                     	;# 
   927     1E30                     	;# 
   928     1E31                     	;# 
   929     1E32                     	;# 
   930     1E33                     	;# 
   931     1E34                     	;# 
   932     1E35                     	;# 
   933     1E36                     	;# 
   934     1E37                     	;# 
   935     1E8F                     	;# 
   936     1E90                     	;# 
   937     1E91                     	;# 
   938     1E92                     	;# 
   939     1E93                     	;# 
   940     1E94                     	;# 
   941     1E95                     	;# 
   942     1E96                     	;# 
   943     1E97                     	;# 
   944     1E9C                     	;# 
   945     1E9D                     	;# 
   946     1E9E                     	;# 
   947     1EA1                     	;# 
   948     1EA2                     	;# 
   949     1EA3                     	;# 
   950     1EA4                     	;# 
   951     1EA9                     	;# 
   952     1EAA                     	;# 
   953     1EB1                     	;# 
   954     1EB2                     	;# 
   955     1EB8                     	;# 
   956     1EB9                     	;# 
   957     1EBA                     	;# 
   958     1EBB                     	;# 
   959     1EBC                     	;# 
   960     1EBD                     	;# 
   961     1EBE                     	;# 
   962     1EC3                     	;# 
   963     1EC5                     	;# 
   964     1EC6                     	;# 
   965     1EC7                     	;# 
   966     1EC8                     	;# 
   967     1EC9                     	;# 
   968     1ECA                     	;# 
   969     1ECB                     	;# 
   970     1ECC                     	;# 
   971     1F10                     	;# 
   972     1F11                     	;# 
   973     1F12                     	;# 
   974     1F14                     	;# 
   975     1F15                     	;# 
   976     1F20                     	;# 
   977     1F21                     	;# 
   978     1F22                     	;# 
   979     1F23                     	;# 
   980     1F24                     	;# 
   981     1F25                     	;# 
   982     1F38                     	;# 
   983     1F39                     	;# 
   984     1F3A                     	;# 
   985     1F3B                     	;# 
   986     1F3C                     	;# 
   987     1F3D                     	;# 
   988     1F3E                     	;# 
   989     1F3F                     	;# 
   990     1F4E                     	;# 
   991     1F4F                     	;# 
   992     1F50                     	;# 
   993     1F51                     	;# 
   994     1F52                     	;# 
   995     1F53                     	;# 
   996     1F54                     	;# 
   997     1F55                     	;# 
   998     1FE4                     	;# 
   999     1FE5                     	;# 
  1000     1FE6                     	;# 
  1001     1FE7                     	;# 
  1002     1FE8                     	;# 
  1003     1FE8                     	;# 
  1004     1FE9                     	;# 
  1005     1FEA                     	;# 
  1006     1FEB                     	;# 
  1007     1FED                     	;# 
  1008     1FEE                     	;# 
  1009     1FEF                     	;# 
  1010     0000                     	;# 
  1011     0001                     	;# 
  1012     0002                     	;# 
  1013     0003                     	;# 
  1014     0004                     	;# 
  1015     0005                     	;# 
  1016     0006                     	;# 
  1017     0007                     	;# 
  1018     0008                     	;# 
  1019     0009                     	;# 
  1020     000A                     	;# 
  1021     000B                     	;# 
  1022     000C                     	;# 
  1023     000E                     	;# 
  1024     0012                     	;# 
  1025     0014                     	;# 
  1026     0018                     	;# 
  1027     001A                     	;# 
  1028     008C                     	;# 
  1029     008C                     	;# 
  1030     008D                     	;# 
  1031     008E                     	;# 
  1032     008E                     	;# 
  1033     008F                     	;# 
  1034     0090                     	;# 
  1035     0090                     	;# 
  1036     0091                     	;# 
  1037     0092                     	;# 
  1038     0092                     	;# 
  1039     0093                     	;# 
  1040     0094                     	;# 
  1041     0094                     	;# 
  1042     0095                     	;# 
  1043     0096                     	;# 
  1044     0096                     	;# 
  1045     0097                     	;# 
  1046     0098                     	;# 
  1047     0099                     	;# 
  1048     009A                     	;# 
  1049     009B                     	;# 
  1050     009B                     	;# 
  1051     009C                     	;# 
  1052     009D                     	;# 
  1053     009D                     	;# 
  1054     009E                     	;# 
  1055     009F                     	;# 
  1056     010C                     	;# 
  1057     010C                     	;# 
  1058     010D                     	;# 
  1059     010E                     	;# 
  1060     010F                     	;# 
  1061     010F                     	;# 
  1062     0110                     	;# 
  1063     0111                     	;# 
  1064     0112                     	;# 
  1065     0113                     	;# 
  1066     0114                     	;# 
  1067     0115                     	;# 
  1068     0116                     	;# 
  1069     0117                     	;# 
  1070     0118                     	;# 
  1071     0119                     	;# 
  1072     0119                     	;# 
  1073     0119                     	;# 
  1074     011A                     	;# 
  1075     011A                     	;# 
  1076     011A                     	;# 
  1077     011B                     	;# 
  1078     011B                     	;# 
  1079     011B                     	;# 
  1080     011B                     	;# 
  1081     011B                     	;# 
  1082     011C                     	;# 
  1083     011C                     	;# 
  1084     011C                     	;# 
  1085     011D                     	;# 
  1086     011D                     	;# 
  1087     011D                     	;# 
  1088     011E                     	;# 
  1089     011E                     	;# 
  1090     011E                     	;# 
  1091     011F                     	;# 
  1092     011F                     	;# 
  1093     011F                     	;# 
  1094     011F                     	;# 
  1095     011F                     	;# 
  1096     018C                     	;# 
  1097     018D                     	;# 
  1098     018E                     	;# 
  1099     018F                     	;# 
  1100     0190                     	;# 
  1101     0191                     	;# 
  1102     0192                     	;# 
  1103     0196                     	;# 
  1104     0197                     	;# 
  1105     0198                     	;# 
  1106     0199                     	;# 
  1107     019A                     	;# 
  1108     019B                     	;# 
  1109     019C                     	;# 
  1110     020C                     	;# 
  1111     020D                     	;# 
  1112     020E                     	;# 
  1113     020E                     	;# 
  1114     020F                     	;# 
  1115     020F                     	;# 
  1116     0210                     	;# 
  1117     0210                     	;# 
  1118     0211                     	;# 
  1119     0211                     	;# 
  1120     0212                     	;# 
  1121     0213                     	;# 
  1122     0214                     	;# 
  1123     0214                     	;# 
  1124     0215                     	;# 
  1125     0215                     	;# 
  1126     0216                     	;# 
  1127     0216                     	;# 
  1128     0217                     	;# 
  1129     0217                     	;# 
  1130     0218                     	;# 
  1131     0219                     	;# 
  1132     021A                     	;# 
  1133     021A                     	;# 
  1134     021B                     	;# 
  1135     021B                     	;# 
  1136     021C                     	;# 
  1137     021C                     	;# 
  1138     021D                     	;# 
  1139     021D                     	;# 
  1140     021E                     	;# 
  1141     021F                     	;# 
  1142     028C                     	;# 
  1143     028C                     	;# 
  1144     028D                     	;# 
  1145     028D                     	;# 
  1146     028E                     	;# 
  1147     028F                     	;# 
  1148     0290                     	;# 
  1149     0291                     	;# 
  1150     0292                     	;# 
  1151     0292                     	;# 
  1152     0293                     	;# 
  1153     0293                     	;# 
  1154     0294                     	;# 
  1155     0295                     	;# 
  1156     0296                     	;# 
  1157     0297                     	;# 
  1158     0298                     	;# 
  1159     0298                     	;# 
  1160     0299                     	;# 
  1161     0299                     	;# 
  1162     029A                     	;# 
  1163     029B                     	;# 
  1164     029C                     	;# 
  1165     029D                     	;# 
  1166     029F                     	;# 
  1167     030C                     	;# 
  1168     030C                     	;# 
  1169     030D                     	;# 
  1170     030E                     	;# 
  1171     030F                     	;# 
  1172     0310                     	;# 
  1173     0310                     	;# 
  1174     0311                     	;# 
  1175     0312                     	;# 
  1176     0313                     	;# 
  1177     0314                     	;# 
  1178     0314                     	;# 
  1179     0315                     	;# 
  1180     0316                     	;# 
  1181     0317                     	;# 
  1182     0318                     	;# 
  1183     0318                     	;# 
  1184     0319                     	;# 
  1185     031A                     	;# 
  1186     031B                     	;# 
  1187     038C                     	;# 
  1188     038C                     	;# 
  1189     038D                     	;# 
  1190     038E                     	;# 
  1191     0390                     	;# 
  1192     0390                     	;# 
  1193     0391                     	;# 
  1194     0392                     	;# 
  1195     048C                     	;# 
  1196     048C                     	;# 
  1197     048D                     	;# 
  1198     048E                     	;# 
  1199     048F                     	;# 
  1200     048F                     	;# 
  1201     0490                     	;# 
  1202     0491                     	;# 
  1203     0492                     	;# 
  1204     0492                     	;# 
  1205     0493                     	;# 
  1206     0494                     	;# 
  1207     0495                     	;# 
  1208     0495                     	;# 
  1209     0496                     	;# 
  1210     0497                     	;# 
  1211     0498                     	;# 
  1212     0499                     	;# 
  1213     049A                     	;# 
  1214     049B                     	;# 
  1215     049C                     	;# 
  1216     049D                     	;# 
  1217     058C                     	;# 
  1218     058C                     	;# 
  1219     058D                     	;# 
  1220     058E                     	;# 
  1221     058F                     	;# 
  1222     058F                     	;# 
  1223     0590                     	;# 
  1224     0591                     	;# 
  1225     0592                     	;# 
  1226     0593                     	;# 
  1227     059C                     	;# 
  1228     059C                     	;# 
  1229     059D                     	;# 
  1230     059D                     	;# 
  1231     059E                     	;# 
  1232     059F                     	;# 
  1233     060C                     	;# 
  1234     060C                     	;# 
  1235     060D                     	;# 
  1236     060D                     	;# 
  1237     060E                     	;# 
  1238     060F                     	;# 
  1239     0610                     	;# 
  1240     0611                     	;# 
  1241     0612                     	;# 
  1242     0613                     	;# 
  1243     0614                     	;# 
  1244     0616                     	;# 
  1245     0616                     	;# 
  1246     0617                     	;# 
  1247     0617                     	;# 
  1248     0618                     	;# 
  1249     0619                     	;# 
  1250     061A                     	;# 
  1251     061B                     	;# 
  1252     061C                     	;# 
  1253     061D                     	;# 
  1254     061E                     	;# 
  1255     070C                     	;# 
  1256     070D                     	;# 
  1257     070E                     	;# 
  1258     070F                     	;# 
  1259     0710                     	;# 
  1260     0711                     	;# 
  1261     0712                     	;# 
  1262     0713                     	;# 
  1263     0714                     	;# 
  1264     0716                     	;# 
  1265     0717                     	;# 
  1266     0718                     	;# 
  1267     0719                     	;# 
  1268     071A                     	;# 
  1269     071B                     	;# 
  1270     071C                     	;# 
  1271     071D                     	;# 
  1272     071E                     	;# 
  1273     0796                     	;# 
  1274     0797                     	;# 
  1275     0798                     	;# 
  1276     0799                     	;# 
  1277     079A                     	;# 
  1278     079B                     	;# 
  1279     079C                     	;# 
  1280     079D                     	;# 
  1281     080C                     	;# 
  1282     080D                     	;# 
  1283     080E                     	;# 
  1284     080F                     	;# 
  1285     0810                     	;# 
  1286     0811                     	;# 
  1287     0812                     	;# 
  1288     0813                     	;# 
  1289     0814                     	;# 
  1290     081A                     	;# 
  1291     081A                     	;# 
  1292     081B                     	;# 
  1293     081C                     	;# 
  1294     081C                     	;# 
  1295     081D                     	;# 
  1296     081E                     	;# 
  1297     081F                     	;# 
  1298     088C                     	;# 
  1299     088D                     	;# 
  1300     088E                     	;# 
  1301     088F                     	;# 
  1302     0890                     	;# 
  1303     0891                     	;# 
  1304     0892                     	;# 
  1305     0893                     	;# 
  1306     0895                     	;# 
  1307     0896                     	;# 
  1308     0897                     	;# 
  1309     0898                     	;# 
  1310     0899                     	;# 
  1311     089A                     	;# 
  1312     089B                     	;# 
  1313     090C                     	;# 
  1314     090E                     	;# 
  1315     090F                     	;# 
  1316     091F                     	;# 
  1317     098F                     	;# 
  1318     098F                     	;# 
  1319     0990                     	;# 
  1320     0991                     	;# 
  1321     0992                     	;# 
  1322     0993                     	;# 
  1323     0994                     	;# 
  1324     0995                     	;# 
  1325     0996                     	;# 
  1326     0997                     	;# 
  1327     1E0F                     	;# 
  1328     1E10                     	;# 
  1329     1E11                     	;# 
  1330     1E12                     	;# 
  1331     1E13                     	;# 
  1332     1E14                     	;# 
  1333     1E15                     	;# 
  1334     1E16                     	;# 
  1335     1E17                     	;# 
  1336     1E18                     	;# 
  1337     1E19                     	;# 
  1338     1E1A                     	;# 
  1339     1E1B                     	;# 
  1340     1E1C                     	;# 
  1341     1E1D                     	;# 
  1342     1E1E                     	;# 
  1343     1E1F                     	;# 
  1344     1E20                     	;# 
  1345     1E21                     	;# 
  1346     1E22                     	;# 
  1347     1E23                     	;# 
  1348     1E24                     	;# 
  1349     1E25                     	;# 
  1350     1E26                     	;# 
  1351     1E27                     	;# 
  1352     1E28                     	;# 
  1353     1E29                     	;# 
  1354     1E2A                     	;# 
  1355     1E2B                     	;# 
  1356     1E2C                     	;# 
  1357     1E2D                     	;# 
  1358     1E2E                     	;# 
  1359     1E2F                     	;# 
  1360     1E30                     	;# 
  1361     1E31                     	;# 
  1362     1E32                     	;# 
  1363     1E33                     	;# 
  1364     1E34                     	;# 
  1365     1E35                     	;# 
  1366     1E36                     	;# 
  1367     1E37                     	;# 
  1368     1E8F                     	;# 
  1369     1E90                     	;# 
  1370     1E91                     	;# 
  1371     1E92                     	;# 
  1372     1E93                     	;# 
  1373     1E94                     	;# 
  1374     1E95                     	;# 
  1375     1E96                     	;# 
  1376     1E97                     	;# 
  1377     1E9C                     	;# 
  1378     1E9D                     	;# 
  1379     1E9E                     	;# 
  1380     1EA1                     	;# 
  1381     1EA2                     	;# 
  1382     1EA3                     	;# 
  1383     1EA4                     	;# 
  1384     1EA9                     	;# 
  1385     1EAA                     	;# 
  1386     1EB1                     	;# 
  1387     1EB2                     	;# 
  1388     1EB8                     	;# 
  1389     1EB9                     	;# 
  1390     1EBA                     	;# 
  1391     1EBB                     	;# 
  1392     1EBC                     	;# 
  1393     1EBD                     	;# 
  1394     1EBE                     	;# 
  1395     1EC3                     	;# 
  1396     1EC5                     	;# 
  1397     1EC6                     	;# 
  1398     1EC7                     	;# 
  1399     1EC8                     	;# 
  1400     1EC9                     	;# 
  1401     1ECA                     	;# 
  1402     1ECB                     	;# 
  1403     1ECC                     	;# 
  1404     1F10                     	;# 
  1405     1F11                     	;# 
  1406     1F12                     	;# 
  1407     1F14                     	;# 
  1408     1F15                     	;# 
  1409     1F20                     	;# 
  1410     1F21                     	;# 
  1411     1F22                     	;# 
  1412     1F23                     	;# 
  1413     1F24                     	;# 
  1414     1F25                     	;# 
  1415     1F38                     	;# 
  1416     1F39                     	;# 
  1417     1F3A                     	;# 
  1418     1F3B                     	;# 
  1419     1F3C                     	;# 
  1420     1F3D                     	;# 
  1421     1F3E                     	;# 
  1422     1F3F                     	;# 
  1423     1F4E                     	;# 
  1424     1F4F                     	;# 
  1425     1F50                     	;# 
  1426     1F51                     	;# 
  1427     1F52                     	;# 
  1428     1F53                     	;# 
  1429     1F54                     	;# 
  1430     1F55                     	;# 
  1431     1FE4                     	;# 
  1432     1FE5                     	;# 
  1433     1FE6                     	;# 
  1434     1FE7                     	;# 
  1435     1FE8                     	;# 
  1436     1FE8                     	;# 
  1437     1FE9                     	;# 
  1438     1FEA                     	;# 
  1439     1FEB                     	;# 
  1440     1FED                     	;# 
  1441     1FEE                     	;# 
  1442     1FEF                     	;# 
  1443     0000                     	;# 
  1444     0001                     	;# 
  1445     0002                     	;# 
  1446     0003                     	;# 
  1447     0004                     	;# 
  1448     0005                     	;# 
  1449     0006                     	;# 
  1450     0007                     	;# 
  1451     0008                     	;# 
  1452     0009                     	;# 
  1453     000A                     	;# 
  1454     000B                     	;# 
  1455     000C                     	;# 
  1456     000E                     	;# 
  1457     0012                     	;# 
  1458     0014                     	;# 
  1459     0018                     	;# 
  1460     001A                     	;# 
  1461     008C                     	;# 
  1462     008C                     	;# 
  1463     008D                     	;# 
  1464     008E                     	;# 
  1465     008E                     	;# 
  1466     008F                     	;# 
  1467     0090                     	;# 
  1468     0090                     	;# 
  1469     0091                     	;# 
  1470     0092                     	;# 
  1471     0092                     	;# 
  1472     0093                     	;# 
  1473     0094                     	;# 
  1474     0094                     	;# 
  1475     0095                     	;# 
  1476     0096                     	;# 
  1477     0096                     	;# 
  1478     0097                     	;# 
  1479     0098                     	;# 
  1480     0099                     	;# 
  1481     009A                     	;# 
  1482     009B                     	;# 
  1483     009B                     	;# 
  1484     009C                     	;# 
  1485     009D                     	;# 
  1486     009D                     	;# 
  1487     009E                     	;# 
  1488     009F                     	;# 
  1489     010C                     	;# 
  1490     010C                     	;# 
  1491     010D                     	;# 
  1492     010E                     	;# 
  1493     010F                     	;# 
  1494     010F                     	;# 
  1495     0110                     	;# 
  1496     0111                     	;# 
  1497     0112                     	;# 
  1498     0113                     	;# 
  1499     0114                     	;# 
  1500     0115                     	;# 
  1501     0116                     	;# 
  1502     0117                     	;# 
  1503     0118                     	;# 
  1504     0119                     	;# 
  1505     0119                     	;# 
  1506     0119                     	;# 
  1507     011A                     	;# 
  1508     011A                     	;# 
  1509     011A                     	;# 
  1510     011B                     	;# 
  1511     011B                     	;# 
  1512     011B                     	;# 
  1513     011B                     	;# 
  1514     011B                     	;# 
  1515     011C                     	;# 
  1516     011C                     	;# 
  1517     011C                     	;# 
  1518     011D                     	;# 
  1519     011D                     	;# 
  1520     011D                     	;# 
  1521     011E                     	;# 
  1522     011E                     	;# 
  1523     011E                     	;# 
  1524     011F                     	;# 
  1525     011F                     	;# 
  1526     011F                     	;# 
  1527     011F                     	;# 
  1528     011F                     	;# 
  1529     018C                     	;# 
  1530     018D                     	;# 
  1531     018E                     	;# 
  1532     018F                     	;# 
  1533     0190                     	;# 
  1534     0191                     	;# 
  1535     0192                     	;# 
  1536     0196                     	;# 
  1537     0197                     	;# 
  1538     0198                     	;# 
  1539     0199                     	;# 
  1540     019A                     	;# 
  1541     019B                     	;# 
  1542     019C                     	;# 
  1543     020C                     	;# 
  1544     020D                     	;# 
  1545     020E                     	;# 
  1546     020E                     	;# 
  1547     020F                     	;# 
  1548     020F                     	;# 
  1549     0210                     	;# 
  1550     0210                     	;# 
  1551     0211                     	;# 
  1552     0211                     	;# 
  1553     0212                     	;# 
  1554     0213                     	;# 
  1555     0214                     	;# 
  1556     0214                     	;# 
  1557     0215                     	;# 
  1558     0215                     	;# 
  1559     0216                     	;# 
  1560     0216                     	;# 
  1561     0217                     	;# 
  1562     0217                     	;# 
  1563     0218                     	;# 
  1564     0219                     	;# 
  1565     021A                     	;# 
  1566     021A                     	;# 
  1567     021B                     	;# 
  1568     021B                     	;# 
  1569     021C                     	;# 
  1570     021C                     	;# 
  1571     021D                     	;# 
  1572     021D                     	;# 
  1573     021E                     	;# 
  1574     021F                     	;# 
  1575     028C                     	;# 
  1576     028C                     	;# 
  1577     028D                     	;# 
  1578     028D                     	;# 
  1579     028E                     	;# 
  1580     028F                     	;# 
  1581     0290                     	;# 
  1582     0291                     	;# 
  1583     0292                     	;# 
  1584     0292                     	;# 
  1585     0293                     	;# 
  1586     0293                     	;# 
  1587     0294                     	;# 
  1588     0295                     	;# 
  1589     0296                     	;# 
  1590     0297                     	;# 
  1591     0298                     	;# 
  1592     0298                     	;# 
  1593     0299                     	;# 
  1594     0299                     	;# 
  1595     029A                     	;# 
  1596     029B                     	;# 
  1597     029C                     	;# 
  1598     029D                     	;# 
  1599     029F                     	;# 
  1600     030C                     	;# 
  1601     030C                     	;# 
  1602     030D                     	;# 
  1603     030E                     	;# 
  1604     030F                     	;# 
  1605     0310                     	;# 
  1606     0310                     	;# 
  1607     0311                     	;# 
  1608     0312                     	;# 
  1609     0313                     	;# 
  1610     0314                     	;# 
  1611     0314                     	;# 
  1612     0315                     	;# 
  1613     0316                     	;# 
  1614     0317                     	;# 
  1615     0318                     	;# 
  1616     0318                     	;# 
  1617     0319                     	;# 
  1618     031A                     	;# 
  1619     031B                     	;# 
  1620     038C                     	;# 
  1621     038C                     	;# 
  1622     038D                     	;# 
  1623     038E                     	;# 
  1624     0390                     	;# 
  1625     0390                     	;# 
  1626     0391                     	;# 
  1627     0392                     	;# 
  1628     048C                     	;# 
  1629     048C                     	;# 
  1630     048D                     	;# 
  1631     048E                     	;# 
  1632     048F                     	;# 
  1633     048F                     	;# 
  1634     0490                     	;# 
  1635     0491                     	;# 
  1636     0492                     	;# 
  1637     0492                     	;# 
  1638     0493                     	;# 
  1639     0494                     	;# 
  1640     0495                     	;# 
  1641     0495                     	;# 
  1642     0496                     	;# 
  1643     0497                     	;# 
  1644     0498                     	;# 
  1645     0499                     	;# 
  1646     049A                     	;# 
  1647     049B                     	;# 
  1648     049C                     	;# 
  1649     049D                     	;# 
  1650     058C                     	;# 
  1651     058C                     	;# 
  1652     058D                     	;# 
  1653     058E                     	;# 
  1654     058F                     	;# 
  1655     058F                     	;# 
  1656     0590                     	;# 
  1657     0591                     	;# 
  1658     0592                     	;# 
  1659     0593                     	;# 
  1660     059C                     	;# 
  1661     059C                     	;# 
  1662     059D                     	;# 
  1663     059D                     	;# 
  1664     059E                     	;# 
  1665     059F                     	;# 
  1666     060C                     	;# 
  1667     060C                     	;# 
  1668     060D                     	;# 
  1669     060D                     	;# 
  1670     060E                     	;# 
  1671     060F                     	;# 
  1672     0610                     	;# 
  1673     0611                     	;# 
  1674     0612                     	;# 
  1675     0613                     	;# 
  1676     0614                     	;# 
  1677     0616                     	;# 
  1678     0616                     	;# 
  1679     0617                     	;# 
  1680     0617                     	;# 
  1681     0618                     	;# 
  1682     0619                     	;# 
  1683     061A                     	;# 
  1684     061B                     	;# 
  1685     061C                     	;# 
  1686     061D                     	;# 
  1687     061E                     	;# 
  1688     070C                     	;# 
  1689     070D                     	;# 
  1690     070E                     	;# 
  1691     070F                     	;# 
  1692     0710                     	;# 
  1693     0711                     	;# 
  1694     0712                     	;# 
  1695     0713                     	;# 
  1696     0714                     	;# 
  1697     0716                     	;# 
  1698     0717                     	;# 
  1699     0718                     	;# 
  1700     0719                     	;# 
  1701     071A                     	;# 
  1702     071B                     	;# 
  1703     071C                     	;# 
  1704     071D                     	;# 
  1705     071E                     	;# 
  1706     0796                     	;# 
  1707     0797                     	;# 
  1708     0798                     	;# 
  1709     0799                     	;# 
  1710     079A                     	;# 
  1711     079B                     	;# 
  1712     079C                     	;# 
  1713     079D                     	;# 
  1714     080C                     	;# 
  1715     080D                     	;# 
  1716     080E                     	;# 
  1717     080F                     	;# 
  1718     0810                     	;# 
  1719     0811                     	;# 
  1720     0812                     	;# 
  1721     0813                     	;# 
  1722     0814                     	;# 
  1723     081A                     	;# 
  1724     081A                     	;# 
  1725     081B                     	;# 
  1726     081C                     	;# 
  1727     081C                     	;# 
  1728     081D                     	;# 
  1729     081E                     	;# 
  1730     081F                     	;# 
  1731     088C                     	;# 
  1732     088D                     	;# 
  1733     088E                     	;# 
  1734     088F                     	;# 
  1735     0890                     	;# 
  1736     0891                     	;# 
  1737     0892                     	;# 
  1738     0893                     	;# 
  1739     0895                     	;# 
  1740     0896                     	;# 
  1741     0897                     	;# 
  1742     0898                     	;# 
  1743     0899                     	;# 
  1744     089A                     	;# 
  1745     089B                     	;# 
  1746     090C                     	;# 
  1747     090E                     	;# 
  1748     090F                     	;# 
  1749     091F                     	;# 
  1750     098F                     	;# 
  1751     098F                     	;# 
  1752     0990                     	;# 
  1753     0991                     	;# 
  1754     0992                     	;# 
  1755     0993                     	;# 
  1756     0994                     	;# 
  1757     0995                     	;# 
  1758     0996                     	;# 
  1759     0997                     	;# 
  1760     1E0F                     	;# 
  1761     1E10                     	;# 
  1762     1E11                     	;# 
  1763     1E12                     	;# 
  1764     1E13                     	;# 
  1765     1E14                     	;# 
  1766     1E15                     	;# 
  1767     1E16                     	;# 
  1768     1E17                     	;# 
  1769     1E18                     	;# 
  1770     1E19                     	;# 
  1771     1E1A                     	;# 
  1772     1E1B                     	;# 
  1773     1E1C                     	;# 
  1774     1E1D                     	;# 
  1775     1E1E                     	;# 
  1776     1E1F                     	;# 
  1777     1E20                     	;# 
  1778     1E21                     	;# 
  1779     1E22                     	;# 
  1780     1E23                     	;# 
  1781     1E24                     	;# 
  1782     1E25                     	;# 
  1783     1E26                     	;# 
  1784     1E27                     	;# 
  1785     1E28                     	;# 
  1786     1E29                     	;# 
  1787     1E2A                     	;# 
  1788     1E2B                     	;# 
  1789     1E2C                     	;# 
  1790     1E2D                     	;# 
  1791     1E2E                     	;# 
  1792     1E2F                     	;# 
  1793     1E30                     	;# 
  1794     1E31                     	;# 
  1795     1E32                     	;# 
  1796     1E33                     	;# 
  1797     1E34                     	;# 
  1798     1E35                     	;# 
  1799     1E36                     	;# 
  1800     1E37                     	;# 
  1801     1E8F                     	;# 
  1802     1E90                     	;# 
  1803     1E91                     	;# 
  1804     1E92                     	;# 
  1805     1E93                     	;# 
  1806     1E94                     	;# 
  1807     1E95                     	;# 
  1808     1E96                     	;# 
  1809     1E97                     	;# 
  1810     1E9C                     	;# 
  1811     1E9D                     	;# 
  1812     1E9E                     	;# 
  1813     1EA1                     	;# 
  1814     1EA2                     	;# 
  1815     1EA3                     	;# 
  1816     1EA4                     	;# 
  1817     1EA9                     	;# 
  1818     1EAA                     	;# 
  1819     1EB1                     	;# 
  1820     1EB2                     	;# 
  1821     1EB8                     	;# 
  1822     1EB9                     	;# 
  1823     1EBA                     	;# 
  1824     1EBB                     	;# 
  1825     1EBC                     	;# 
  1826     1EBD                     	;# 
  1827     1EBE                     	;# 
  1828     1EC3                     	;# 
  1829     1EC5                     	;# 
  1830     1EC6                     	;# 
  1831     1EC7                     	;# 
  1832     1EC8                     	;# 
  1833     1EC9                     	;# 
  1834     1ECA                     	;# 
  1835     1ECB                     	;# 
  1836     1ECC                     	;# 
  1837     1F10                     	;# 
  1838     1F11                     	;# 
  1839     1F12                     	;# 
  1840     1F14                     	;# 
  1841     1F15                     	;# 
  1842     1F20                     	;# 
  1843     1F21                     	;# 
  1844     1F22                     	;# 
  1845     1F23                     	;# 
  1846     1F24                     	;# 
  1847     1F25                     	;# 
  1848     1F38                     	;# 
  1849     1F39                     	;# 
  1850     1F3A                     	;# 
  1851     1F3B                     	;# 
  1852     1F3C                     	;# 
  1853     1F3D                     	;# 
  1854     1F3E                     	;# 
  1855     1F3F                     	;# 
  1856     1F4E                     	;# 
  1857     1F4F                     	;# 
  1858     1F50                     	;# 
  1859     1F51                     	;# 
  1860     1F52                     	;# 
  1861     1F53                     	;# 
  1862     1F54                     	;# 
  1863     1F55                     	;# 
  1864     1FE4                     	;# 
  1865     1FE5                     	;# 
  1866     1FE6                     	;# 
  1867     1FE7                     	;# 
  1868     1FE8                     	;# 
  1869     1FE8                     	;# 
  1870     1FE9                     	;# 
  1871     1FEA                     	;# 
  1872     1FEB                     	;# 
  1873     1FED                     	;# 
  1874     1FEE                     	;# 
  1875     1FEF                     	;# 
  1876     0000                     	;# 
  1877     0001                     	;# 
  1878     0002                     	;# 
  1879     0003                     	;# 
  1880     0004                     	;# 
  1881     0005                     	;# 
  1882     0006                     	;# 
  1883     0007                     	;# 
  1884     0008                     	;# 
  1885     0009                     	;# 
  1886     000A                     	;# 
  1887     000B                     	;# 
  1888     000C                     	;# 
  1889     000E                     	;# 
  1890     0012                     	;# 
  1891     0014                     	;# 
  1892     0018                     	;# 
  1893     001A                     	;# 
  1894     008C                     	;# 
  1895     008C                     	;# 
  1896     008D                     	;# 
  1897     008E                     	;# 
  1898     008E                     	;# 
  1899     008F                     	;# 
  1900     0090                     	;# 
  1901     0090                     	;# 
  1902     0091                     	;# 
  1903     0092                     	;# 
  1904     0092                     	;# 
  1905     0093                     	;# 
  1906     0094                     	;# 
  1907     0094                     	;# 
  1908     0095                     	;# 
  1909     0096                     	;# 
  1910     0096                     	;# 
  1911     0097                     	;# 
  1912     0098                     	;# 
  1913     0099                     	;# 
  1914     009A                     	;# 
  1915     009B                     	;# 
  1916     009B                     	;# 
  1917     009C                     	;# 
  1918     009D                     	;# 
  1919     009D                     	;# 
  1920     009E                     	;# 
  1921     009F                     	;# 
  1922     010C                     	;# 
  1923     010C                     	;# 
  1924     010D                     	;# 
  1925     010E                     	;# 
  1926     010F                     	;# 
  1927     010F                     	;# 
  1928     0110                     	;# 
  1929     0111                     	;# 
  1930     0112                     	;# 
  1931     0113                     	;# 
  1932     0114                     	;# 
  1933     0115                     	;# 
  1934     0116                     	;# 
  1935     0117                     	;# 
  1936     0118                     	;# 
  1937     0119                     	;# 
  1938     0119                     	;# 
  1939     0119                     	;# 
  1940     011A                     	;# 
  1941     011A                     	;# 
  1942     011A                     	;# 
  1943     011B                     	;# 
  1944     011B                     	;# 
  1945     011B                     	;# 
  1946     011B                     	;# 
  1947     011B                     	;# 
  1948     011C                     	;# 
  1949     011C                     	;# 
  1950     011C                     	;# 
  1951     011D                     	;# 
  1952     011D                     	;# 
  1953     011D                     	;# 
  1954     011E                     	;# 
  1955     011E                     	;# 
  1956     011E                     	;# 
  1957     011F                     	;# 
  1958     011F                     	;# 
  1959     011F                     	;# 
  1960     011F                     	;# 
  1961     011F                     	;# 
  1962     018C                     	;# 
  1963     018D                     	;# 
  1964     018E                     	;# 
  1965     018F                     	;# 
  1966     0190                     	;# 
  1967     0191                     	;# 
  1968     0192                     	;# 
  1969     0196                     	;# 
  1970     0197                     	;# 
  1971     0198                     	;# 
  1972     0199                     	;# 
  1973     019A                     	;# 
  1974     019B                     	;# 
  1975     019C                     	;# 
  1976     020C                     	;# 
  1977     020D                     	;# 
  1978     020E                     	;# 
  1979     020E                     	;# 
  1980     020F                     	;# 
  1981     020F                     	;# 
  1982     0210                     	;# 
  1983     0210                     	;# 
  1984     0211                     	;# 
  1985     0211                     	;# 
  1986     0212                     	;# 
  1987     0213                     	;# 
  1988     0214                     	;# 
  1989     0214                     	;# 
  1990     0215                     	;# 
  1991     0215                     	;# 
  1992     0216                     	;# 
  1993     0216                     	;# 
  1994     0217                     	;# 
  1995     0217                     	;# 
  1996     0218                     	;# 
  1997     0219                     	;# 
  1998     021A                     	;# 
  1999     021A                     	;# 
  2000     021B                     	;# 
  2001     021B                     	;# 
  2002     021C                     	;# 
  2003     021C                     	;# 
  2004     021D                     	;# 
  2005     021D                     	;# 
  2006     021E                     	;# 
  2007     021F                     	;# 
  2008     028C                     	;# 
  2009     028C                     	;# 
  2010     028D                     	;# 
  2011     028D                     	;# 
  2012     028E                     	;# 
  2013     028F                     	;# 
  2014     0290                     	;# 
  2015     0291                     	;# 
  2016     0292                     	;# 
  2017     0292                     	;# 
  2018     0293                     	;# 
  2019     0293                     	;# 
  2020     0294                     	;# 
  2021     0295                     	;# 
  2022     0296                     	;# 
  2023     0297                     	;# 
  2024     0298                     	;# 
  2025     0298                     	;# 
  2026     0299                     	;# 
  2027     0299                     	;# 
  2028     029A                     	;# 
  2029     029B                     	;# 
  2030     029C                     	;# 
  2031     029D                     	;# 
  2032     029F                     	;# 
  2033     030C                     	;# 
  2034     030C                     	;# 
  2035     030D                     	;# 
  2036     030E                     	;# 
  2037     030F                     	;# 
  2038     0310                     	;# 
  2039     0310                     	;# 
  2040     0311                     	;# 
  2041     0312                     	;# 
  2042     0313                     	;# 
  2043     0314                     	;# 
  2044     0314                     	;# 
  2045     0315                     	;# 
  2046     0316                     	;# 
  2047     0317                     	;# 
  2048     0318                     	;# 
  2049     0318                     	;# 
  2050     0319                     	;# 
  2051     031A                     	;# 
  2052     031B                     	;# 
  2053     038C                     	;# 
  2054     038C                     	;# 
  2055     038D                     	;# 
  2056     038E                     	;# 
  2057     0390                     	;# 
  2058     0390                     	;# 
  2059     0391                     	;# 
  2060     0392                     	;# 
  2061     048C                     	;# 
  2062     048C                     	;# 
  2063     048D                     	;# 
  2064     048E                     	;# 
  2065     048F                     	;# 
  2066     048F                     	;# 
  2067     0490                     	;# 
  2068     0491                     	;# 
  2069     0492                     	;# 
  2070     0492                     	;# 
  2071     0493                     	;# 
  2072     0494                     	;# 
  2073     0495                     	;# 
  2074     0495                     	;# 
  2075     0496                     	;# 
  2076     0497                     	;# 
  2077     0498                     	;# 
  2078     0499                     	;# 
  2079     049A                     	;# 
  2080     049B                     	;# 
  2081     049C                     	;# 
  2082     049D                     	;# 
  2083     058C                     	;# 
  2084     058C                     	;# 
  2085     058D                     	;# 
  2086     058E                     	;# 
  2087     058F                     	;# 
  2088     058F                     	;# 
  2089     0590                     	;# 
  2090     0591                     	;# 
  2091     0592                     	;# 
  2092     0593                     	;# 
  2093     059C                     	;# 
  2094     059C                     	;# 
  2095     059D                     	;# 
  2096     059D                     	;# 
  2097     059E                     	;# 
  2098     059F                     	;# 
  2099     060C                     	;# 
  2100     060C                     	;# 
  2101     060D                     	;# 
  2102     060D                     	;# 
  2103     060E                     	;# 
  2104     060F                     	;# 
  2105     0610                     	;# 
  2106     0611                     	;# 
  2107     0612                     	;# 
  2108     0613                     	;# 
  2109     0614                     	;# 
  2110     0616                     	;# 
  2111     0616                     	;# 
  2112     0617                     	;# 
  2113     0617                     	;# 
  2114     0618                     	;# 
  2115     0619                     	;# 
  2116     061A                     	;# 
  2117     061B                     	;# 
  2118     061C                     	;# 
  2119     061D                     	;# 
  2120     061E                     	;# 
  2121     070C                     	;# 
  2122     070D                     	;# 
  2123     070E                     	;# 
  2124     070F                     	;# 
  2125     0710                     	;# 
  2126     0711                     	;# 
  2127     0712                     	;# 
  2128     0713                     	;# 
  2129     0714                     	;# 
  2130     0716                     	;# 
  2131     0717                     	;# 
  2132     0718                     	;# 
  2133     0719                     	;# 
  2134     071A                     	;# 
  2135     071B                     	;# 
  2136     071C                     	;# 
  2137     071D                     	;# 
  2138     071E                     	;# 
  2139     0796                     	;# 
  2140     0797                     	;# 
  2141     0798                     	;# 
  2142     0799                     	;# 
  2143     079A                     	;# 
  2144     079B                     	;# 
  2145     079C                     	;# 
  2146     079D                     	;# 
  2147     080C                     	;# 
  2148     080D                     	;# 
  2149     080E                     	;# 
  2150     080F                     	;# 
  2151     0810                     	;# 
  2152     0811                     	;# 
  2153     0812                     	;# 
  2154     0813                     	;# 
  2155     0814                     	;# 
  2156     081A                     	;# 
  2157     081A                     	;# 
  2158     081B                     	;# 
  2159     081C                     	;# 
  2160     081C                     	;# 
  2161     081D                     	;# 
  2162     081E                     	;# 
  2163     081F                     	;# 
  2164     088C                     	;# 
  2165     088D                     	;# 
  2166     088E                     	;# 
  2167     088F                     	;# 
  2168     0890                     	;# 
  2169     0891                     	;# 
  2170     0892                     	;# 
  2171     0893                     	;# 
  2172     0895                     	;# 
  2173     0896                     	;# 
  2174     0897                     	;# 
  2175     0898                     	;# 
  2176     0899                     	;# 
  2177     089A                     	;# 
  2178     089B                     	;# 
  2179     090C                     	;# 
  2180     090E                     	;# 
  2181     090F                     	;# 
  2182     091F                     	;# 
  2183     098F                     	;# 
  2184     098F                     	;# 
  2185     0990                     	;# 
  2186     0991                     	;# 
  2187     0992                     	;# 
  2188     0993                     	;# 
  2189     0994                     	;# 
  2190     0995                     	;# 
  2191     0996                     	;# 
  2192     0997                     	;# 
  2193     1E0F                     	;# 
  2194     1E10                     	;# 
  2195     1E11                     	;# 
  2196     1E12                     	;# 
  2197     1E13                     	;# 
  2198     1E14                     	;# 
  2199     1E15                     	;# 
  2200     1E16                     	;# 
  2201     1E17                     	;# 
  2202     1E18                     	;# 
  2203     1E19                     	;# 
  2204     1E1A                     	;# 
  2205     1E1B                     	;# 
  2206     1E1C                     	;# 
  2207     1E1D                     	;# 
  2208     1E1E                     	;# 
  2209     1E1F                     	;# 
  2210     1E20                     	;# 
  2211     1E21                     	;# 
  2212     1E22                     	;# 
  2213     1E23                     	;# 
  2214     1E24                     	;# 
  2215     1E25                     	;# 
  2216     1E26                     	;# 
  2217     1E27                     	;# 
  2218     1E28                     	;# 
  2219     1E29                     	;# 
  2220     1E2A                     	;# 
  2221     1E2B                     	;# 
  2222     1E2C                     	;# 
  2223     1E2D                     	;# 
  2224     1E2E                     	;# 
  2225     1E2F                     	;# 
  2226     1E30                     	;# 
  2227     1E31                     	;# 
  2228     1E32                     	;# 
  2229     1E33                     	;# 
  2230     1E34                     	;# 
  2231     1E35                     	;# 
  2232     1E36                     	;# 
  2233     1E37                     	;# 
  2234     1E8F                     	;# 
  2235     1E90                     	;# 
  2236     1E91                     	;# 
  2237     1E92                     	;# 
  2238     1E93                     	;# 
  2239     1E94                     	;# 
  2240     1E95                     	;# 
  2241     1E96                     	;# 
  2242     1E97                     	;# 
  2243     1E9C                     	;# 
  2244     1E9D                     	;# 
  2245     1E9E                     	;# 
  2246     1EA1                     	;# 
  2247     1EA2                     	;# 
  2248     1EA3                     	;# 
  2249     1EA4                     	;# 
  2250     1EA9                     	;# 
  2251     1EAA                     	;# 
  2252     1EB1                     	;# 
  2253     1EB2                     	;# 
  2254     1EB8                     	;# 
  2255     1EB9                     	;# 
  2256     1EBA                     	;# 
  2257     1EBB                     	;# 
  2258     1EBC                     	;# 
  2259     1EBD                     	;# 
  2260     1EBE                     	;# 
  2261     1EC3                     	;# 
  2262     1EC5                     	;# 
  2263     1EC6                     	;# 
  2264     1EC7                     	;# 
  2265     1EC8                     	;# 
  2266     1EC9                     	;# 
  2267     1ECA                     	;# 
  2268     1ECB                     	;# 
  2269     1ECC                     	;# 
  2270     1F10                     	;# 
  2271     1F11                     	;# 
  2272     1F12                     	;# 
  2273     1F14                     	;# 
  2274     1F15                     	;# 
  2275     1F20                     	;# 
  2276     1F21                     	;# 
  2277     1F22                     	;# 
  2278     1F23                     	;# 
  2279     1F24                     	;# 
  2280     1F25                     	;# 
  2281     1F38                     	;# 
  2282     1F39                     	;# 
  2283     1F3A                     	;# 
  2284     1F3B                     	;# 
  2285     1F3C                     	;# 
  2286     1F3D                     	;# 
  2287     1F3E                     	;# 
  2288     1F3F                     	;# 
  2289     1F4E                     	;# 
  2290     1F4F                     	;# 
  2291     1F50                     	;# 
  2292     1F51                     	;# 
  2293     1F52                     	;# 
  2294     1F53                     	;# 
  2295     1F54                     	;# 
  2296     1F55                     	;# 
  2297     1FE4                     	;# 
  2298     1FE5                     	;# 
  2299     1FE6                     	;# 
  2300     1FE7                     	;# 
  2301     1FE8                     	;# 
  2302     1FE8                     	;# 
  2303     1FE9                     	;# 
  2304     1FEA                     	;# 
  2305     1FEB                     	;# 
  2306     1FED                     	;# 
  2307     1FEE                     	;# 
  2308     1FEF                     	;# 
  2309     0000                     	;# 
  2310     0001                     	;# 
  2311     0002                     	;# 
  2312     0003                     	;# 
  2313     0004                     	;# 
  2314     0005                     	;# 
  2315     0006                     	;# 
  2316     0007                     	;# 
  2317     0008                     	;# 
  2318     0009                     	;# 
  2319     000A                     	;# 
  2320     000B                     	;# 
  2321     000C                     	;# 
  2322     000E                     	;# 
  2323     0012                     	;# 
  2324     0014                     	;# 
  2325     0018                     	;# 
  2326     001A                     	;# 
  2327     008C                     	;# 
  2328     008C                     	;# 
  2329     008D                     	;# 
  2330     008E                     	;# 
  2331     008E                     	;# 
  2332     008F                     	;# 
  2333     0090                     	;# 
  2334     0090                     	;# 
  2335     0091                     	;# 
  2336     0092                     	;# 
  2337     0092                     	;# 
  2338     0093                     	;# 
  2339     0094                     	;# 
  2340     0094                     	;# 
  2341     0095                     	;# 
  2342     0096                     	;# 
  2343     0096                     	;# 
  2344     0097                     	;# 
  2345     0098                     	;# 
  2346     0099                     	;# 
  2347     009A                     	;# 
  2348     009B                     	;# 
  2349     009B                     	;# 
  2350     009C                     	;# 
  2351     009D                     	;# 
  2352     009D                     	;# 
  2353     009E                     	;# 
  2354     009F                     	;# 
  2355     010C                     	;# 
  2356     010C                     	;# 
  2357     010D                     	;# 
  2358     010E                     	;# 
  2359     010F                     	;# 
  2360     010F                     	;# 
  2361     0110                     	;# 
  2362     0111                     	;# 
  2363     0112                     	;# 
  2364     0113                     	;# 
  2365     0114                     	;# 
  2366     0115                     	;# 
  2367     0116                     	;# 
  2368     0117                     	;# 
  2369     0118                     	;# 
  2370     0119                     	;# 
  2371     0119                     	;# 
  2372     0119                     	;# 
  2373     011A                     	;# 
  2374     011A                     	;# 
  2375     011A                     	;# 
  2376     011B                     	;# 
  2377     011B                     	;# 
  2378     011B                     	;# 
  2379     011B                     	;# 
  2380     011B                     	;# 
  2381     011C                     	;# 
  2382     011C                     	;# 
  2383     011C                     	;# 
  2384     011D                     	;# 
  2385     011D                     	;# 
  2386     011D                     	;# 
  2387     011E                     	;# 
  2388     011E                     	;# 
  2389     011E                     	;# 
  2390     011F                     	;# 
  2391     011F                     	;# 
  2392     011F                     	;# 
  2393     011F                     	;# 
  2394     011F                     	;# 
  2395     018C                     	;# 
  2396     018D                     	;# 
  2397     018E                     	;# 
  2398     018F                     	;# 
  2399     0190                     	;# 
  2400     0191                     	;# 
  2401     0192                     	;# 
  2402     0196                     	;# 
  2403     0197                     	;# 
  2404     0198                     	;# 
  2405     0199                     	;# 
  2406     019A                     	;# 
  2407     019B                     	;# 
  2408     019C                     	;# 
  2409     020C                     	;# 
  2410     020D                     	;# 
  2411     020E                     	;# 
  2412     020E                     	;# 
  2413     020F                     	;# 
  2414     020F                     	;# 
  2415     0210                     	;# 
  2416     0210                     	;# 
  2417     0211                     	;# 
  2418     0211                     	;# 
  2419     0212                     	;# 
  2420     0213                     	;# 
  2421     0214                     	;# 
  2422     0214                     	;# 
  2423     0215                     	;# 
  2424     0215                     	;# 
  2425     0216                     	;# 
  2426     0216                     	;# 
  2427     0217                     	;# 
  2428     0217                     	;# 
  2429     0218                     	;# 
  2430     0219                     	;# 
  2431     021A                     	;# 
  2432     021A                     	;# 
  2433     021B                     	;# 
  2434     021B                     	;# 
  2435     021C                     	;# 
  2436     021C                     	;# 
  2437     021D                     	;# 
  2438     021D                     	;# 
  2439     021E                     	;# 
  2440     021F                     	;# 
  2441     028C                     	;# 
  2442     028C                     	;# 
  2443     028D                     	;# 
  2444     028D                     	;# 
  2445     028E                     	;# 
  2446     028F                     	;# 
  2447     0290                     	;# 
  2448     0291                     	;# 
  2449     0292                     	;# 
  2450     0292                     	;# 
  2451     0293                     	;# 
  2452     0293                     	;# 
  2453     0294                     	;# 
  2454     0295                     	;# 
  2455     0296                     	;# 
  2456     0297                     	;# 
  2457     0298                     	;# 
  2458     0298                     	;# 
  2459     0299                     	;# 
  2460     0299                     	;# 
  2461     029A                     	;# 
  2462     029B                     	;# 
  2463     029C                     	;# 
  2464     029D                     	;# 
  2465     029F                     	;# 
  2466     030C                     	;# 
  2467     030C                     	;# 
  2468     030D                     	;# 
  2469     030E                     	;# 
  2470     030F                     	;# 
  2471     0310                     	;# 
  2472     0310                     	;# 
  2473     0311                     	;# 
  2474     0312                     	;# 
  2475     0313                     	;# 
  2476     0314                     	;# 
  2477     0314                     	;# 
  2478     0315                     	;# 
  2479     0316                     	;# 
  2480     0317                     	;# 
  2481     0318                     	;# 
  2482     0318                     	;# 
  2483     0319                     	;# 
  2484     031A                     	;# 
  2485     031B                     	;# 
  2486     038C                     	;# 
  2487     038C                     	;# 
  2488     038D                     	;# 
  2489     038E                     	;# 
  2490     0390                     	;# 
  2491     0390                     	;# 
  2492     0391                     	;# 
  2493     0392                     	;# 
  2494     048C                     	;# 
  2495     048C                     	;# 
  2496     048D                     	;# 
  2497     048E                     	;# 
  2498     048F                     	;# 
  2499     048F                     	;# 
  2500     0490                     	;# 
  2501     0491                     	;# 
  2502     0492                     	;# 
  2503     0492                     	;# 
  2504     0493                     	;# 
  2505     0494                     	;# 
  2506     0495                     	;# 
  2507     0495                     	;# 
  2508     0496                     	;# 
  2509     0497                     	;# 
  2510     0498                     	;# 
  2511     0499                     	;# 
  2512     049A                     	;# 
  2513     049B                     	;# 
  2514     049C                     	;# 
  2515     049D                     	;# 
  2516     058C                     	;# 
  2517     058C                     	;# 
  2518     058D                     	;# 
  2519     058E                     	;# 
  2520     058F                     	;# 
  2521     058F                     	;# 
  2522     0590                     	;# 
  2523     0591                     	;# 
  2524     0592                     	;# 
  2525     0593                     	;# 
  2526     059C                     	;# 
  2527     059C                     	;# 
  2528     059D                     	;# 
  2529     059D                     	;# 
  2530     059E                     	;# 
  2531     059F                     	;# 
  2532     060C                     	;# 
  2533     060C                     	;# 
  2534     060D                     	;# 
  2535     060D                     	;# 
  2536     060E                     	;# 
  2537     060F                     	;# 
  2538     0610                     	;# 
  2539     0611                     	;# 
  2540     0612                     	;# 
  2541     0613                     	;# 
  2542     0614                     	;# 
  2543     0616                     	;# 
  2544     0616                     	;# 
  2545     0617                     	;# 
  2546     0617                     	;# 
  2547     0618                     	;# 
  2548     0619                     	;# 
  2549     061A                     	;# 
  2550     061B                     	;# 
  2551     061C                     	;# 
  2552     061D                     	;# 
  2553     061E                     	;# 
  2554     070C                     	;# 
  2555     070D                     	;# 
  2556     070E                     	;# 
  2557     070F                     	;# 
  2558     0710                     	;# 
  2559     0711                     	;# 
  2560     0712                     	;# 
  2561     0713                     	;# 
  2562     0714                     	;# 
  2563     0716                     	;# 
  2564     0717                     	;# 
  2565     0718                     	;# 
  2566     0719                     	;# 
  2567     071A                     	;# 
  2568     071B                     	;# 
  2569     071C                     	;# 
  2570     071D                     	;# 
  2571     071E                     	;# 
  2572     0796                     	;# 
  2573     0797                     	;# 
  2574     0798                     	;# 
  2575     0799                     	;# 
  2576     079A                     	;# 
  2577     079B                     	;# 
  2578     079C                     	;# 
  2579     079D                     	;# 
  2580     080C                     	;# 
  2581     080D                     	;# 
  2582     080E                     	;# 
  2583     080F                     	;# 
  2584     0810                     	;# 
  2585     0811                     	;# 
  2586     0812                     	;# 
  2587     0813                     	;# 
  2588     0814                     	;# 
  2589     081A                     	;# 
  2590     081A                     	;# 
  2591     081B                     	;# 
  2592     081C                     	;# 
  2593     081C                     	;# 
  2594     081D                     	;# 
  2595     081E                     	;# 
  2596     081F                     	;# 
  2597     088C                     	;# 
  2598     088D                     	;# 
  2599     088E                     	;# 
  2600     088F                     	;# 
  2601     0890                     	;# 
  2602     0891                     	;# 
  2603     0892                     	;# 
  2604     0893                     	;# 
  2605     0895                     	;# 
  2606     0896                     	;# 
  2607     0897                     	;# 
  2608     0898                     	;# 
  2609     0899                     	;# 
  2610     089A                     	;# 
  2611     089B                     	;# 
  2612     090C                     	;# 
  2613     090E                     	;# 
  2614     090F                     	;# 
  2615     091F                     	;# 
  2616     098F                     	;# 
  2617     098F                     	;# 
  2618     0990                     	;# 
  2619     0991                     	;# 
  2620     0992                     	;# 
  2621     0993                     	;# 
  2622     0994                     	;# 
  2623     0995                     	;# 
  2624     0996                     	;# 
  2625     0997                     	;# 
  2626     1E0F                     	;# 
  2627     1E10                     	;# 
  2628     1E11                     	;# 
  2629     1E12                     	;# 
  2630     1E13                     	;# 
  2631     1E14                     	;# 
  2632     1E15                     	;# 
  2633     1E16                     	;# 
  2634     1E17                     	;# 
  2635     1E18                     	;# 
  2636     1E19                     	;# 
  2637     1E1A                     	;# 
  2638     1E1B                     	;# 
  2639     1E1C                     	;# 
  2640     1E1D                     	;# 
  2641     1E1E                     	;# 
  2642     1E1F                     	;# 
  2643     1E20                     	;# 
  2644     1E21                     	;# 
  2645     1E22                     	;# 
  2646     1E23                     	;# 
  2647     1E24                     	;# 
  2648     1E25                     	;# 
  2649     1E26                     	;# 
  2650     1E27                     	;# 
  2651     1E28                     	;# 
  2652     1E29                     	;# 
  2653     1E2A                     	;# 
  2654     1E2B                     	;# 
  2655     1E2C                     	;# 
  2656     1E2D                     	;# 
  2657     1E2E                     	;# 
  2658     1E2F                     	;# 
  2659     1E30                     	;# 
  2660     1E31                     	;# 
  2661     1E32                     	;# 
  2662     1E33                     	;# 
  2663     1E34                     	;# 
  2664     1E35                     	;# 
  2665     1E36                     	;# 
  2666     1E37                     	;# 
  2667     1E8F                     	;# 
  2668     1E90                     	;# 
  2669     1E91                     	;# 
  2670     1E92                     	;# 
  2671     1E93                     	;# 
  2672     1E94                     	;# 
  2673     1E95                     	;# 
  2674     1E96                     	;# 
  2675     1E97                     	;# 
  2676     1E9C                     	;# 
  2677     1E9D                     	;# 
  2678     1E9E                     	;# 
  2679     1EA1                     	;# 
  2680     1EA2                     	;# 
  2681     1EA3                     	;# 
  2682     1EA4                     	;# 
  2683     1EA9                     	;# 
  2684     1EAA                     	;# 
  2685     1EB1                     	;# 
  2686     1EB2                     	;# 
  2687     1EB8                     	;# 
  2688     1EB9                     	;# 
  2689     1EBA                     	;# 
  2690     1EBB                     	;# 
  2691     1EBC                     	;# 
  2692     1EBD                     	;# 
  2693     1EBE                     	;# 
  2694     1EC3                     	;# 
  2695     1EC5                     	;# 
  2696     1EC6                     	;# 
  2697     1EC7                     	;# 
  2698     1EC8                     	;# 
  2699     1EC9                     	;# 
  2700     1ECA                     	;# 
  2701     1ECB                     	;# 
  2702     1ECC                     	;# 
  2703     1F10                     	;# 
  2704     1F11                     	;# 
  2705     1F12                     	;# 
  2706     1F14                     	;# 
  2707     1F15                     	;# 
  2708     1F20                     	;# 
  2709     1F21                     	;# 
  2710     1F22                     	;# 
  2711     1F23                     	;# 
  2712     1F24                     	;# 
  2713     1F25                     	;# 
  2714     1F38                     	;# 
  2715     1F39                     	;# 
  2716     1F3A                     	;# 
  2717     1F3B                     	;# 
  2718     1F3C                     	;# 
  2719     1F3D                     	;# 
  2720     1F3E                     	;# 
  2721     1F3F                     	;# 
  2722     1F4E                     	;# 
  2723     1F4F                     	;# 
  2724     1F50                     	;# 
  2725     1F51                     	;# 
  2726     1F52                     	;# 
  2727     1F53                     	;# 
  2728     1F54                     	;# 
  2729     1F55                     	;# 
  2730     1FE4                     	;# 
  2731     1FE5                     	;# 
  2732     1FE6                     	;# 
  2733     1FE7                     	;# 
  2734     1FE8                     	;# 
  2735     1FE8                     	;# 
  2736     1FE9                     	;# 
  2737     1FEA                     	;# 
  2738     1FEB                     	;# 
  2739     1FED                     	;# 
  2740     1FEE                     	;# 
  2741     1FEF                     	;# 
  2742     0000                     	;# 
  2743     0001                     	;# 
  2744     0002                     	;# 
  2745     0003                     	;# 
  2746     0004                     	;# 
  2747     0005                     	;# 
  2748     0006                     	;# 
  2749     0007                     	;# 
  2750     0008                     	;# 
  2751     0009                     	;# 
  2752     000A                     	;# 
  2753     000B                     	;# 
  2754     000C                     	;# 
  2755     000E                     	;# 
  2756     0012                     	;# 
  2757     0014                     	;# 
  2758     0018                     	;# 
  2759     001A                     	;# 
  2760     008C                     	;# 
  2761     008C                     	;# 
  2762     008D                     	;# 
  2763     008E                     	;# 
  2764     008E                     	;# 
  2765     008F                     	;# 
  2766     0090                     	;# 
  2767     0090                     	;# 
  2768     0091                     	;# 
  2769     0092                     	;# 
  2770     0092                     	;# 
  2771     0093                     	;# 
  2772     0094                     	;# 
  2773     0094                     	;# 
  2774     0095                     	;# 
  2775     0096                     	;# 
  2776     0096                     	;# 
  2777     0097                     	;# 
  2778     0098                     	;# 
  2779     0099                     	;# 
  2780     009A                     	;# 
  2781     009B                     	;# 
  2782     009B                     	;# 
  2783     009C                     	;# 
  2784     009D                     	;# 
  2785     009D                     	;# 
  2786     009E                     	;# 
  2787     009F                     	;# 
  2788     010C                     	;# 
  2789     010C                     	;# 
  2790     010D                     	;# 
  2791     010E                     	;# 
  2792     010F                     	;# 
  2793     010F                     	;# 
  2794     0110                     	;# 
  2795     0111                     	;# 
  2796     0112                     	;# 
  2797     0113                     	;# 
  2798     0114                     	;# 
  2799     0115                     	;# 
  2800     0116                     	;# 
  2801     0117                     	;# 
  2802     0118                     	;# 
  2803     0119                     	;# 
  2804     0119                     	;# 
  2805     0119                     	;# 
  2806     011A                     	;# 
  2807     011A                     	;# 
  2808     011A                     	;# 
  2809     011B                     	;# 
  2810     011B                     	;# 
  2811     011B                     	;# 
  2812     011B                     	;# 
  2813     011B                     	;# 
  2814     011C                     	;# 
  2815     011C                     	;# 
  2816     011C                     	;# 
  2817     011D                     	;# 
  2818     011D                     	;# 
  2819     011D                     	;# 
  2820     011E                     	;# 
  2821     011E                     	;# 
  2822     011E                     	;# 
  2823     011F                     	;# 
  2824     011F                     	;# 
  2825     011F                     	;# 
  2826     011F                     	;# 
  2827     011F                     	;# 
  2828     018C                     	;# 
  2829     018D                     	;# 
  2830     018E                     	;# 
  2831     018F                     	;# 
  2832     0190                     	;# 
  2833     0191                     	;# 
  2834     0192                     	;# 
  2835     0196                     	;# 
  2836     0197                     	;# 
  2837     0198                     	;# 
  2838     0199                     	;# 
  2839     019A                     	;# 
  2840     019B                     	;# 
  2841     019C                     	;# 
  2842     020C                     	;# 
  2843     020D                     	;# 
  2844     020E                     	;# 
  2845     020E                     	;# 
  2846     020F                     	;# 
  2847     020F                     	;# 
  2848     0210                     	;# 
  2849     0210                     	;# 
  2850     0211                     	;# 
  2851     0211                     	;# 
  2852     0212                     	;# 
  2853     0213                     	;# 
  2854     0214                     	;# 
  2855     0214                     	;# 
  2856     0215                     	;# 
  2857     0215                     	;# 
  2858     0216                     	;# 
  2859     0216                     	;# 
  2860     0217                     	;# 
  2861     0217                     	;# 
  2862     0218                     	;# 
  2863     0219                     	;# 
  2864     021A                     	;# 
  2865     021A                     	;# 
  2866     021B                     	;# 
  2867     021B                     	;# 
  2868     021C                     	;# 
  2869     021C                     	;# 
  2870     021D                     	;# 
  2871     021D                     	;# 
  2872     021E                     	;# 
  2873     021F                     	;# 
  2874     028C                     	;# 
  2875     028C                     	;# 
  2876     028D                     	;# 
  2877     028D                     	;# 
  2878     028E                     	;# 
  2879     028F                     	;# 
  2880     0290                     	;# 
  2881     0291                     	;# 
  2882     0292                     	;# 
  2883     0292                     	;# 
  2884     0293                     	;# 
  2885     0293                     	;# 
  2886     0294                     	;# 
  2887     0295                     	;# 
  2888     0296                     	;# 
  2889     0297                     	;# 
  2890     0298                     	;# 
  2891     0298                     	;# 
  2892     0299                     	;# 
  2893     0299                     	;# 
  2894     029A                     	;# 
  2895     029B                     	;# 
  2896     029C                     	;# 
  2897     029D                     	;# 
  2898     029F                     	;# 
  2899     030C                     	;# 
  2900     030C                     	;# 
  2901     030D                     	;# 
  2902     030E                     	;# 
  2903     030F                     	;# 
  2904     0310                     	;# 
  2905     0310                     	;# 
  2906     0311                     	;# 
  2907     0312                     	;# 
  2908     0313                     	;# 
  2909     0314                     	;# 
  2910     0314                     	;# 
  2911     0315                     	;# 
  2912     0316                     	;# 
  2913     0317                     	;# 
  2914     0318                     	;# 
  2915     0318                     	;# 
  2916     0319                     	;# 
  2917     031A                     	;# 
  2918     031B                     	;# 
  2919     038C                     	;# 
  2920     038C                     	;# 
  2921     038D                     	;# 
  2922     038E                     	;# 
  2923     0390                     	;# 
  2924     0390                     	;# 
  2925     0391                     	;# 
  2926     0392                     	;# 
  2927     048C                     	;# 
  2928     048C                     	;# 
  2929     048D                     	;# 
  2930     048E                     	;# 
  2931     048F                     	;# 
  2932     048F                     	;# 
  2933     0490                     	;# 
  2934     0491                     	;# 
  2935     0492                     	;# 
  2936     0492                     	;# 
  2937     0493                     	;# 
  2938     0494                     	;# 
  2939     0495                     	;# 
  2940     0495                     	;# 
  2941     0496                     	;# 
  2942     0497                     	;# 
  2943     0498                     	;# 
  2944     0499                     	;# 
  2945     049A                     	;# 
  2946     049B                     	;# 
  2947     049C                     	;# 
  2948     049D                     	;# 
  2949     058C                     	;# 
  2950     058C                     	;# 
  2951     058D                     	;# 
  2952     058E                     	;# 
  2953     058F                     	;# 
  2954     058F                     	;# 
  2955     0590                     	;# 
  2956     0591                     	;# 
  2957     0592                     	;# 
  2958     0593                     	;# 
  2959     059C                     	;# 
  2960     059C                     	;# 
  2961     059D                     	;# 
  2962     059D                     	;# 
  2963     059E                     	;# 
  2964     059F                     	;# 
  2965     060C                     	;# 
  2966     060C                     	;# 
  2967     060D                     	;# 
  2968     060D                     	;# 
  2969     060E                     	;# 
  2970     060F                     	;# 
  2971     0610                     	;# 
  2972     0611                     	;# 
  2973     0612                     	;# 
  2974     0613                     	;# 
  2975     0614                     	;# 
  2976     0616                     	;# 
  2977     0616                     	;# 
  2978     0617                     	;# 
  2979     0617                     	;# 
  2980     0618                     	;# 
  2981     0619                     	;# 
  2982     061A                     	;# 
  2983     061B                     	;# 
  2984     061C                     	;# 
  2985     061D                     	;# 
  2986     061E                     	;# 
  2987     070C                     	;# 
  2988     070D                     	;# 
  2989     070E                     	;# 
  2990     070F                     	;# 
  2991     0710                     	;# 
  2992     0711                     	;# 
  2993     0712                     	;# 
  2994     0713                     	;# 
  2995     0714                     	;# 
  2996     0716                     	;# 
  2997     0717                     	;# 
  2998     0718                     	;# 
  2999     0719                     	;# 
  3000     071A                     	;# 
  3001     071B                     	;# 
  3002     071C                     	;# 
  3003     071D                     	;# 
  3004     071E                     	;# 
  3005     0796                     	;# 
  3006     0797                     	;# 
  3007     0798                     	;# 
  3008     0799                     	;# 
  3009     079A                     	;# 
  3010     079B                     	;# 
  3011     079C                     	;# 
  3012     079D                     	;# 
  3013     080C                     	;# 
  3014     080D                     	;# 
  3015     080E                     	;# 
  3016     080F                     	;# 
  3017     0810                     	;# 
  3018     0811                     	;# 
  3019     0812                     	;# 
  3020     0813                     	;# 
  3021     0814                     	;# 
  3022     081A                     	;# 
  3023     081A                     	;# 
  3024     081B                     	;# 
  3025     081C                     	;# 
  3026     081C                     	;# 
  3027     081D                     	;# 
  3028     081E                     	;# 
  3029     081F                     	;# 
  3030     088C                     	;# 
  3031     088D                     	;# 
  3032     088E                     	;# 
  3033     088F                     	;# 
  3034     0890                     	;# 
  3035     0891                     	;# 
  3036     0892                     	;# 
  3037     0893                     	;# 
  3038     0895                     	;# 
  3039     0896                     	;# 
  3040     0897                     	;# 
  3041     0898                     	;# 
  3042     0899                     	;# 
  3043     089A                     	;# 
  3044     089B                     	;# 
  3045     090C                     	;# 
  3046     090E                     	;# 
  3047     090F                     	;# 
  3048     091F                     	;# 
  3049     098F                     	;# 
  3050     098F                     	;# 
  3051     0990                     	;# 
  3052     0991                     	;# 
  3053     0992                     	;# 
  3054     0993                     	;# 
  3055     0994                     	;# 
  3056     0995                     	;# 
  3057     0996                     	;# 
  3058     0997                     	;# 
  3059     1E0F                     	;# 
  3060     1E10                     	;# 
  3061     1E11                     	;# 
  3062     1E12                     	;# 
  3063     1E13                     	;# 
  3064     1E14                     	;# 
  3065     1E15                     	;# 
  3066     1E16                     	;# 
  3067     1E17                     	;# 
  3068     1E18                     	;# 
  3069     1E19                     	;# 
  3070     1E1A                     	;# 
  3071     1E1B                     	;# 
  3072     1E1C                     	;# 
  3073     1E1D                     	;# 
  3074     1E1E                     	;# 
  3075     1E1F                     	;# 
  3076     1E20                     	;# 
  3077     1E21                     	;# 
  3078     1E22                     	;# 
  3079     1E23                     	;# 
  3080     1E24                     	;# 
  3081     1E25                     	;# 
  3082     1E26                     	;# 
  3083     1E27                     	;# 
  3084     1E28                     	;# 
  3085     1E29                     	;# 
  3086     1E2A                     	;# 
  3087     1E2B                     	;# 
  3088     1E2C                     	;# 
  3089     1E2D                     	;# 
  3090     1E2E                     	;# 
  3091     1E2F                     	;# 
  3092     1E30                     	;# 
  3093     1E31                     	;# 
  3094     1E32                     	;# 
  3095     1E33                     	;# 
  3096     1E34                     	;# 
  3097     1E35                     	;# 
  3098     1E36                     	;# 
  3099     1E37                     	;# 
  3100     1E8F                     	;# 
  3101     1E90                     	;# 
  3102     1E91                     	;# 
  3103     1E92                     	;# 
  3104     1E93                     	;# 
  3105     1E94                     	;# 
  3106     1E95                     	;# 
  3107     1E96                     	;# 
  3108     1E97                     	;# 
  3109     1E9C                     	;# 
  3110     1E9D                     	;# 
  3111     1E9E                     	;# 
  3112     1EA1                     	;# 
  3113     1EA2                     	;# 
  3114     1EA3                     	;# 
  3115     1EA4                     	;# 
  3116     1EA9                     	;# 
  3117     1EAA                     	;# 
  3118     1EB1                     	;# 
  3119     1EB2                     	;# 
  3120     1EB8                     	;# 
  3121     1EB9                     	;# 
  3122     1EBA                     	;# 
  3123     1EBB                     	;# 
  3124     1EBC                     	;# 
  3125     1EBD                     	;# 
  3126     1EBE                     	;# 
  3127     1EC3                     	;# 
  3128     1EC5                     	;# 
  3129     1EC6                     	;# 
  3130     1EC7                     	;# 
  3131     1EC8                     	;# 
  3132     1EC9                     	;# 
  3133     1ECA                     	;# 
  3134     1ECB                     	;# 
  3135     1ECC                     	;# 
  3136     1F10                     	;# 
  3137     1F11                     	;# 
  3138     1F12                     	;# 
  3139     1F14                     	;# 
  3140     1F15                     	;# 
  3141     1F20                     	;# 
  3142     1F21                     	;# 
  3143     1F22                     	;# 
  3144     1F23                     	;# 
  3145     1F24                     	;# 
  3146     1F25                     	;# 
  3147     1F38                     	;# 
  3148     1F39                     	;# 
  3149     1F3A                     	;# 
  3150     1F3B                     	;# 
  3151     1F3C                     	;# 
  3152     1F3D                     	;# 
  3153     1F3E                     	;# 
  3154     1F3F                     	;# 
  3155     1F4E                     	;# 
  3156     1F4F                     	;# 
  3157     1F50                     	;# 
  3158     1F51                     	;# 
  3159     1F52                     	;# 
  3160     1F53                     	;# 
  3161     1F54                     	;# 
  3162     1F55                     	;# 
  3163     1FE4                     	;# 
  3164     1FE5                     	;# 
  3165     1FE6                     	;# 
  3166     1FE7                     	;# 
  3167     1FE8                     	;# 
  3168     1FE8                     	;# 
  3169     1FE9                     	;# 
  3170     1FEA                     	;# 
  3171     1FEB                     	;# 
  3172     1FED                     	;# 
  3173     1FEE                     	;# 
  3174     1FEF                     	;# 
  3175     0000                     	;# 
  3176     0001                     	;# 
  3177     0002                     	;# 
  3178     0003                     	;# 
  3179     0004                     	;# 
  3180     0005                     	;# 
  3181     0006                     	;# 
  3182     0007                     	;# 
  3183     0008                     	;# 
  3184     0009                     	;# 
  3185     000A                     	;# 
  3186     000B                     	;# 
  3187     000C                     	;# 
  3188     000E                     	;# 
  3189     0012                     	;# 
  3190     0014                     	;# 
  3191     0018                     	;# 
  3192     001A                     	;# 
  3193     008C                     	;# 
  3194     008C                     	;# 
  3195     008D                     	;# 
  3196     008E                     	;# 
  3197     008E                     	;# 
  3198     008F                     	;# 
  3199     0090                     	;# 
  3200     0090                     	;# 
  3201     0091                     	;# 
  3202     0092                     	;# 
  3203     0092                     	;# 
  3204     0093                     	;# 
  3205     0094                     	;# 
  3206     0094                     	;# 
  3207     0095                     	;# 
  3208     0096                     	;# 
  3209     0096                     	;# 
  3210     0097                     	;# 
  3211     0098                     	;# 
  3212     0099                     	;# 
  3213     009A                     	;# 
  3214     009B                     	;# 
  3215     009B                     	;# 
  3216     009C                     	;# 
  3217     009D                     	;# 
  3218     009D                     	;# 
  3219     009E                     	;# 
  3220     009F                     	;# 
  3221     010C                     	;# 
  3222     010C                     	;# 
  3223     010D                     	;# 
  3224     010E                     	;# 
  3225     010F                     	;# 
  3226     010F                     	;# 
  3227     0110                     	;# 
  3228     0111                     	;# 
  3229     0112                     	;# 
  3230     0113                     	;# 
  3231     0114                     	;# 
  3232     0115                     	;# 
  3233     0116                     	;# 
  3234     0117                     	;# 
  3235     0118                     	;# 
  3236     0119                     	;# 
  3237     0119                     	;# 
  3238     0119                     	;# 
  3239     011A                     	;# 
  3240     011A                     	;# 
  3241     011A                     	;# 
  3242     011B                     	;# 
  3243     011B                     	;# 
  3244     011B                     	;# 
  3245     011B                     	;# 
  3246     011B                     	;# 
  3247     011C                     	;# 
  3248     011C                     	;# 
  3249     011C                     	;# 
  3250     011D                     	;# 
  3251     011D                     	;# 
  3252     011D                     	;# 
  3253     011E                     	;# 
  3254     011E                     	;# 
  3255     011E                     	;# 
  3256     011F                     	;# 
  3257     011F                     	;# 
  3258     011F                     	;# 
  3259     011F                     	;# 
  3260     011F                     	;# 
  3261     018C                     	;# 
  3262     018D                     	;# 
  3263     018E                     	;# 
  3264     018F                     	;# 
  3265     0190                     	;# 
  3266     0191                     	;# 
  3267     0192                     	;# 
  3268     0196                     	;# 
  3269     0197                     	;# 
  3270     0198                     	;# 
  3271     0199                     	;# 
  3272     019A                     	;# 
  3273     019B                     	;# 
  3274     019C                     	;# 
  3275     020C                     	;# 
  3276     020D                     	;# 
  3277     020E                     	;# 
  3278     020E                     	;# 
  3279     020F                     	;# 
  3280     020F                     	;# 
  3281     0210                     	;# 
  3282     0210                     	;# 
  3283     0211                     	;# 
  3284     0211                     	;# 
  3285     0212                     	;# 
  3286     0213                     	;# 
  3287     0214                     	;# 
  3288     0214                     	;# 
  3289     0215                     	;# 
  3290     0215                     	;# 
  3291     0216                     	;# 
  3292     0216                     	;# 
  3293     0217                     	;# 
  3294     0217                     	;# 
  3295     0218                     	;# 
  3296     0219                     	;# 
  3297     021A                     	;# 
  3298     021A                     	;# 
  3299     021B                     	;# 
  3300     021B                     	;# 
  3301     021C                     	;# 
  3302     021C                     	;# 
  3303     021D                     	;# 
  3304     021D                     	;# 
  3305     021E                     	;# 
  3306     021F                     	;# 
  3307     028C                     	;# 
  3308     028C                     	;# 
  3309     028D                     	;# 
  3310     028D                     	;# 
  3311     028E                     	;# 
  3312     028F                     	;# 
  3313     0290                     	;# 
  3314     0291                     	;# 
  3315     0292                     	;# 
  3316     0292                     	;# 
  3317     0293                     	;# 
  3318     0293                     	;# 
  3319     0294                     	;# 
  3320     0295                     	;# 
  3321     0296                     	;# 
  3322     0297                     	;# 
  3323     0298                     	;# 
  3324     0298                     	;# 
  3325     0299                     	;# 
  3326     0299                     	;# 
  3327     029A                     	;# 
  3328     029B                     	;# 
  3329     029C                     	;# 
  3330     029D                     	;# 
  3331     029F                     	;# 
  3332     030C                     	;# 
  3333     030C                     	;# 
  3334     030D                     	;# 
  3335     030E                     	;# 
  3336     030F                     	;# 
  3337     0310                     	;# 
  3338     0310                     	;# 
  3339     0311                     	;# 
  3340     0312                     	;# 
  3341     0313                     	;# 
  3342     0314                     	;# 
  3343     0314                     	;# 
  3344     0315                     	;# 
  3345     0316                     	;# 
  3346     0317                     	;# 
  3347     0318                     	;# 
  3348     0318                     	;# 
  3349     0319                     	;# 
  3350     031A                     	;# 
  3351     031B                     	;# 
  3352     038C                     	;# 
  3353     038C                     	;# 
  3354     038D                     	;# 
  3355     038E                     	;# 
  3356     0390                     	;# 
  3357     0390                     	;# 
  3358     0391                     	;# 
  3359     0392                     	;# 
  3360     048C                     	;# 
  3361     048C                     	;# 
  3362     048D                     	;# 
  3363     048E                     	;# 
  3364     048F                     	;# 
  3365     048F                     	;# 
  3366     0490                     	;# 
  3367     0491                     	;# 
  3368     0492                     	;# 
  3369     0492                     	;# 
  3370     0493                     	;# 
  3371     0494                     	;# 
  3372     0495                     	;# 
  3373     0495                     	;# 
  3374     0496                     	;# 
  3375     0497                     	;# 
  3376     0498                     	;# 
  3377     0499                     	;# 
  3378     049A                     	;# 
  3379     049B                     	;# 
  3380     049C                     	;# 
  3381     049D                     	;# 
  3382     058C                     	;# 
  3383     058C                     	;# 
  3384     058D                     	;# 
  3385     058E                     	;# 
  3386     058F                     	;# 
  3387     058F                     	;# 
  3388     0590                     	;# 
  3389     0591                     	;# 
  3390     0592                     	;# 
  3391     0593                     	;# 
  3392     059C                     	;# 
  3393     059C                     	;# 
  3394     059D                     	;# 
  3395     059D                     	;# 
  3396     059E                     	;# 
  3397     059F                     	;# 
  3398     060C                     	;# 
  3399     060C                     	;# 
  3400     060D                     	;# 
  3401     060D                     	;# 
  3402     060E                     	;# 
  3403     060F                     	;# 
  3404     0610                     	;# 
  3405     0611                     	;# 
  3406     0612                     	;# 
  3407     0613                     	;# 
  3408     0614                     	;# 
  3409     0616                     	;# 
  3410     0616                     	;# 
  3411     0617                     	;# 
  3412     0617                     	;# 
  3413     0618                     	;# 
  3414     0619                     	;# 
  3415     061A                     	;# 
  3416     061B                     	;# 
  3417     061C                     	;# 
  3418     061D                     	;# 
  3419     061E                     	;# 
  3420     070C                     	;# 
  3421     070D                     	;# 
  3422     070E                     	;# 
  3423     070F                     	;# 
  3424     0710                     	;# 
  3425     0711                     	;# 
  3426     0712                     	;# 
  3427     0713                     	;# 
  3428     0714                     	;# 
  3429     0716                     	;# 
  3430     0717                     	;# 
  3431     0718                     	;# 
  3432     0719                     	;# 
  3433     071A                     	;# 
  3434     071B                     	;# 
  3435     071C                     	;# 
  3436     071D                     	;# 
  3437     071E                     	;# 
  3438     0796                     	;# 
  3439     0797                     	;# 
  3440     0798                     	;# 
  3441     0799                     	;# 
  3442     079A                     	;# 
  3443     079B                     	;# 
  3444     079C                     	;# 
  3445     079D                     	;# 
  3446     080C                     	;# 
  3447     080D                     	;# 
  3448     080E                     	;# 
  3449     080F                     	;# 
  3450     0810                     	;# 
  3451     0811                     	;# 
  3452     0812                     	;# 
  3453     0813                     	;# 
  3454     0814                     	;# 
  3455     081A                     	;# 
  3456     081A                     	;# 
  3457     081B                     	;# 
  3458     081C                     	;# 
  3459     081C                     	;# 
  3460     081D                     	;# 
  3461     081E                     	;# 
  3462     081F                     	;# 
  3463     088C                     	;# 
  3464     088D                     	;# 
  3465     088E                     	;# 
  3466     088F                     	;# 
  3467     0890                     	;# 
  3468     0891                     	;# 
  3469     0892                     	;# 
  3470     0893                     	;# 
  3471     0895                     	;# 
  3472     0896                     	;# 
  3473     0897                     	;# 
  3474     0898                     	;# 
  3475     0899                     	;# 
  3476     089A                     	;# 
  3477     089B                     	;# 
  3478     090C                     	;# 
  3479     090E                     	;# 
  3480     090F                     	;# 
  3481     091F                     	;# 
  3482     098F                     	;# 
  3483     098F                     	;# 
  3484     0990                     	;# 
  3485     0991                     	;# 
  3486     0992                     	;# 
  3487     0993                     	;# 
  3488     0994                     	;# 
  3489     0995                     	;# 
  3490     0996                     	;# 
  3491     0997                     	;# 
  3492     1E0F                     	;# 
  3493     1E10                     	;# 
  3494     1E11                     	;# 
  3495     1E12                     	;# 
  3496     1E13                     	;# 
  3497     1E14                     	;# 
  3498     1E15                     	;# 
  3499     1E16                     	;# 
  3500     1E17                     	;# 
  3501     1E18                     	;# 
  3502     1E19                     	;# 
  3503     1E1A                     	;# 
  3504     1E1B                     	;# 
  3505     1E1C                     	;# 
  3506     1E1D                     	;# 
  3507     1E1E                     	;# 
  3508     1E1F                     	;# 
  3509     1E20                     	;# 
  3510     1E21                     	;# 
  3511     1E22                     	;# 
  3512     1E23                     	;# 
  3513     1E24                     	;# 
  3514     1E25                     	;# 
  3515     1E26                     	;# 
  3516     1E27                     	;# 
  3517     1E28                     	;# 
  3518     1E29                     	;# 
  3519     1E2A                     	;# 
  3520     1E2B                     	;# 
  3521     1E2C                     	;# 
  3522     1E2D                     	;# 
  3523     1E2E                     	;# 
  3524     1E2F                     	;# 
  3525     1E30                     	;# 
  3526     1E31                     	;# 
  3527     1E32                     	;# 
  3528     1E33                     	;# 
  3529     1E34                     	;# 
  3530     1E35                     	;# 
  3531     1E36                     	;# 
  3532     1E37                     	;# 
  3533     1E8F                     	;# 
  3534     1E90                     	;# 
  3535     1E91                     	;# 
  3536     1E92                     	;# 
  3537     1E93                     	;# 
  3538     1E94                     	;# 
  3539     1E95                     	;# 
  3540     1E96                     	;# 
  3541     1E97                     	;# 
  3542     1E9C                     	;# 
  3543     1E9D                     	;# 
  3544     1E9E                     	;# 
  3545     1EA1                     	;# 
  3546     1EA2                     	;# 
  3547     1EA3                     	;# 
  3548     1EA4                     	;# 
  3549     1EA9                     	;# 
  3550     1EAA                     	;# 
  3551     1EB1                     	;# 
  3552     1EB2                     	;# 
  3553     1EB8                     	;# 
  3554     1EB9                     	;# 
  3555     1EBA                     	;# 
  3556     1EBB                     	;# 
  3557     1EBC                     	;# 
  3558     1EBD                     	;# 
  3559     1EBE                     	;# 
  3560     1EC3                     	;# 
  3561     1EC5                     	;# 
  3562     1EC6                     	;# 
  3563     1EC7                     	;# 
  3564     1EC8                     	;# 
  3565     1EC9                     	;# 
  3566     1ECA                     	;# 
  3567     1ECB                     	;# 
  3568     1ECC                     	;# 
  3569     1F10                     	;# 
  3570     1F11                     	;# 
  3571     1F12                     	;# 
  3572     1F14                     	;# 
  3573     1F15                     	;# 
  3574     1F20                     	;# 
  3575     1F21                     	;# 
  3576     1F22                     	;# 
  3577     1F23                     	;# 
  3578     1F24                     	;# 
  3579     1F25                     	;# 
  3580     1F38                     	;# 
  3581     1F39                     	;# 
  3582     1F3A                     	;# 
  3583     1F3B                     	;# 
  3584     1F3C                     	;# 
  3585     1F3D                     	;# 
  3586     1F3E                     	;# 
  3587     1F3F                     	;# 
  3588     1F4E                     	;# 
  3589     1F4F                     	;# 
  3590     1F50                     	;# 
  3591     1F51                     	;# 
  3592     1F52                     	;# 
  3593     1F53                     	;# 
  3594     1F54                     	;# 
  3595     1F55                     	;# 
  3596     1FE4                     	;# 
  3597     1FE5                     	;# 
  3598     1FE6                     	;# 
  3599     1FE7                     	;# 
  3600     1FE8                     	;# 
  3601     1FE8                     	;# 
  3602     1FE9                     	;# 
  3603     1FEA                     	;# 
  3604     1FEB                     	;# 
  3605     1FED                     	;# 
  3606     1FEE                     	;# 
  3607     1FEF                     	;# 
  3608     0000                     	;# 
  3609     0001                     	;# 
  3610     0002                     	;# 
  3611     0003                     	;# 
  3612     0004                     	;# 
  3613     0005                     	;# 
  3614     0006                     	;# 
  3615     0007                     	;# 
  3616     0008                     	;# 
  3617     0009                     	;# 
  3618     000A                     	;# 
  3619     000B                     	;# 
  3620     000C                     	;# 
  3621     000E                     	;# 
  3622     0012                     	;# 
  3623     0014                     	;# 
  3624     0018                     	;# 
  3625     001A                     	;# 
  3626     008C                     	;# 
  3627     008C                     	;# 
  3628     008D                     	;# 
  3629     008E                     	;# 
  3630     008E                     	;# 
  3631     008F                     	;# 
  3632     0090                     	;# 
  3633     0090                     	;# 
  3634     0091                     	;# 
  3635     0092                     	;# 
  3636     0092                     	;# 
  3637     0093                     	;# 
  3638     0094                     	;# 
  3639     0094                     	;# 
  3640     0095                     	;# 
  3641     0096                     	;# 
  3642     0096                     	;# 
  3643     0097                     	;# 
  3644     0098                     	;# 
  3645     0099                     	;# 
  3646     009A                     	;# 
  3647     009B                     	;# 
  3648     009B                     	;# 
  3649     009C                     	;# 
  3650     009D                     	;# 
  3651     009D                     	;# 
  3652     009E                     	;# 
  3653     009F                     	;# 
  3654     010C                     	;# 
  3655     010C                     	;# 
  3656     010D                     	;# 
  3657     010E                     	;# 
  3658     010F                     	;# 
  3659     010F                     	;# 
  3660     0110                     	;# 
  3661     0111                     	;# 
  3662     0112                     	;# 
  3663     0113                     	;# 
  3664     0114                     	;# 
  3665     0115                     	;# 
  3666     0116                     	;# 
  3667     0117                     	;# 
  3668     0118                     	;# 
  3669     0119                     	;# 
  3670     0119                     	;# 
  3671     0119                     	;# 
  3672     011A                     	;# 
  3673     011A                     	;# 
  3674     011A                     	;# 
  3675     011B                     	;# 
  3676     011B                     	;# 
  3677     011B                     	;# 
  3678     011B                     	;# 
  3679     011B                     	;# 
  3680     011C                     	;# 
  3681     011C                     	;# 
  3682     011C                     	;# 
  3683     011D                     	;# 
  3684     011D                     	;# 
  3685     011D                     	;# 
  3686     011E                     	;# 
  3687     011E                     	;# 
  3688     011E                     	;# 
  3689     011F                     	;# 
  3690     011F                     	;# 
  3691     011F                     	;# 
  3692     011F                     	;# 
  3693     011F                     	;# 
  3694     018C                     	;# 
  3695     018D                     	;# 
  3696     018E                     	;# 
  3697     018F                     	;# 
  3698     0190                     	;# 
  3699     0191                     	;# 
  3700     0192                     	;# 
  3701     0196                     	;# 
  3702     0197                     	;# 
  3703     0198                     	;# 
  3704     0199                     	;# 
  3705     019A                     	;# 
  3706     019B                     	;# 
  3707     019C                     	;# 
  3708     020C                     	;# 
  3709     020D                     	;# 
  3710     020E                     	;# 
  3711     020E                     	;# 
  3712     020F                     	;# 
  3713     020F                     	;# 
  3714     0210                     	;# 
  3715     0210                     	;# 
  3716     0211                     	;# 
  3717     0211                     	;# 
  3718     0212                     	;# 
  3719     0213                     	;# 
  3720     0214                     	;# 
  3721     0214                     	;# 
  3722     0215                     	;# 
  3723     0215                     	;# 
  3724     0216                     	;# 
  3725     0216                     	;# 
  3726     0217                     	;# 
  3727     0217                     	;# 
  3728     0218                     	;# 
  3729     0219                     	;# 
  3730     021A                     	;# 
  3731     021A                     	;# 
  3732     021B                     	;# 
  3733     021B                     	;# 
  3734     021C                     	;# 
  3735     021C                     	;# 
  3736     021D                     	;# 
  3737     021D                     	;# 
  3738     021E                     	;# 
  3739     021F                     	;# 
  3740     028C                     	;# 
  3741     028C                     	;# 
  3742     028D                     	;# 
  3743     028D                     	;# 
  3744     028E                     	;# 
  3745     028F                     	;# 
  3746     0290                     	;# 
  3747     0291                     	;# 
  3748     0292                     	;# 
  3749     0292                     	;# 
  3750     0293                     	;# 
  3751     0293                     	;# 
  3752     0294                     	;# 
  3753     0295                     	;# 
  3754     0296                     	;# 
  3755     0297                     	;# 
  3756     0298                     	;# 
  3757     0298                     	;# 
  3758     0299                     	;# 
  3759     0299                     	;# 
  3760     029A                     	;# 
  3761     029B                     	;# 
  3762     029C                     	;# 
  3763     029D                     	;# 
  3764     029F                     	;# 
  3765     030C                     	;# 
  3766     030C                     	;# 
  3767     030D                     	;# 
  3768     030E                     	;# 
  3769     030F                     	;# 
  3770     0310                     	;# 
  3771     0310                     	;# 
  3772     0311                     	;# 
  3773     0312                     	;# 
  3774     0313                     	;# 
  3775     0314                     	;# 
  3776     0314                     	;# 
  3777     0315                     	;# 
  3778     0316                     	;# 
  3779     0317                     	;# 
  3780     0318                     	;# 
  3781     0318                     	;# 
  3782     0319                     	;# 
  3783     031A                     	;# 
  3784     031B                     	;# 
  3785     038C                     	;# 
  3786     038C                     	;# 
  3787     038D                     	;# 
  3788     038E                     	;# 
  3789     0390                     	;# 
  3790     0390                     	;# 
  3791     0391                     	;# 
  3792     0392                     	;# 
  3793     048C                     	;# 
  3794     048C                     	;# 
  3795     048D                     	;# 
  3796     048E                     	;# 
  3797     048F                     	;# 
  3798     048F                     	;# 
  3799     0490                     	;# 
  3800     0491                     	;# 
  3801     0492                     	;# 
  3802     0492                     	;# 
  3803     0493                     	;# 
  3804     0494                     	;# 
  3805     0495                     	;# 
  3806     0495                     	;# 
  3807     0496                     	;# 
  3808     0497                     	;# 
  3809     0498                     	;# 
  3810     0499                     	;# 
  3811     049A                     	;# 
  3812     049B                     	;# 
  3813     049C                     	;# 
  3814     049D                     	;# 
  3815     058C                     	;# 
  3816     058C                     	;# 
  3817     058D                     	;# 
  3818     058E                     	;# 
  3819     058F                     	;# 
  3820     058F                     	;# 
  3821     0590                     	;# 
  3822     0591                     	;# 
  3823     0592                     	;# 
  3824     0593                     	;# 
  3825     059C                     	;# 
  3826     059C                     	;# 
  3827     059D                     	;# 
  3828     059D                     	;# 
  3829     059E                     	;# 
  3830     059F                     	;# 
  3831     060C                     	;# 
  3832     060C                     	;# 
  3833     060D                     	;# 
  3834     060D                     	;# 
  3835     060E                     	;# 
  3836     060F                     	;# 
  3837     0610                     	;# 
  3838     0611                     	;# 
  3839     0612                     	;# 
  3840     0613                     	;# 
  3841     0614                     	;# 
  3842     0616                     	;# 
  3843     0616                     	;# 
  3844     0617                     	;# 
  3845     0617                     	;# 
  3846     0618                     	;# 
  3847     0619                     	;# 
  3848     061A                     	;# 
  3849     061B                     	;# 
  3850     061C                     	;# 
  3851     061D                     	;# 
  3852     061E                     	;# 
  3853     070C                     	;# 
  3854     070D                     	;# 
  3855     070E                     	;# 
  3856     070F                     	;# 
  3857     0710                     	;# 
  3858     0711                     	;# 
  3859     0712                     	;# 
  3860     0713                     	;# 
  3861     0714                     	;# 
  3862     0716                     	;# 
  3863     0717                     	;# 
  3864     0718                     	;# 
  3865     0719                     	;# 
  3866     071A                     	;# 
  3867     071B                     	;# 
  3868     071C                     	;# 
  3869     071D                     	;# 
  3870     071E                     	;# 
  3871     0796                     	;# 
  3872     0797                     	;# 
  3873     0798                     	;# 
  3874     0799                     	;# 
  3875     079A                     	;# 
  3876     079B                     	;# 
  3877     079C                     	;# 
  3878     079D                     	;# 
  3879     080C                     	;# 
  3880     080D                     	;# 
  3881     080E                     	;# 
  3882     080F                     	;# 
  3883     0810                     	;# 
  3884     0811                     	;# 
  3885     0812                     	;# 
  3886     0813                     	;# 
  3887     0814                     	;# 
  3888     081A                     	;# 
  3889     081A                     	;# 
  3890     081B                     	;# 
  3891     081C                     	;# 
  3892     081C                     	;# 
  3893     081D                     	;# 
  3894     081E                     	;# 
  3895     081F                     	;# 
  3896     088C                     	;# 
  3897     088D                     	;# 
  3898     088E                     	;# 
  3899     088F                     	;# 
  3900     0890                     	;# 
  3901     0891                     	;# 
  3902     0892                     	;# 
  3903     0893                     	;# 
  3904     0895                     	;# 
  3905     0896                     	;# 
  3906     0897                     	;# 
  3907     0898                     	;# 
  3908     0899                     	;# 
  3909     089A                     	;# 
  3910     089B                     	;# 
  3911     090C                     	;# 
  3912     090E                     	;# 
  3913     090F                     	;# 
  3914     091F                     	;# 
  3915     098F                     	;# 
  3916     098F                     	;# 
  3917     0990                     	;# 
  3918     0991                     	;# 
  3919     0992                     	;# 
  3920     0993                     	;# 
  3921     0994                     	;# 
  3922     0995                     	;# 
  3923     0996                     	;# 
  3924     0997                     	;# 
  3925     1E0F                     	;# 
  3926     1E10                     	;# 
  3927     1E11                     	;# 
  3928     1E12                     	;# 
  3929     1E13                     	;# 
  3930     1E14                     	;# 
  3931     1E15                     	;# 
  3932     1E16                     	;# 
  3933     1E17                     	;# 
  3934     1E18                     	;# 
  3935     1E19                     	;# 
  3936     1E1A                     	;# 
  3937     1E1B                     	;# 
  3938     1E1C                     	;# 
  3939     1E1D                     	;# 
  3940     1E1E                     	;# 
  3941     1E1F                     	;# 
  3942     1E20                     	;# 
  3943     1E21                     	;# 
  3944     1E22                     	;# 
  3945     1E23                     	;# 
  3946     1E24                     	;# 
  3947     1E25                     	;# 
  3948     1E26                     	;# 
  3949     1E27                     	;# 
  3950     1E28                     	;# 
  3951     1E29                     	;# 
  3952     1E2A                     	;# 
  3953     1E2B                     	;# 
  3954     1E2C                     	;# 
  3955     1E2D                     	;# 
  3956     1E2E                     	;# 
  3957     1E2F                     	;# 
  3958     1E30                     	;# 
  3959     1E31                     	;# 
  3960     1E32                     	;# 
  3961     1E33                     	;# 
  3962     1E34                     	;# 
  3963     1E35                     	;# 
  3964     1E36                     	;# 
  3965     1E37                     	;# 
  3966     1E8F                     	;# 
  3967     1E90                     	;# 
  3968     1E91                     	;# 
  3969     1E92                     	;# 
  3970     1E93                     	;# 
  3971     1E94                     	;# 
  3972     1E95                     	;# 
  3973     1E96                     	;# 
  3974     1E97                     	;# 
  3975     1E9C                     	;# 
  3976     1E9D                     	;# 
  3977     1E9E                     	;# 
  3978     1EA1                     	;# 
  3979     1EA2                     	;# 
  3980     1EA3                     	;# 
  3981     1EA4                     	;# 
  3982     1EA9                     	;# 
  3983     1EAA                     	;# 
  3984     1EB1                     	;# 
  3985     1EB2                     	;# 
  3986     1EB8                     	;# 
  3987     1EB9                     	;# 
  3988     1EBA                     	;# 
  3989     1EBB                     	;# 
  3990     1EBC                     	;# 
  3991     1EBD                     	;# 
  3992     1EBE                     	;# 
  3993     1EC3                     	;# 
  3994     1EC5                     	;# 
  3995     1EC6                     	;# 
  3996     1EC7                     	;# 
  3997     1EC8                     	;# 
  3998     1EC9                     	;# 
  3999     1ECA                     	;# 
  4000     1ECB                     	;# 
  4001     1ECC                     	;# 
  4002     1F10                     	;# 
  4003     1F11                     	;# 
  4004     1F12                     	;# 
  4005     1F14                     	;# 
  4006     1F15                     	;# 
  4007     1F20                     	;# 
  4008     1F21                     	;# 
  4009     1F22                     	;# 
  4010     1F23                     	;# 
  4011     1F24                     	;# 
  4012     1F25                     	;# 
  4013     1F38                     	;# 
  4014     1F39                     	;# 
  4015     1F3A                     	;# 
  4016     1F3B                     	;# 
  4017     1F3C                     	;# 
  4018     1F3D                     	;# 
  4019     1F3E                     	;# 
  4020     1F3F                     	;# 
  4021     1F4E                     	;# 
  4022     1F4F                     	;# 
  4023     1F50                     	;# 
  4024     1F51                     	;# 
  4025     1F52                     	;# 
  4026     1F53                     	;# 
  4027     1F54                     	;# 
  4028     1F55                     	;# 
  4029     1FE4                     	;# 
  4030     1FE5                     	;# 
  4031     1FE6                     	;# 
  4032     1FE7                     	;# 
  4033     1FE8                     	;# 
  4034     1FE8                     	;# 
  4035     1FE9                     	;# 
  4036     1FEA                     	;# 
  4037     1FEB                     	;# 
  4038     1FED                     	;# 
  4039     1FEE                     	;# 
  4040     1FEF                     	;# 
  4041                           
  4042 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  4043     0000                     
  4044 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  4045     0000                     
  4046 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  4047     0000                     
  4048                           	psect	idataCOMMON
  4049     07FE                     __pidataCOMMON:
  4050                           
  4051                           ;initializer for _nack
  4052     07FE  3401               	retlw	1
  4053                           
  4054                           	psect	idataBANK0
  4055     07FF                     __pidataBANK0:
  4056                           
  4057                           ;initializer for _GAIN
  4058     07FF  3407               	retlw	7
  4059                           
  4060                           	psect	stringtext1
  4061     1171                     __pstringtext1:
  4062     1171                     _dpowers:
  4063     1171  3401               	retlw	1
  4064     1172  3400               	retlw	0
  4065     1173  340A               	retlw	10
  4066     1174  3400               	retlw	0
  4067     1175  3464               	retlw	100
  4068     1176  3400               	retlw	0
  4069     1177  34E8               	retlw	232
  4070     1178  3403               	retlw	3
  4071     1179  3410               	retlw	16
  4072     117A  3427               	retlw	39
  4073     117B                     __end_of_dpowers:
  4074                           
  4075                           	psect	stringtext2
  4076     118D                     __pstringtext2:
  4077     118D                     _hexpowers:
  4078     118D  3401               	retlw	1
  4079     118E  3400               	retlw	0
  4080     118F  3410               	retlw	16
  4081     1190  3400               	retlw	0
  4082     1191  3400               	retlw	0
  4083     1192  3401               	retlw	1
  4084     1193  3400               	retlw	0
  4085     1194  3410               	retlw	16
  4086     1195                     __end_of_hexpowers:
  4087                           
  4088                           	psect	nvBANK0
  4089     0069                     __pnvBANK0:
  4090     0069                     _EUSART1_ErrorHandler:
  4091     0069                     	ds	2
  4092     006B                     _EUSART1_OverrunErrorHandler:
  4093     006B                     	ds	2
  4094     006D                     _EUSART1_FramingErrorHandler:
  4095     006D                     	ds	2
  4096     0014                     _TRISCbits	set	20
  4097     000B                     _INTCONbits	set	11
  4098     0014                     _TRISC	set	20
  4099     0012                     _TRISA	set	18
  4100     001A                     _LATC	set	26
  4101     0018                     _LATA	set	24
  4102     005F                     _GIE	set	95
  4103     011A                     _TX1REG	set	282
  4104     0119                     _RC1REG	set	281
  4105     011D                     _RC1STAbits	set	285
  4106     011E                     _TX1STAbits	set	286
  4107     011C                     _SP1BRGH	set	284
  4108     011B                     _SP1BRGL	set	283
  4109     011E                     _TX1STA	set	286
  4110     011D                     _RC1STA	set	285
  4111     011F                     _BAUD1CON	set	287
  4112     0190                     _SSP1CON1bits	set	400
  4113     018C                     _SSP1BUF	set	396
  4114     0191                     _SSP1CON2bits	set	401
  4115     018F                     _SSP1STATbits	set	399
  4116     018E                     _SSP1MSK	set	398
  4117     018D                     _SSP1ADD	set	397
  4118     0191                     _SSP1CON2	set	401
  4119     0190                     _SSP1CON1	set	400
  4120     018F                     _SSP1STAT	set	399
  4121     0196                     _SSP2BUF	set	406
  4122     019B                     _SSP2CON2bits	set	411
  4123     0197                     _SSP2ADD	set	407
  4124     0199                     _SSP2STAT	set	409
  4125     019B                     _SSP2CON2	set	411
  4126     019A                     _SSP2CON1	set	410
  4127     0CDC                     _ACKEN2	set	3292
  4128     0CDD                     _ACKDT2	set	3293
  4129     059E                     _T0CON0	set	1438
  4130     059C                     _TMR0L	set	1436
  4131     059D                     _TMR0H	set	1437
  4132     059F                     _T0CON1	set	1439
  4133     0716                     _PIE0bits	set	1814
  4134     0719                     _PIE3bits	set	1817
  4135     070F                     _PIR3bits	set	1807
  4136     070C                     _PIR0bits	set	1804
  4137     079D                     _PMD7	set	1949
  4138     079C                     _PMD6	set	1948
  4139     079B                     _PMD5	set	1947
  4140     079A                     _PMD4	set	1946
  4141     0799                     _PMD3	set	1945
  4142     0798                     _PMD2	set	1944
  4143     0797                     _PMD1	set	1943
  4144     0796                     _PMD0	set	1942
  4145     0892                     _OSCTUNE	set	2194
  4146     0893                     _OSCFRQ	set	2195
  4147     0891                     _OSCEN	set	2193
  4148     088F                     _OSCCON3	set	2191
  4149     088D                     _OSCCON1	set	2189
  4150     1EC8                     _SSP2CLKPPS	set	7880
  4151     1EC9                     _SSP2DATPPS	set	7881
  4152     1EC6                     _SSP1DATPPS	set	7878
  4153     1EC5                     _SSP1CLKPPS	set	7877
  4154     1F4E                     _ANSELCbits	set	8014
  4155     1F15                     _RA5PPS	set	7957
  4156     1F25                     _RC5PPS	set	7973
  4157     1F24                     _RC4PPS	set	7972
  4158     1F21                     _RC1PPS	set	7969
  4159     1F20                     _RC0PPS	set	7968
  4160     1F52                     _INLVLC	set	8018
  4161     1F3C                     _INLVLA	set	7996
  4162     1F51                     _SLRCONC	set	8017
  4163     1F3B                     _SLRCONA	set	7995
  4164     1F50                     _ODCONC	set	8016
  4165     1F3A                     _ODCONA	set	7994
  4166     1F4F                     _WPUC	set	8015
  4167     1F39                     _WPUA	set	7993
  4168     1F38                     _ANSELA	set	7992
  4169     1F4E                     _ANSELC	set	8014
  4170                           
  4171                           	psect	stringtext3
  4172     0632                     __pstringtext3:
  4173     0632                     STR_5:
  4174     0632  3443               	retlw	67	;'C'
  4175     0633  3468               	retlw	104	;'h'
  4176     0634  3461               	retlw	97	;'a'
  4177     0635  346E               	retlw	110	;'n'
  4178     0636  346E               	retlw	110	;'n'
  4179     0637  3465               	retlw	101	;'e'
  4180     0638  346C               	retlw	108	;'l'
  4181     0639  342D               	retlw	45	;'-'
  4182     063A  3446               	retlw	70	;'F'
  4183     063B  3435               	retlw	53	;'5'
  4184     063C  342D               	retlw	45	;'-'
  4185     063D  3434               	retlw	52	;'4'
  4186     063E  3430               	retlw	48	;'0'
  4187     063F  3435               	retlw	53	;'5'
  4188     0640  342D               	retlw	45	;'-'
  4189     0641  3434               	retlw	52	;'4'
  4190     0642  3432               	retlw	50	;'2'
  4191     0643  3435               	retlw	53	;'5'
  4192     0644  346E               	retlw	110	;'n'
  4193     0645  346D               	retlw	109	;'m'
  4194     0646  343A               	retlw	58	;':'
  4195     0647  3420               	retlw	32	;' '
  4196     0648  3425               	retlw	37	;'%'
  4197     0649  3475               	retlw	117	;'u'
  4198     064A  342C               	retlw	44	;','
  4199     064B  3420               	retlw	32	;' '
  4200     064C  3443               	retlw	67	;'C'
  4201     064D  3468               	retlw	104	;'h'
  4202     064E  3461               	retlw	97	;'a'
  4203     064F  346E               	retlw	110	;'n'
  4204     0650  346E               	retlw	110	;'n'
  4205     0651  3465               	retlw	101	;'e'
  4206     0652  346C               	retlw	108	;'l'
  4207     0653  342D               	retlw	45	;'-'
  4208     0654  3446               	retlw	70	;'F'
  4209     0655  3436               	retlw	54	;'6'
  4210     0656  342D               	retlw	45	;'-'
  4211     0657  3434               	retlw	52	;'4'
  4212     0658  3433               	retlw	51	;'3'
  4213     0659  3435               	retlw	53	;'5'
  4214     065A  342D               	retlw	45	;'-'
  4215     065B  3434               	retlw	52	;'4'
  4216     065C  3435               	retlw	53	;'5'
  4217     065D  3435               	retlw	53	;'5'
  4218     065E  346E               	retlw	110	;'n'
  4219     065F  346D               	retlw	109	;'m'
  4220     0660  343A               	retlw	58	;':'
  4221     0661  3420               	retlw	32	;' '
  4222     0662  3425               	retlw	37	;'%'
  4223     0663  3475               	retlw	117	;'u'
  4224     0664  342C               	retlw	44	;','
  4225     0665  3420               	retlw	32	;' '
  4226     0666  3443               	retlw	67	;'C'
  4227     0667  3468               	retlw	104	;'h'
  4228     0668  3461               	retlw	97	;'a'
  4229     0669  346E               	retlw	110	;'n'
  4230     066A  346E               	retlw	110	;'n'
  4231     066B  3465               	retlw	101	;'e'
  4232     066C  346C               	retlw	108	;'l'
  4233     066D  342D               	retlw	45	;'-'
  4234     066E  3446               	retlw	70	;'F'
  4235     066F  3437               	retlw	55	;'7'
  4236     0670  342D               	retlw	45	;'-'
  4237     0671  3434               	retlw	52	;'4'
  4238     0672  3437               	retlw	55	;'7'
  4239     0673  3430               	retlw	48	;'0'
  4240     0674  342D               	retlw	45	;'-'
  4241     0675  3434               	retlw	52	;'4'
  4242     0676  3439               	retlw	57	;'9'
  4243     0677  3430               	retlw	48	;'0'
  4244     0678  346E               	retlw	110	;'n'
  4245     0679  346D               	retlw	109	;'m'
  4246     067A  343A               	retlw	58	;':'
  4247     067B  3420               	retlw	32	;' '
  4248     067C  3425               	retlw	37	;'%'
  4249     067D  3475               	retlw	117	;'u'
  4250     067E  342C               	retlw	44	;','
  4251     067F  3420               	retlw	32	;' '
  4252     0680  3443               	retlw	67	;'C'
  4253     0681  3468               	retlw	104	;'h'
  4254     0682  3461               	retlw	97	;'a'
  4255     0683  346E               	retlw	110	;'n'
  4256     0684  346E               	retlw	110	;'n'
  4257     0685  3465               	retlw	101	;'e'
  4258     0686  346C               	retlw	108	;'l'
  4259     0687  342D               	retlw	45	;'-'
  4260     0688  3446               	retlw	70	;'F'
  4261     0689  3438               	retlw	56	;'8'
  4262     068A  342D               	retlw	45	;'-'
  4263     068B  3435               	retlw	53	;'5'
  4264     068C  3430               	retlw	48	;'0'
  4265     068D  3435               	retlw	53	;'5'
  4266     068E  342D               	retlw	45	;'-'
  4267     068F  3435               	retlw	53	;'5'
  4268     0690  3432               	retlw	50	;'2'
  4269     0691  3435               	retlw	53	;'5'
  4270     0692  346E               	retlw	110	;'n'
  4271     0693  346D               	retlw	109	;'m'
  4272     0694  343A               	retlw	58	;':'
  4273     0695  3420               	retlw	32	;' '
  4274     0696  3425               	retlw	37	;'%'
  4275     0697  3475               	retlw	117	;'u'
  4276     0698  342C               	retlw	44	;','
  4277     0699  3420               	retlw	32	;' '
  4278     069A  3443               	retlw	67	;'C'
  4279     069B  3468               	retlw	104	;'h'
  4280     069C  3461               	retlw	97	;'a'
  4281     069D  346E               	retlw	110	;'n'
  4282     069E  346E               	retlw	110	;'n'
  4283     069F  3465               	retlw	101	;'e'
  4284     06A0  346C               	retlw	108	;'l'
  4285     06A1  342D               	retlw	45	;'-'
  4286     06A2  3443               	retlw	67	;'C'
  4287     06A3  344C               	retlw	76	;'L'
  4288     06A4  3445               	retlw	69	;'E'
  4289     06A5  3441               	retlw	65	;'A'
  4290     06A6  3452               	retlw	82	;'R'
  4291     06A7  342D               	retlw	45	;'-'
  4292     06A8  3443               	retlw	67	;'C'
  4293     06A9  344C               	retlw	76	;'L'
  4294     06AA  3445               	retlw	69	;'E'
  4295     06AB  3441               	retlw	65	;'A'
  4296     06AC  3452               	retlw	82	;'R'
  4297     06AD  343A               	retlw	58	;':'
  4298     06AE  3420               	retlw	32	;' '
  4299     06AF  3425               	retlw	37	;'%'
  4300     06B0  3475               	retlw	117	;'u'
  4301     06B1  342C               	retlw	44	;','
  4302     06B2  3420               	retlw	32	;' '
  4303     06B3  3443               	retlw	67	;'C'
  4304     06B4  3468               	retlw	104	;'h'
  4305     06B5  3461               	retlw	97	;'a'
  4306     06B6  346E               	retlw	110	;'n'
  4307     06B7  346E               	retlw	110	;'n'
  4308     06B8  3465               	retlw	101	;'e'
  4309     06B9  346C               	retlw	108	;'l'
  4310     06BA  342D               	retlw	45	;'-'
  4311     06BB  344E               	retlw	78	;'N'
  4312     06BC  3449               	retlw	73	;'I'
  4313     06BD  3452               	retlw	82	;'R'
  4314     06BE  342D               	retlw	45	;'-'
  4315     06BF  344E               	retlw	78	;'N'
  4316     06C0  3449               	retlw	73	;'I'
  4317     06C1  3452               	retlw	82	;'R'
  4318     06C2  343A               	retlw	58	;':'
  4319     06C3  3420               	retlw	32	;' '
  4320     06C4  3425               	retlw	37	;'%'
  4321     06C5  3475               	retlw	117	;'u'
  4322     06C6  3420               	retlw	32	;' '
  4323     06C7  340D               	retlw	13
  4324     06C8  340A               	retlw	10
  4325     06C9  3400               	retlw	0
  4326                           
  4327                           	psect	stringtext4
  4328     06CA                     __pstringtext4:
  4329     06CA                     STR_4:
  4330     06CA  3443               	retlw	67	;'C'
  4331     06CB  3468               	retlw	104	;'h'
  4332     06CC  3461               	retlw	97	;'a'
  4333     06CD  346E               	retlw	110	;'n'
  4334     06CE  346E               	retlw	110	;'n'
  4335     06CF  3465               	retlw	101	;'e'
  4336     06D0  346C               	retlw	108	;'l'
  4337     06D1  342D               	retlw	45	;'-'
  4338     06D2  3446               	retlw	70	;'F'
  4339     06D3  3431               	retlw	49	;'1'
  4340     06D4  342D               	retlw	45	;'-'
  4341     06D5  3434               	retlw	52	;'4'
  4342     06D6  3430               	retlw	48	;'0'
  4343     06D7  3435               	retlw	53	;'5'
  4344     06D8  342D               	retlw	45	;'-'
  4345     06D9  3434               	retlw	52	;'4'
  4346     06DA  3432               	retlw	50	;'2'
  4347     06DB  3435               	retlw	53	;'5'
  4348     06DC  346E               	retlw	110	;'n'
  4349     06DD  346D               	retlw	109	;'m'
  4350     06DE  343A               	retlw	58	;':'
  4351     06DF  3420               	retlw	32	;' '
  4352     06E0  3425               	retlw	37	;'%'
  4353     06E1  3475               	retlw	117	;'u'
  4354     06E2  342C               	retlw	44	;','
  4355     06E3  3420               	retlw	32	;' '
  4356     06E4  3443               	retlw	67	;'C'
  4357     06E5  3468               	retlw	104	;'h'
  4358     06E6  3461               	retlw	97	;'a'
  4359     06E7  346E               	retlw	110	;'n'
  4360     06E8  346E               	retlw	110	;'n'
  4361     06E9  3465               	retlw	101	;'e'
  4362     06EA  346C               	retlw	108	;'l'
  4363     06EB  342D               	retlw	45	;'-'
  4364     06EC  3446               	retlw	70	;'F'
  4365     06ED  3432               	retlw	50	;'2'
  4366     06EE  342D               	retlw	45	;'-'
  4367     06EF  3434               	retlw	52	;'4'
  4368     06F0  3433               	retlw	51	;'3'
  4369     06F1  3435               	retlw	53	;'5'
  4370     06F2  342D               	retlw	45	;'-'
  4371     06F3  3434               	retlw	52	;'4'
  4372     06F4  3435               	retlw	53	;'5'
  4373     06F5  3435               	retlw	53	;'5'
  4374     06F6  346E               	retlw	110	;'n'
  4375     06F7  346D               	retlw	109	;'m'
  4376     06F8  343A               	retlw	58	;':'
  4377     06F9  3420               	retlw	32	;' '
  4378     06FA  3425               	retlw	37	;'%'
  4379     06FB  3475               	retlw	117	;'u'
  4380     06FC  342C               	retlw	44	;','
  4381     06FD  3420               	retlw	32	;' '
  4382     06FE  3443               	retlw	67	;'C'
  4383     06FF  3468               	retlw	104	;'h'
  4384     0700  3461               	retlw	97	;'a'
  4385     0701  346E               	retlw	110	;'n'
  4386     0702  346E               	retlw	110	;'n'
  4387     0703  3465               	retlw	101	;'e'
  4388     0704  346C               	retlw	108	;'l'
  4389     0705  342D               	retlw	45	;'-'
  4390     0706  3446               	retlw	70	;'F'
  4391     0707  3433               	retlw	51	;'3'
  4392     0708  342D               	retlw	45	;'-'
  4393     0709  3434               	retlw	52	;'4'
  4394     070A  3437               	retlw	55	;'7'
  4395     070B  3430               	retlw	48	;'0'
  4396     070C  342D               	retlw	45	;'-'
  4397     070D  3434               	retlw	52	;'4'
  4398     070E  3439               	retlw	57	;'9'
  4399     070F  3430               	retlw	48	;'0'
  4400     0710  346E               	retlw	110	;'n'
  4401     0711  346D               	retlw	109	;'m'
  4402     0712  343A               	retlw	58	;':'
  4403     0713  3420               	retlw	32	;' '
  4404     0714  3425               	retlw	37	;'%'
  4405     0715  3475               	retlw	117	;'u'
  4406     0716  342C               	retlw	44	;','
  4407     0717  3420               	retlw	32	;' '
  4408     0718  3443               	retlw	67	;'C'
  4409     0719  3468               	retlw	104	;'h'
  4410     071A  3461               	retlw	97	;'a'
  4411     071B  346E               	retlw	110	;'n'
  4412     071C  346E               	retlw	110	;'n'
  4413     071D  3465               	retlw	101	;'e'
  4414     071E  346C               	retlw	108	;'l'
  4415     071F  342D               	retlw	45	;'-'
  4416     0720  3446               	retlw	70	;'F'
  4417     0721  3434               	retlw	52	;'4'
  4418     0722  342D               	retlw	45	;'-'
  4419     0723  3435               	retlw	53	;'5'
  4420     0724  3430               	retlw	48	;'0'
  4421     0725  3435               	retlw	53	;'5'
  4422     0726  342D               	retlw	45	;'-'
  4423     0727  3435               	retlw	53	;'5'
  4424     0728  3432               	retlw	50	;'2'
  4425     0729  3435               	retlw	53	;'5'
  4426     072A  346E               	retlw	110	;'n'
  4427     072B  346D               	retlw	109	;'m'
  4428     072C  343A               	retlw	58	;':'
  4429     072D  3420               	retlw	32	;' '
  4430     072E  3425               	retlw	37	;'%'
  4431     072F  3475               	retlw	117	;'u'
  4432     0730  342C               	retlw	44	;','
  4433     0731  3420               	retlw	32	;' '
  4434     0732  3443               	retlw	67	;'C'
  4435     0733  3468               	retlw	104	;'h'
  4436     0734  3461               	retlw	97	;'a'
  4437     0735  346E               	retlw	110	;'n'
  4438     0736  346E               	retlw	110	;'n'
  4439     0737  3465               	retlw	101	;'e'
  4440     0738  346C               	retlw	108	;'l'
  4441     0739  342D               	retlw	45	;'-'
  4442     073A  3446               	retlw	70	;'F'
  4443     073B  3435               	retlw	53	;'5'
  4444     073C  342D               	retlw	45	;'-'
  4445     073D  3443               	retlw	67	;'C'
  4446     073E  344C               	retlw	76	;'L'
  4447     073F  3445               	retlw	69	;'E'
  4448     0740  3441               	retlw	65	;'A'
  4449     0741  3452               	retlw	82	;'R'
  4450     0742  343A               	retlw	58	;':'
  4451     0743  3420               	retlw	32	;' '
  4452     0744  3425               	retlw	37	;'%'
  4453     0745  3475               	retlw	117	;'u'
  4454     0746  342C               	retlw	44	;','
  4455     0747  3420               	retlw	32	;' '
  4456     0748  3443               	retlw	67	;'C'
  4457     0749  3468               	retlw	104	;'h'
  4458     074A  3461               	retlw	97	;'a'
  4459     074B  346E               	retlw	110	;'n'
  4460     074C  346E               	retlw	110	;'n'
  4461     074D  3465               	retlw	101	;'e'
  4462     074E  346C               	retlw	108	;'l'
  4463     074F  342D               	retlw	45	;'-'
  4464     0750  3446               	retlw	70	;'F'
  4465     0751  3435               	retlw	53	;'5'
  4466     0752  342D               	retlw	45	;'-'
  4467     0753  344E               	retlw	78	;'N'
  4468     0754  3449               	retlw	73	;'I'
  4469     0755  3452               	retlw	82	;'R'
  4470     0756  343A               	retlw	58	;':'
  4471     0757  3420               	retlw	32	;' '
  4472     0758  3425               	retlw	37	;'%'
  4473     0759  3475               	retlw	117	;'u'
  4474     075A  3420               	retlw	32	;' '
  4475     075B  340D               	retlw	13
  4476     075C  340A               	retlw	10
  4477     075D  3400               	retlw	0
  4478                           
  4479                           	psect	stringtext5
  4480     1000                     __pstringtext5:
  4481     1000                     STR_20:
  4482     1000  3473               	retlw	115	;'s'
  4483     1001  3474               	retlw	116	;'t'
  4484     1002  3461               	retlw	97	;'a'
  4485     1003  3472               	retlw	114	;'r'
  4486     1004  3474               	retlw	116	;'t'
  4487     1005  345F               	retlw	95	;'_'
  4488     1006  346D               	retlw	109	;'m'
  4489     1007  3465               	retlw	101	;'e'
  4490     1008  3461               	retlw	97	;'a'
  4491     1009  3473               	retlw	115	;'s'
  4492     100A  3475               	retlw	117	;'u'
  4493     100B  3472               	retlw	114	;'r'
  4494     100C  3465               	retlw	101	;'e'
  4495     100D  346D               	retlw	109	;'m'
  4496     100E  3465               	retlw	101	;'e'
  4497     100F  346E               	retlw	110	;'n'
  4498     1010  3474               	retlw	116	;'t'
  4499     1011  345F               	retlw	95	;'_'
  4500     1012  3463               	retlw	99	;'c'
  4501     1013  3468               	retlw	104	;'h'
  4502     1014  3461               	retlw	97	;'a'
  4503     1015  346E               	retlw	110	;'n'
  4504     1016  346E               	retlw	110	;'n'
  4505     1017  3465               	retlw	101	;'e'
  4506     1018  346C               	retlw	108	;'l'
  4507     1019  343A               	retlw	58	;':'
  4508     101A  3420               	retlw	32	;' '
  4509     101B  3446               	retlw	70	;'F'
  4510     101C  3431               	retlw	49	;'1'
  4511     101D  3446               	retlw	70	;'F'
  4512     101E  3434               	retlw	52	;'4'
  4513     101F  3443               	retlw	67	;'C'
  4514     1020  346C               	retlw	108	;'l'
  4515     1021  3465               	retlw	101	;'e'
  4516     1022  3461               	retlw	97	;'a'
  4517     1023  3472               	retlw	114	;'r'
  4518     1024  344E               	retlw	78	;'N'
  4519     1025  3449               	retlw	73	;'I'
  4520     1026  3452               	retlw	82	;'R'
  4521     1027  3420               	retlw	32	;' '
  4522     1028  340D               	retlw	13
  4523     1029  340A               	retlw	10
  4524     102A  3400               	retlw	0
  4525                           
  4526                           	psect	stringtext6
  4527     102B                     __pstringtext6:
  4528     102B                     STR_21:
  4529     102B  3473               	retlw	115	;'s'
  4530     102C  3474               	retlw	116	;'t'
  4531     102D  3461               	retlw	97	;'a'
  4532     102E  3472               	retlw	114	;'r'
  4533     102F  3474               	retlw	116	;'t'
  4534     1030  345F               	retlw	95	;'_'
  4535     1031  346D               	retlw	109	;'m'
  4536     1032  3465               	retlw	101	;'e'
  4537     1033  3461               	retlw	97	;'a'
  4538     1034  3473               	retlw	115	;'s'
  4539     1035  3475               	retlw	117	;'u'
  4540     1036  3472               	retlw	114	;'r'
  4541     1037  3465               	retlw	101	;'e'
  4542     1038  346D               	retlw	109	;'m'
  4543     1039  3465               	retlw	101	;'e'
  4544     103A  346E               	retlw	110	;'n'
  4545     103B  3474               	retlw	116	;'t'
  4546     103C  345F               	retlw	95	;'_'
  4547     103D  3463               	retlw	99	;'c'
  4548     103E  3468               	retlw	104	;'h'
  4549     103F  3461               	retlw	97	;'a'
  4550     1040  346E               	retlw	110	;'n'
  4551     1041  346E               	retlw	110	;'n'
  4552     1042  3465               	retlw	101	;'e'
  4553     1043  346C               	retlw	108	;'l'
  4554     1044  343A               	retlw	58	;':'
  4555     1045  3420               	retlw	32	;' '
  4556     1046  3446               	retlw	70	;'F'
  4557     1047  3435               	retlw	53	;'5'
  4558     1048  3446               	retlw	70	;'F'
  4559     1049  3438               	retlw	56	;'8'
  4560     104A  3443               	retlw	67	;'C'
  4561     104B  346C               	retlw	108	;'l'
  4562     104C  3465               	retlw	101	;'e'
  4563     104D  3461               	retlw	97	;'a'
  4564     104E  3472               	retlw	114	;'r'
  4565     104F  344E               	retlw	78	;'N'
  4566     1050  3449               	retlw	73	;'I'
  4567     1051  3452               	retlw	82	;'R'
  4568     1052  3420               	retlw	32	;' '
  4569     1053  340D               	retlw	13
  4570     1054  340A               	retlw	10
  4571     1055  3400               	retlw	0
  4572                           
  4573                           	psect	stringtext7
  4574     1056                     __pstringtext7:
  4575     1056                     STR_15:
  4576     1056  3443               	retlw	67	;'C'
  4577     1057  346F               	retlw	111	;'o'
  4578     1058  3475               	retlw	117	;'u'
  4579     1059  346C               	retlw	108	;'l'
  4580     105A  3464               	retlw	100	;'d'
  4581     105B  3420               	retlw	32	;' '
  4582     105C  346E               	retlw	110	;'n'
  4583     105D  346F               	retlw	111	;'o'
  4584     105E  3474               	retlw	116	;'t'
  4585     105F  3420               	retlw	32	;' '
  4586     1060  3466               	retlw	102	;'f'
  4587     1061  3469               	retlw	105	;'i'
  4588     1062  346E               	retlw	110	;'n'
  4589     1063  3464               	retlw	100	;'d'
  4590     1064  3420               	retlw	32	;' '
  4591     1065  3441               	retlw	65	;'A'
  4592     1066  3453               	retlw	83	;'S'
  4593     1067  3437               	retlw	55	;'7'
  4594     1068  3433               	retlw	51	;'3'
  4595     1069  3434               	retlw	52	;'4'
  4596     106A  3431               	retlw	49	;'1'
  4597     106B  342C               	retlw	44	;','
  4598     106C  3420               	retlw	32	;' '
  4599     106D  3454               	retlw	84	;'T'
  4600     106E  3472               	retlw	114	;'r'
  4601     106F  3479               	retlw	121	;'y'
  4602     1070  3420               	retlw	32	;' '
  4603     1071  3474               	retlw	116	;'t'
  4604     1072  346F               	retlw	111	;'o'
  4605     1073  3420               	retlw	32	;' '
  4606     1074  3466               	retlw	102	;'f'
  4607     1075  3469               	retlw	105	;'i'
  4608     1076  346E               	retlw	110	;'n'
  4609     1077  3464               	retlw	100	;'d'
  4610     1078  3420               	retlw	32	;' '
  4611     1079  3461               	retlw	97	;'a'
  4612     107A  3467               	retlw	103	;'g'
  4613     107B  3461               	retlw	97	;'a'
  4614     107C  3469               	retlw	105	;'i'
  4615     107D  346E               	retlw	110	;'n'
  4616     107E  340D               	retlw	13
  4617     107F  340A               	retlw	10
  4618     1080  3400               	retlw	0
  4619                           
  4620                           	psect	stringtext8
  4621     1081                     __pstringtext8:
  4622     1081                     STR_22:
  4623     1081  3461               	retlw	97	;'a'
  4624     1082  3473               	retlw	115	;'s'
  4625     1083  3437               	retlw	55	;'7'
  4626     1084  3433               	retlw	51	;'3'
  4627     1085  3434               	retlw	52	;'4'
  4628     1086  3431               	retlw	49	;'1'
  4629     1087  345F               	retlw	95	;'_'
  4630     1088  3473               	retlw	115	;'s'
  4631     1089  3474               	retlw	116	;'t'
  4632     108A  3461               	retlw	97	;'a'
  4633     108B  3472               	retlw	114	;'r'
  4634     108C  3474               	retlw	116	;'t'
  4635     108D  345F               	retlw	95	;'_'
  4636     108E  346D               	retlw	109	;'m'
  4637     108F  3465               	retlw	101	;'e'
  4638     1090  3461               	retlw	97	;'a'
  4639     1091  3473               	retlw	115	;'s'
  4640     1092  3475               	retlw	117	;'u'
  4641     1093  3472               	retlw	114	;'r'
  4642     1094  3465               	retlw	101	;'e'
  4643     1095  346D               	retlw	109	;'m'
  4644     1096  3465               	retlw	101	;'e'
  4645     1097  346E               	retlw	110	;'n'
  4646     1098  3474               	retlw	116	;'t'
  4647     1099  343A               	retlw	58	;':'
  4648     109A  3420               	retlw	32	;' '
  4649     109B  3453               	retlw	83	;'S'
  4650     109C  3459               	retlw	89	;'Y'
  4651     109D  344E               	retlw	78	;'N'
  4652     109E  3453               	retlw	83	;'S'
  4653     109F  3420               	retlw	32	;' '
  4654     10A0  340D               	retlw	13
  4655     10A1  340A               	retlw	10
  4656     10A2  3400               	retlw	0
  4657                           
  4658                           	psect	stringtext9
  4659     10A3                     __pstringtext9:
  4660     10A3                     STR_23:
  4661     10A3  3461               	retlw	97	;'a'
  4662     10A4  3473               	retlw	115	;'s'
  4663     10A5  3437               	retlw	55	;'7'
  4664     10A6  3433               	retlw	51	;'3'
  4665     10A7  3434               	retlw	52	;'4'
  4666     10A8  3431               	retlw	49	;'1'
  4667     10A9  345F               	retlw	95	;'_'
  4668     10AA  3473               	retlw	115	;'s'
  4669     10AB  3474               	retlw	116	;'t'
  4670     10AC  3461               	retlw	97	;'a'
  4671     10AD  3472               	retlw	114	;'r'
  4672     10AE  3474               	retlw	116	;'t'
  4673     10AF  345F               	retlw	95	;'_'
  4674     10B0  346D               	retlw	109	;'m'
  4675     10B1  3465               	retlw	101	;'e'
  4676     10B2  3461               	retlw	97	;'a'
  4677     10B3  3473               	retlw	115	;'s'
  4678     10B4  3475               	retlw	117	;'u'
  4679     10B5  3472               	retlw	114	;'r'
  4680     10B6  3465               	retlw	101	;'e'
  4681     10B7  346D               	retlw	109	;'m'
  4682     10B8  3465               	retlw	101	;'e'
  4683     10B9  346E               	retlw	110	;'n'
  4684     10BA  3474               	retlw	116	;'t'
  4685     10BB  343A               	retlw	58	;':'
  4686     10BC  3420               	retlw	32	;' '
  4687     10BD  3453               	retlw	83	;'S'
  4688     10BE  3450               	retlw	80	;'P'
  4689     10BF  344D               	retlw	77	;'M'
  4690     10C0  3420               	retlw	32	;' '
  4691     10C1  340D               	retlw	13
  4692     10C2  340A               	retlw	10
  4693     10C3  3400               	retlw	0
  4694                           
  4695                           	psect	stringtext10
  4696     10C4                     __pstringtext10:
  4697     10C4                     STR_16:
  4698     10C4  3441               	retlw	65	;'A'
  4699     10C5  3453               	retlw	83	;'S'
  4700     10C6  3437               	retlw	55	;'7'
  4701     10C7  3433               	retlw	51	;'3'
  4702     10C8  3434               	retlw	52	;'4'
  4703     10C9  3431               	retlw	49	;'1'
  4704     10CA  342D               	retlw	45	;'-'
  4705     10CB  3447               	retlw	71	;'G'
  4706     10CC  3450               	retlw	80	;'P'
  4707     10CD  3449               	retlw	73	;'I'
  4708     10CE  344F               	retlw	79	;'O'
  4709     10CF  343A               	retlw	58	;':'
  4710     10D0  3420               	retlw	32	;' '
  4711     10D1  3425               	retlw	37	;'%'
  4712     10D2  3475               	retlw	117	;'u'
  4713     10D3  342C               	retlw	44	;','
  4714     10D4  3420               	retlw	32	;' '
  4715     10D5  3443               	retlw	67	;'C'
  4716     10D6  3448               	retlw	72	;'H'
  4717     10D7  3449               	retlw	73	;'I'
  4718     10D8  3450               	retlw	80	;'P'
  4719     10D9  342D               	retlw	45	;'-'
  4720     10DA  3449               	retlw	73	;'I'
  4721     10DB  3444               	retlw	68	;'D'
  4722     10DC  343A               	retlw	58	;':'
  4723     10DD  3420               	retlw	32	;' '
  4724     10DE  3425               	retlw	37	;'%'
  4725     10DF  3432               	retlw	50	;'2'
  4726     10E0  3458               	retlw	88	;'X'
  4727     10E1  3420               	retlw	32	;' '
  4728     10E2  340D               	retlw	13
  4729     10E3  340A               	retlw	10
  4730     10E4  3400               	retlw	0
  4731                           
  4732                           	psect	stringtext11
  4733     10E5                     __pstringtext11:
  4734     10E5                     STR_24:
  4735     10E5  3453               	retlw	83	;'S'
  4736     10E6  3470               	retlw	112	;'p'
  4737     10E7  3465               	retlw	101	;'e'
  4738     10E8  3463               	retlw	99	;'c'
  4739     10E9  3474               	retlw	116	;'t'
  4740     10EA  3472               	retlw	114	;'r'
  4741     10EB  3461               	retlw	97	;'a'
  4742     10EC  346C               	retlw	108	;'l'
  4743     10ED  3420               	retlw	32	;' '
  4744     10EE  3469               	retlw	105	;'i'
  4745     10EF  346E               	retlw	110	;'n'
  4746     10F0  3474               	retlw	116	;'t'
  4747     10F1  3465               	retlw	101	;'e'
  4748     10F2  3472               	retlw	114	;'r'
  4749     10F3  3472               	retlw	114	;'r'
  4750     10F4  3475               	retlw	117	;'u'
  4751     10F5  3470               	retlw	112	;'p'
  4752     10F6  3474               	retlw	116	;'t'
  4753     10F7  3420               	retlw	32	;' '
  4754     10F8  3467               	retlw	103	;'g'
  4755     10F9  3465               	retlw	101	;'e'
  4756     10FA  346E               	retlw	110	;'n'
  4757     10FB  3465               	retlw	101	;'e'
  4758     10FC  3472               	retlw	114	;'r'
  4759     10FD  3461               	retlw	97	;'a'
  4760     10FE  3474               	retlw	116	;'t'
  4761     10FF  3469               	retlw	105	;'i'
  4762     1100  346F               	retlw	111	;'o'
  4763     1101  346E               	retlw	110	;'n'
  4764     1102  3421               	retlw	33	;'!'
  4765     1103  340D               	retlw	13
  4766     1104  340A               	retlw	10
  4767     1105  3400               	retlw	0
  4768                           
  4769                           	psect	stringtext12
  4770     1106                     __pstringtext12:
  4771     1106                     STR_17:
  4772     1106  3449               	retlw	73	;'I'
  4773     1107  346E               	retlw	110	;'n'
  4774     1108  3469               	retlw	105	;'i'
  4775     1109  3474               	retlw	116	;'t'
  4776     110A  3469               	retlw	105	;'i'
  4777     110B  3461               	retlw	97	;'a'
  4778     110C  346C               	retlw	108	;'l'
  4779     110D  3469               	retlw	105	;'i'
  4780     110E  347A               	retlw	122	;'z'
  4781     110F  3461               	retlw	97	;'a'
  4782     1110  3474               	retlw	116	;'t'
  4783     1111  3469               	retlw	105	;'i'
  4784     1112  346F               	retlw	111	;'o'
  4785     1113  346E               	retlw	110	;'n'
  4786     1114  3420               	retlw	32	;' '
  4787     1115  3469               	retlw	105	;'i'
  4788     1116  3473               	retlw	115	;'s'
  4789     1117  3420               	retlw	32	;' '
  4790     1118  3425               	retlw	37	;'%'
  4791     1119  3473               	retlw	115	;'s'
  4792     111A  343F               	retlw	63	;'?'
  4793     111B  340D               	retlw	13
  4794     111C  340A               	retlw	10
  4795     111D  3400               	retlw	0
  4796                           
  4797                           	psect	stringtext13
  4798     111E                     __pstringtext13:
  4799     111E                     STR_1:
  4800     111E  3448               	retlw	72	;'H'
  4801     111F  3465               	retlw	101	;'e'
  4802     1120  346C               	retlw	108	;'l'
  4803     1121  346C               	retlw	108	;'l'
  4804     1122  346F               	retlw	111	;'o'
  4805     1123  3420               	retlw	32	;' '
  4806     1124  344C               	retlw	76	;'L'
  4807     1125  3469               	retlw	105	;'i'
  4808     1126  3467               	retlw	103	;'g'
  4809     1127  3468               	retlw	104	;'h'
  4810     1128  3474               	retlw	116	;'t'
  4811     1129  3420               	retlw	32	;' '
  4812     112A  3453               	retlw	83	;'S'
  4813     112B  3465               	retlw	101	;'e'
  4814     112C  346E               	retlw	110	;'n'
  4815     112D  3473               	retlw	115	;'s'
  4816     112E  346F               	retlw	111	;'o'
  4817     112F  3472               	retlw	114	;'r'
  4818     1130  340D               	retlw	13
  4819     1131  340A               	retlw	10
  4820     1132  3400               	retlw	0
  4821                           
  4822                           	psect	stringtext14
  4823     1133                     __pstringtext14:
  4824     1133                     STR_26:
  4825     1133  3430               	retlw	48	;'0'
  4826     1134  3431               	retlw	49	;'1'
  4827     1135  3432               	retlw	50	;'2'
  4828     1136  3433               	retlw	51	;'3'
  4829     1137  3434               	retlw	52	;'4'
  4830     1138  3435               	retlw	53	;'5'
  4831     1139  3436               	retlw	54	;'6'
  4832     113A  3437               	retlw	55	;'7'
  4833     113B  3438               	retlw	56	;'8'
  4834     113C  3439               	retlw	57	;'9'
  4835     113D  3441               	retlw	65	;'A'
  4836     113E  3442               	retlw	66	;'B'
  4837     113F  3443               	retlw	67	;'C'
  4838     1140  3444               	retlw	68	;'D'
  4839     1141  3445               	retlw	69	;'E'
  4840     1142  3446               	retlw	70	;'F'
  4841     1143  3400               	retlw	0
  4842                           
  4843                           	psect	stringtext15
  4844     1144                     __pstringtext15:
  4845     1144                     STR_27:
  4846     1144  3430               	retlw	48	;'0'
  4847     1145  3431               	retlw	49	;'1'
  4848     1146  3432               	retlw	50	;'2'
  4849     1147  3433               	retlw	51	;'3'
  4850     1148  3434               	retlw	52	;'4'
  4851     1149  3435               	retlw	53	;'5'
  4852     114A  3436               	retlw	54	;'6'
  4853     114B  3437               	retlw	55	;'7'
  4854     114C  3438               	retlw	56	;'8'
  4855     114D  3439               	retlw	57	;'9'
  4856     114E  3461               	retlw	97	;'a'
  4857     114F  3462               	retlw	98	;'b'
  4858     1150  3463               	retlw	99	;'c'
  4859     1151  3464               	retlw	100	;'d'
  4860     1152  3465               	retlw	101	;'e'
  4861     1153  3466               	retlw	102	;'f'
  4862     1154  3400               	retlw	0
  4863                           
  4864                           	psect	stringtext16
  4865     1155                     __pstringtext16:
  4866     1155                     STR_14:
  4867     1155  3461               	retlw	97	;'a'
  4868     1156  3473               	retlw	115	;'s'
  4869     1157  3437               	retlw	55	;'7'
  4870     1158  3433               	retlw	51	;'3'
  4871     1159  3434               	retlw	52	;'4'
  4872     115A  3431               	retlw	49	;'1'
  4873     115B  345F               	retlw	95	;'_'
  4874     115C  3469               	retlw	105	;'i'
  4875     115D  346E               	retlw	110	;'n'
  4876     115E  3469               	retlw	105	;'i'
  4877     115F  3474               	retlw	116	;'t'
  4878     1160  342E               	retlw	46	;'.'
  4879     1161  342E               	retlw	46	;'.'
  4880     1162  342E               	retlw	46	;'.'
  4881     1163  340D               	retlw	13
  4882     1164  340A               	retlw	10
  4883     1165  3400               	retlw	0
  4884                           
  4885                           	psect	stringtext17
  4886     1166                     __pstringtext17:
  4887     1166                     STR_3:
  4888     1166  3441               	retlw	65	;'A'
  4889     1167  3446               	retlw	70	;'F'
  4890     1168  3430               	retlw	48	;'0'
  4891     1169  3431               	retlw	49	;'1'
  4892     116A  3437               	retlw	55	;'7'
  4893     116B  3441               	retlw	65	;'A'
  4894     116C  3430               	retlw	48	;'0'
  4895     116D  3430               	retlw	48	;'0'
  4896     116E  3430               	retlw	48	;'0'
  4897     116F  3431               	retlw	49	;'1'
  4898     1170  3400               	retlw	0
  4899                           
  4900                           	psect	stringtext18
  4901     117B                     __pstringtext18:
  4902     117B                     STR_18:
  4903     117B  3463               	retlw	99	;'c'
  4904     117C  346F               	retlw	111	;'o'
  4905     117D  346D               	retlw	109	;'m'
  4906     117E  3470               	retlw	112	;'p'
  4907     117F  346C               	retlw	108	;'l'
  4908     1180  3465               	retlw	101	;'e'
  4909     1181  3474               	retlw	116	;'t'
  4910     1182  3465               	retlw	101	;'e'
  4911     1183  3400               	retlw	0
  4912                           
  4913                           	psect	stringtext19
  4914     1184                     __pstringtext19:
  4915     1184                     STR_2:
  4916     1184  3473               	retlw	115	;'s'
  4917     1185  346E               	retlw	110	;'n'
  4918     1186  343A               	retlw	58	;':'
  4919     1187  3420               	retlw	32	;' '
  4920     1188  3425               	retlw	37	;'%'
  4921     1189  3473               	retlw	115	;'s'
  4922     118A  340D               	retlw	13
  4923     118B  340A               	retlw	10
  4924     118C  3400               	retlw	0
  4925                           
  4926                           	psect	stringtext20
  4927     1195                     __pstringtext20:
  4928     1195                     STR_25:
  4929     1195  3428               	retlw	40	;'('
  4930     1196  346E               	retlw	110	;'n'
  4931     1197  3475               	retlw	117	;'u'
  4932     1198  346C               	retlw	108	;'l'
  4933     1199  346C               	retlw	108	;'l'
  4934     119A  3429               	retlw	41	;')'
  4935     119B  3400               	retlw	0
  4936                           
  4937                           	psect	stringtext21
  4938     119C                     __pstringtext21:
  4939     119C                     STR_19:
  4940     119C  3477               	retlw	119	;'w'
  4941     119D  3472               	retlw	114	;'r'
  4942     119E  346F               	retlw	111	;'o'
  4943     119F  346E               	retlw	110	;'n'
  4944     11A0  3467               	retlw	103	;'g'
  4945     11A1  3400               	retlw	0
  4946                           
  4947                           	psect	stringtext22
  4948     11A2                     __pstringtext22:
  4949     11A2                     STR_8:
  4950     11A2  3425               	retlw	37	;'%'
  4951     11A3  3430               	retlw	48	;'0'
  4952     11A4  3438               	retlw	56	;'8'
  4953     11A5  3478               	retlw	120	;'x'
  4954     11A6  343A               	retlw	58	;':'
  4955     11A7  3400               	retlw	0
  4956                           
  4957                           	psect	stringtext23
  4958     11A8                     __pstringtext23:
  4959     11A8                     STR_9:
  4960     11A8  3420               	retlw	32	;' '
  4961     11A9  3425               	retlw	37	;'%'
  4962     11AA  3430               	retlw	48	;'0'
  4963     11AB  3432               	retlw	50	;'2'
  4964     11AC  3478               	retlw	120	;'x'
  4965     11AD  3400               	retlw	0
  4966                           
  4967                           	psect	stringtext24
  4968     11AE                     __pstringtext24:
  4969     11AE                     STR_10:
  4970     11AE  3420               	retlw	32	;' '
  4971     11AF  3420               	retlw	32	;' '
  4972     11B0  3420               	retlw	32	;' '
  4973     11B1  3400               	retlw	0
  4974                           
  4975                           	psect	stringtext25
  4976     11B2                     __pstringtext25:
  4977     11B2                     STR_12:
  4978     11B2  3425               	retlw	37	;'%'
  4979     11B3  3463               	retlw	99	;'c'
  4980     11B4  3400               	retlw	0
  4981                           
  4982                           	psect	stringtext26
  4983     0000                     __pstringtext26:
  4984     10C1                     
  4985                           	psect	cinit
  4986     0022                     start_initialization:	
  4987                           ; #config settings
  4988                           
  4989     0022                     __initialization:
  4990                           
  4991                           ; Initialize objects allocated to COMMON
  4992     0022  3187  27FE  3180   	fcall	__pidataCOMMON	;fetch initializer
  4993     0025  00F9               	movwf	__pdataCOMMON& (0+127)
  4994                           
  4995                           ; Initialize objects allocated to BANK0
  4996     0026  3187  27FF  3180   	fcall	__pidataBANK0	;fetch initializer
  4997     0029  00EF               	movwf	__pdataBANK0& (0+127)
  4998                           
  4999                           ; Clear objects allocated to COMMON
  5000     002A  01F6               	clrf	__pbssCOMMON& (0+127)
  5001     002B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5002     002C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5003                           
  5004                           ; Clear objects allocated to BANK0
  5005     002D  305E               	movlw	low __pbssBANK0
  5006     002E  0084               	movwf	4
  5007     002F  3000               	movlw	high __pbssBANK0
  5008     0030  0085               	movwf	5
  5009     0031  300B               	movlw	11
  5010     0032  3189  213E  3180   	fcall	clear_ram0
  5011                           
  5012                           ; Clear objects allocated to BANK1
  5013     0035  0141               	movlb	1	; select bank1
  5014     0036  01C1               	clrf	__pbssBANK1& (0+127)
  5015     0037  01C2               	clrf	(__pbssBANK1+1)& (0+127)
  5016     0038  01C3               	clrf	(__pbssBANK1+2)& (0+127)
  5017     0039  01C4               	clrf	(__pbssBANK1+3)& (0+127)
  5018                           
  5019                           ; Clear objects allocated to BANK2
  5020     003A  3020               	movlw	low __pbssBANK2
  5021     003B  0084               	movwf	4
  5022     003C  3001               	movlw	high __pbssBANK2
  5023     003D  0085               	movwf	5
  5024     003E  3040               	movlw	64
  5025     003F  3189  213E  3180   	fcall	clear_ram0
  5026     0042                     end_of_initialization:	
  5027                           ;End of C runtime variable initialization code
  5028                           
  5029     0042                     __end_of__initialization:
  5030     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5031     0043  0140               	movlb	0
  5032     0044  3182  2A8C         	ljmp	_main	;jump to C main() function
  5033                           
  5034                           	psect	bssCOMMON
  5035     0076                     __pbssCOMMON:
  5036     0076                     _currentState:
  5037     0076                     	ds	1
  5038     0077                     _currentRegister:
  5039     0077                     	ds	1
  5040     0078                     _ack:
  5041     0078                     	ds	1
  5042                           
  5043                           	psect	dataCOMMON
  5044     0079                     __pdataCOMMON:
  5045     0079                     _nack:
  5046     0079                     	ds	1
  5047                           
  5048                           	psect	bssBANK0
  5049     005E                     __pbssBANK0:
  5050     005E                     main@prev_ticks2:
  5051     005E                     	ds	4
  5052     0062                     _ticks:
  5053     0062                     	ds	4
  5054     0066                     _gpio_mode:
  5055     0066                     	ds	1
  5056     0067                     _measurement_mode:
  5057     0067                     	ds	1
  5058     0068                     _eusart1RxLastError:
  5059     0068                     	ds	1
  5060                           
  5061                           	psect	dataBANK0
  5062     006F                     __pdataBANK0:
  5063     006F                     _GAIN:
  5064     006F                     	ds	1
  5065                           
  5066                           	psect	bssBANK1
  5067     00C1                     __pbssBANK1:
  5068     00C1                     main@prev_ticks1:
  5069     00C1                     	ds	4
  5070                           
  5071                           	psect	bssBANK2
  5072     0120                     __pbssBANK2:
  5073     0120                     _slaveData:
  5074     0120                     	ds	64
  5075                           
  5076                           	psect	clrtext
  5077     093E                     clear_ram0:	
  5078                           ;	Called with FSR0 containing the base address, and
  5079                           ;	WREG with the size to clear
  5080                           
  5081     093E  0064               	clrwdt	;clear the watchdog before getting into this loop
  5082     093F                     clrloop0:
  5083     093F  0180               	clrf	0	;clear RAM location pointed to by FSR
  5084     0940  3101               	addfsr 0,1
  5085     0941  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5086     0942  293F               	goto	clrloop0	;have we reached the end yet?
  5087     0943  3400               	retlw	0	;all done for this memory range, return
  5088                           
  5089                           	psect	cstackBANK1
  5090     00A0                     __pcstackBANK1:
  5091     00A0                     main@value:
  5092                           
  5093                           ; 1 bytes @ 0x0
  5094     00A0                     	ds	1
  5095     00A1                     main@buffer:
  5096                           
  5097                           ; 3 bytes @ 0x1
  5098     00A1                     	ds	3
  5099     00A4                     main@now:
  5100                           
  5101                           ; 4 bytes @ 0x4
  5102     00A4                     	ds	4
  5103     00A8                     main@i:
  5104                           
  5105                           ; 1 bytes @ 0x8
  5106     00A8                     	ds	1
  5107     00A9                     main@data2:
  5108                           
  5109                           ; 12 bytes @ 0x9
  5110     00A9                     	ds	12
  5111     00B5                     main@data1:
  5112                           
  5113                           ; 12 bytes @ 0x15
  5114     00B5                     	ds	12
  5115                           
  5116                           	psect	cstackCOMMON
  5117     0070                     __pcstackCOMMON:
  5118     0070                     ?_isprint:
  5119     0070                     ?_isdigit:	
  5120                           ; 1 bit 
  5121                           
  5122     0070                     ?_isspace:	
  5123                           ; 1 bit 
  5124                           
  5125     0070                     ?_isalpha:	
  5126                           ; 1 bit 
  5127                           
  5128     0070                     ?_isupper:	
  5129                           ; 1 bit 
  5130                           
  5131     0070                     ?_PMD_Initialize:	
  5132                           ; 1 bit 
  5133                           
  5134     0070                     ?_PIN_MANAGER_Initialize:	
  5135                           ; 1 bytes @ 0x0
  5136                           
  5137     0070                     ?_OSCILLATOR_Initialize:	
  5138                           ; 1 bytes @ 0x0
  5139                           
  5140     0070                     ?_i2c_slave_interrupt:	
  5141                           ; 1 bytes @ 0x0
  5142                           
  5143     0070                     ??_i2c_slave_interrupt:	
  5144                           ; 1 bytes @ 0x0
  5145                           
  5146     0070                     ?_tmr0_init:	
  5147                           ; 1 bytes @ 0x0
  5148                           
  5149     0070                     ?_EUSART1_Initialize:	
  5150                           ; 1 bytes @ 0x0
  5151                           
  5152     0070                     ?_i2c_master_init:	
  5153                           ; 1 bytes @ 0x0
  5154                           
  5155     0070                     ?_i2c_slave_init:	
  5156                           ; 1 bytes @ 0x0
  5157                           
  5158     0070                     ?_as7341_begin:	
  5159                           ; 1 bytes @ 0x0
  5160                           
  5161     0070                     ?_as7341_enableLED:	
  5162                           ; 1 bytes @ 0x0
  5163                           
  5164     0070                     ?_as7341_start_measurement:	
  5165                           ; 1 bytes @ 0x0
  5166                           
  5167     0070                     ?_dump_memory_map:	
  5168                           ; 1 bytes @ 0x0
  5169                           
  5170     0070                     ?_as7341_init:	
  5171                           ; 1 bytes @ 0x0
  5172                           
  5173     0070                     ?_set_ATIME:	
  5174                           ; 1 bytes @ 0x0
  5175                           
  5176     0070                     ?_set_AGAIN:	
  5177                           ; 1 bytes @ 0x0
  5178                           
  5179     0070                     ?_as7341_i2c_read:	
  5180                           ; 1 bytes @ 0x0
  5181                           
  5182     0070                     ?_as7341_power_enable:	
  5183                           ; 1 bytes @ 0x0
  5184                           
  5185     0070                     ?_set_bank:	
  5186                           ; 1 bytes @ 0x0
  5187                           
  5188     0070                     ?_as7341_smux_cmd_config:	
  5189                           ; 1 bytes @ 0x0
  5190                           
  5191     0070                     ?_set_GPIO_mode:	
  5192                           ; 1 bytes @ 0x0
  5193                           
  5194     0070                     ?_toupper:	
  5195                           ; 1 bytes @ 0x0
  5196                           
  5197     0070                     ?_SYSTEM_Initialize:	
  5198                           ; 1 bytes @ 0x0
  5199                           
  5200     0070                     ?_INTERRUPT_InterruptManager:	
  5201                           ; 1 bytes @ 0x0
  5202                           
  5203     0070                     ?_main:	
  5204                           ; 1 bytes @ 0x0
  5205                           
  5206     0070                     ?_I2C_Wait:	
  5207                           ; 1 bytes @ 0x0
  5208                           
  5209     0070                     ?_I2C_Start:	
  5210                           ; 1 bytes @ 0x0
  5211                           
  5212     0070                     ?_I2C_Stop:	
  5213                           ; 1 bytes @ 0x0
  5214                           
  5215     0070                     ?_I2C_Write:	
  5216                           ; 1 bytes @ 0x0
  5217                           
  5218     0070                     ?_I2C_Read:	
  5219                           ; 1 bytes @ 0x0
  5220                           
  5221     0070                     ?_EUSART1_Write:	
  5222                           ; 1 bytes @ 0x0
  5223                           
  5224     0070                     ?_putch:	
  5225                           ; 1 bytes @ 0x0
  5226                           
  5227     0070                     ?_enable_sp_en:	
  5228                           ; 1 bytes @ 0x0
  5229                           
  5230     0070                     ?_enable_smux:	
  5231                           ; 1 bytes @ 0x0
  5232                           
  5233     0070                     ?_as7341_config:	
  5234                           ; 1 bytes @ 0x0
  5235                           
  5236     0070                     ?_set_F1F4ClearNIR:	
  5237                           ; 1 bytes @ 0x0
  5238                           
  5239     0070                     ?_set_F5F8ClearNIR:	
  5240                           ; 1 bytes @ 0x0
  5241                           
  5242                           
  5243                           ; 1 bytes @ 0x0
  5244     0070                     	ds	1
  5245     0071                     i2c_slave_interrupt@isRead:
  5246                           
  5247                           ; 1 bytes @ 0x1
  5248     0071                     	ds	1
  5249     0072                     i2c_slave_interrupt@isNack:
  5250                           
  5251                           ; 1 bytes @ 0x2
  5252     0072                     	ds	1
  5253     0073                     i2c_slave_interrupt@value:
  5254                           
  5255                           ; 1 bytes @ 0x3
  5256     0073                     	ds	1
  5257     0074                     ??_PMD_Initialize:
  5258     0074                     ??_PIN_MANAGER_Initialize:	
  5259                           ; 1 bytes @ 0x4
  5260                           
  5261     0074                     ??_OSCILLATOR_Initialize:	
  5262                           ; 1 bytes @ 0x4
  5263                           
  5264     0074                     ??_tmr0_init:	
  5265                           ; 1 bytes @ 0x4
  5266                           
  5267     0074                     ??_i2c_master_init:	
  5268                           ; 1 bytes @ 0x4
  5269                           
  5270     0074                     ??_i2c_slave_init:	
  5271                           ; 1 bytes @ 0x4
  5272                           
  5273     0074                     ?_i2c_slave_set_register:	
  5274                           ; 1 bytes @ 0x4
  5275                           
  5276     0074                     ?_EUSART1_SetFramingErrorHandler:	
  5277                           ; 1 bytes @ 0x4
  5278                           
  5279     0074                     ?_EUSART1_SetOverrunErrorHandler:	
  5280                           ; 1 bytes @ 0x4
  5281                           
  5282     0074                     ?_EUSART1_SetErrorHandler:	
  5283                           ; 1 bytes @ 0x4
  5284                           
  5285     0074                     ??_isprint:	
  5286                           ; 1 bytes @ 0x4
  5287                           
  5288     0074                     ??_isdigit:	
  5289                           ; 1 bytes @ 0x4
  5290                           
  5291     0074                     ??_isspace:	
  5292                           ; 1 bytes @ 0x4
  5293                           
  5294     0074                     ??_toupper:	
  5295                           ; 1 bytes @ 0x4
  5296                           
  5297     0074                     ??_isupper:	
  5298                           ; 1 bytes @ 0x4
  5299                           
  5300     0074                     ??_SYSTEM_Initialize:	
  5301                           ; 1 bytes @ 0x4
  5302                           
  5303     0074                     ??_get_ticks_with_lock:	
  5304                           ; 1 bytes @ 0x4
  5305                           
  5306     0074                     ??_INTERRUPT_InterruptManager:	
  5307                           ; 1 bytes @ 0x4
  5308                           
  5309     0074                     ??_I2C_Wait:	
  5310                           ; 1 bytes @ 0x4
  5311                           
  5312     0074                     ??_I2C_Start:	
  5313                           ; 1 bytes @ 0x4
  5314                           
  5315     0074                     ??_I2C_Stop:	
  5316                           ; 1 bytes @ 0x4
  5317                           
  5318     0074                     ??_I2C_Write:	
  5319                           ; 1 bytes @ 0x4
  5320                           
  5321     0074                     ??_I2C_Read:	
  5322                           ; 1 bytes @ 0x4
  5323                           
  5324     0074                     ??_EUSART1_Write:	
  5325                           ; 1 bytes @ 0x4
  5326                           
  5327     0074                     ??___wmul:	
  5328                           ; 1 bytes @ 0x4
  5329                           
  5330     0074                     ??___lmul:	
  5331                           ; 1 bytes @ 0x4
  5332                           
  5333     0074                     ??___lwdiv:	
  5334                           ; 1 bytes @ 0x4
  5335                           
  5336     0074                     I2C_Write@data:	
  5337                           ; 1 bytes @ 0x4
  5338                           
  5339     0074                     I2C_Read@a:	
  5340                           ; 1 bytes @ 0x4
  5341                           
  5342     0074                     i2c_slave_set_register@value:	
  5343                           ; 1 bytes @ 0x4
  5344                           
  5345     0074                     EUSART1_Write@txData:	
  5346                           ; 1 bytes @ 0x4
  5347                           
  5348     0074                     _isdigit$1803:	
  5349                           ; 1 bytes @ 0x4
  5350                           
  5351     0074                     _isprint$1806:	
  5352                           ; 1 bytes @ 0x4
  5353                           
  5354     0074                     _isspace$1840:	
  5355                           ; 1 bytes @ 0x4
  5356                           
  5357     0074                     _isupper$1843:	
  5358                           ; 1 bytes @ 0x4
  5359                           
  5360     0074                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  5361                           ; 1 bytes @ 0x4
  5362                           
  5363     0074                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  5364                           ; 2 bytes @ 0x4
  5365                           
  5366     0074                     EUSART1_SetErrorHandler@interruptHandler:	
  5367                           ; 2 bytes @ 0x4
  5368                           
  5369     0074                     ___wmul@product:	
  5370                           ; 2 bytes @ 0x4
  5371                           
  5372                           
  5373                           ; 2 bytes @ 0x4
  5374     0074                     	ds	1
  5375     0075                     ??_i2c_slave_set_register:
  5376     0075                     ?_as7341_i2c_write:	
  5377                           ; 1 bytes @ 0x5
  5378                           
  5379     0075                     ?_as7341_write_byte:	
  5380                           ; 1 bytes @ 0x5
  5381                           
  5382     0075                     ??_putch:	
  5383                           ; 1 bytes @ 0x5
  5384                           
  5385     0075                     ??___lwmod:	
  5386                           ; 1 bytes @ 0x5
  5387                           
  5388     0075                     I2C_Read@temp:	
  5389                           ; 1 bytes @ 0x5
  5390                           
  5391     0075                     i2c_slave_init@i:	
  5392                           ; 1 bytes @ 0x5
  5393                           
  5394     0075                     i2c_slave_set_register@registerAddress:	
  5395                           ; 1 bytes @ 0x5
  5396                           
  5397     0075                     putch@txData:	
  5398                           ; 1 bytes @ 0x5
  5399                           
  5400     0075                     as7341_write_byte@value:	
  5401                           ; 1 bytes @ 0x5
  5402                           
  5403     0075                     as7341_i2c_write@value:	
  5404                           ; 1 bytes @ 0x5
  5405                           
  5406     0075                     isdigit@c:	
  5407                           ; 1 bytes @ 0x5
  5408                           
  5409     0075                     isprint@c:	
  5410                           ; 1 bytes @ 0x5
  5411                           
  5412     0075                     isspace@c:	
  5413                           ; 1 bytes @ 0x5
  5414                           
  5415     0075                     isupper@c:	
  5416                           ; 1 bytes @ 0x5
  5417                           
  5418     0075                     toupper@c:	
  5419                           ; 1 bytes @ 0x5
  5420                           
  5421                           
  5422                           ; 1 bytes @ 0x5
  5423     0075                     	ds	1
  5424     0076                     ??_EUSART1_Initialize:
  5425     0076                     ??_as7341_begin:	
  5426                           ; 1 bytes @ 0x6
  5427                           
  5428     0076                     ??_as7341_enableLED:	
  5429                           ; 1 bytes @ 0x6
  5430                           
  5431     0076                     ??_dump_memory_map:	
  5432                           ; 1 bytes @ 0x6
  5433                           
  5434     0076                     ??_EUSART1_SetFramingErrorHandler:	
  5435                           ; 1 bytes @ 0x6
  5436                           
  5437     0076                     ??_EUSART1_SetOverrunErrorHandler:	
  5438                           ; 1 bytes @ 0x6
  5439                           
  5440     0076                     ??_EUSART1_SetErrorHandler:	
  5441                           ; 1 bytes @ 0x6
  5442                           
  5443     0076                     ??_set_ATIME:	
  5444                           ; 1 bytes @ 0x6
  5445                           
  5446     0076                     ??_set_AGAIN:	
  5447                           ; 1 bytes @ 0x6
  5448                           
  5449     0076                     ??_as7341_i2c_read:	
  5450                           ; 1 bytes @ 0x6
  5451                           
  5452     0076                     ??_as7341_i2c_write:	
  5453                           ; 1 bytes @ 0x6
  5454                           
  5455     0076                     ??_set_bank:	
  5456                           ; 1 bytes @ 0x6
  5457                           
  5458     0076                     ??_as7341_write_byte:	
  5459                           ; 1 bytes @ 0x6
  5460                           
  5461     0076                     ??_as7341_smux_cmd_config:	
  5462                           ; 1 bytes @ 0x6
  5463                           
  5464     0076                     ??_set_GPIO_mode:	
  5465                           ; 1 bytes @ 0x6
  5466                           
  5467     0076                     ??_isalpha:	
  5468                           ; 1 bytes @ 0x6
  5469                           
  5470     0076                     ??_enable_smux:	
  5471                           ; 1 bytes @ 0x6
  5472                           
  5473     0076                     ??_as7341_config:	
  5474                           ; 1 bytes @ 0x6
  5475                           
  5476     0076                     ??_set_F1F4ClearNIR:	
  5477                           ; 1 bytes @ 0x6
  5478                           
  5479     0076                     ??_set_F5F8ClearNIR:	
  5480                           ; 1 bytes @ 0x6
  5481                           
  5482                           
  5483                           	psect	cstackBANK0
  5484     0020                     __pcstackBANK0:	
  5485                           ; 1 bytes @ 0x6
  5486                           
  5487     0020                     ?___wmul:
  5488     0020                     ?___lwdiv:	
  5489                           ; 2 bytes @ 0x0
  5490                           
  5491     0020                     ?_get_ticks_with_lock:	
  5492                           ; 2 bytes @ 0x0
  5493                           
  5494     0020                     ?_calculate_diff:	
  5495                           ; 4 bytes @ 0x0
  5496                           
  5497     0020                     ?___lmul:	
  5498                           ; 4 bytes @ 0x0
  5499                           
  5500     0020                     as7341_write_byte@reg:	
  5501                           ; 4 bytes @ 0x0
  5502                           
  5503     0020                     as7341_i2c_write@reg:	
  5504                           ; 1 bytes @ 0x0
  5505                           
  5506     0020                     as7341_i2c_read@reg:	
  5507                           ; 1 bytes @ 0x0
  5508                           
  5509     0020                     _isalpha$1837:	
  5510                           ; 1 bytes @ 0x0
  5511                           
  5512     0020                     ___wmul@multiplier:	
  5513                           ; 1 bytes @ 0x0
  5514                           
  5515     0020                     ___lwdiv@divisor:	
  5516                           ; 2 bytes @ 0x0
  5517                           
  5518     0020                     calculate_diff@now:	
  5519                           ; 2 bytes @ 0x0
  5520                           
  5521     0020                     ___lmul@multiplier:	
  5522                           ; 4 bytes @ 0x0
  5523                           
  5524                           
  5525                           ; 4 bytes @ 0x0
  5526     0020                     	ds	1
  5527     0021                     as7341_i2c_write@data:
  5528     0021                     as7341_i2c_read@buf:	
  5529                           ; 1 bytes @ 0x1
  5530                           
  5531     0021                     isalpha@c:	
  5532                           ; 1 bytes @ 0x1
  5533                           
  5534                           
  5535                           ; 1 bytes @ 0x1
  5536     0021                     	ds	1
  5537     0022                     ?_set_ASTEP:
  5538     0022                     ??_enable_sp_en:	
  5539                           ; 1 bytes @ 0x2
  5540                           
  5541     0022                     ?_get_channel_data:	
  5542                           ; 1 bytes @ 0x2
  5543                           
  5544     0022                     enable_smux@state:	
  5545                           ; 2 bytes @ 0x2
  5546                           
  5547     0022                     set_GPIO_mode@mode:	
  5548                           ; 1 bytes @ 0x2
  5549                           
  5550     0022                     set_bank@state:	
  5551                           ; 1 bytes @ 0x2
  5552                           
  5553     0022                     set_ATIME@value:	
  5554                           ; 1 bytes @ 0x2
  5555                           
  5556     0022                     set_AGAIN@value:	
  5557                           ; 1 bytes @ 0x2
  5558                           
  5559     0022                     set_ASTEP@value:	
  5560                           ; 1 bytes @ 0x2
  5561                           
  5562     0022                     ___wmul@multiplicand:	
  5563                           ; 2 bytes @ 0x2
  5564                           
  5565     0022                     ___lwdiv@dividend:	
  5566                           ; 2 bytes @ 0x2
  5567                           
  5568                           
  5569                           ; 2 bytes @ 0x2
  5570     0022                     	ds	1
  5571     0023                     enable_smux@regVal:
  5572     0023                     set_GPIO_mode@data:	
  5573                           ; 1 bytes @ 0x3
  5574                           
  5575     0023                     set_bank@regVal:	
  5576                           ; 1 bytes @ 0x3
  5577                           
  5578                           
  5579                           ; 1 bytes @ 0x3
  5580     0023                     	ds	1
  5581     0024                     ?_control_LED:
  5582     0024                     ??_set_ASTEP:	
  5583                           ; 1 bytes @ 0x4
  5584                           
  5585     0024                     ??_get_channel_data:	
  5586                           ; 1 bytes @ 0x4
  5587                           
  5588     0024                     enable_sp_en@state:	
  5589                           ; 1 bytes @ 0x4
  5590                           
  5591     0024                     as7341_config@mode:	
  5592                           ; 1 bytes @ 0x4
  5593                           
  5594     0024                     as7341_enableLED@state:	
  5595                           ; 1 bytes @ 0x4
  5596                           
  5597     0024                     control_LED@current:	
  5598                           ; 1 bytes @ 0x4
  5599                           
  5600     0024                     ___lwdiv@counter:	
  5601                           ; 1 bytes @ 0x4
  5602                           
  5603     0024                     get_ticks_with_lock@result:	
  5604                           ; 1 bytes @ 0x4
  5605                           
  5606     0024                     calculate_diff@prev_ticks:	
  5607                           ; 4 bytes @ 0x4
  5608                           
  5609     0024                     ___lmul@multiplicand:	
  5610                           ; 4 bytes @ 0x4
  5611                           
  5612                           
  5613                           ; 4 bytes @ 0x4
  5614     0024                     	ds	1
  5615     0025                     ??_control_LED:
  5616     0025                     as7341_config@data:	
  5617                           ; 1 bytes @ 0x5
  5618                           
  5619     0025                     set_ASTEP@high_value:	
  5620                           ; 1 bytes @ 0x5
  5621                           
  5622     0025                     as7341_enableLED@data1:	
  5623                           ; 1 bytes @ 0x5
  5624                           
  5625     0025                     _enable_sp_en$1194:	
  5626                           ; 1 bytes @ 0x5
  5627                           
  5628     0025                     ___lwdiv@quotient:	
  5629                           ; 2 bytes @ 0x5
  5630                           
  5631                           
  5632                           ; 2 bytes @ 0x5
  5633     0025                     	ds	1
  5634     0026                     set_ASTEP@low_value:
  5635     0026                     as7341_enableLED@data:	
  5636                           ; 1 bytes @ 0x6
  5637                           
  5638     0026                     control_LED@LED:	
  5639                           ; 1 bytes @ 0x6
  5640                           
  5641     0026                     get_channel_data@data:	
  5642                           ; 1 bytes @ 0x6
  5643                           
  5644                           
  5645                           ; 4 bytes @ 0x6
  5646     0026                     	ds	1
  5647     0027                     ?___lwmod:
  5648     0027                     enable_sp_en@regVal:	
  5649                           ; 2 bytes @ 0x7
  5650                           
  5651     0027                     control_LED@data:	
  5652                           ; 1 bytes @ 0x7
  5653                           
  5654     0027                     ___lwmod@divisor:	
  5655                           ; 1 bytes @ 0x7
  5656                           
  5657                           
  5658                           ; 2 bytes @ 0x7
  5659     0027                     	ds	1
  5660     0028                     ??_calculate_diff:
  5661     0028                     ___lmul@product:	
  5662                           ; 1 bytes @ 0x8
  5663                           
  5664                           
  5665                           ; 4 bytes @ 0x8
  5666     0028                     	ds	1
  5667     0029                     ___lwmod@dividend:
  5668                           
  5669                           ; 2 bytes @ 0x9
  5670     0029                     	ds	1
  5671     002A                     get_channel_data@channel:
  5672                           
  5673                           ; 1 bytes @ 0xA
  5674     002A                     	ds	1
  5675     002B                     ___lwmod@counter:
  5676     002B                     get_channel_data@channelData:	
  5677                           ; 1 bytes @ 0xB
  5678                           
  5679                           
  5680                           ; 2 bytes @ 0xB
  5681     002B                     	ds	1
  5682     002C                     ?_printf:
  5683     002C                     ?_strtol:	
  5684                           ; 2 bytes @ 0xC
  5685                           
  5686     002C                     strtol@endptr:	
  5687                           ; 4 bytes @ 0xC
  5688                           
  5689     002C                     printf@f:	
  5690                           ; 1 bytes @ 0xC
  5691                           
  5692                           
  5693                           ; 2 bytes @ 0xC
  5694     002C                     	ds	1
  5695     002D                     ?_readSpectralDataOne:
  5696     002D                     ?_readSpectralDataTwo:	
  5697                           ; 12 bytes @ 0xD
  5698                           
  5699     002D                     strtol@base:	
  5700                           ; 12 bytes @ 0xD
  5701                           
  5702                           
  5703                           ; 2 bytes @ 0xD
  5704     002D                     	ds	3
  5705     0030                     ??_strtol:
  5706     0030                     calculate_diff@diff:	
  5707                           ; 1 bytes @ 0x10
  5708                           
  5709                           
  5710                           ; 4 bytes @ 0x10
  5711     0030                     	ds	4
  5712     0034                     strtol@sign:
  5713                           
  5714                           ; 1 bytes @ 0x14
  5715     0034                     	ds	1
  5716     0035                     strtol@a:
  5717                           
  5718                           ; 4 bytes @ 0x15
  5719     0035                     	ds	4
  5720     0039                     ??_readSpectralDataOne:
  5721     0039                     ??_readSpectralDataTwo:	
  5722                           ; 1 bytes @ 0x19
  5723                           
  5724     0039                     strtol@s:	
  5725                           ; 1 bytes @ 0x19
  5726                           
  5727                           
  5728                           ; 1 bytes @ 0x19
  5729     0039                     	ds	1
  5730     003A                     ??_printf:
  5731     003A                     strtol@c:	
  5732                           ; 1 bytes @ 0x1A
  5733                           
  5734     003A                     readSpectralDataOne@data:	
  5735                           ; 1 bytes @ 0x1A
  5736                           
  5737     003A                     readSpectralDataTwo@data:	
  5738                           ; 12 bytes @ 0x1A
  5739                           
  5740                           
  5741                           ; 12 bytes @ 0x1A
  5742     003A                     	ds	4
  5743     003E                     printf@idx:
  5744                           
  5745                           ; 1 bytes @ 0x1E
  5746     003E                     	ds	1
  5747     003F                     _printf$1520:
  5748                           
  5749                           ; 2 bytes @ 0x1F
  5750     003F                     	ds	2
  5751     0041                     printf@prec:
  5752                           
  5753                           ; 1 bytes @ 0x21
  5754     0041                     	ds	1
  5755     0042                     printf@cp:
  5756                           
  5757                           ; 2 bytes @ 0x22
  5758     0042                     	ds	2
  5759     0044                     printf@val:
  5760                           
  5761                           ; 2 bytes @ 0x24
  5762     0044                     	ds	2
  5763     0046                     printf@ap:
  5764                           
  5765                           ; 1 bytes @ 0x26
  5766     0046                     	ds	1
  5767     0047                     printf@len:
  5768                           
  5769                           ; 2 bytes @ 0x27
  5770     0047                     	ds	2
  5771     0049                     printf@flag:
  5772                           
  5773                           ; 1 bytes @ 0x29
  5774     0049                     	ds	1
  5775     004A                     printf@width:
  5776                           
  5777                           ; 2 bytes @ 0x2A
  5778     004A                     	ds	2
  5779     004C                     printf@c:
  5780                           
  5781                           ; 1 bytes @ 0x2C
  5782     004C                     	ds	1
  5783     004D                     ??_as7341_start_measurement:
  5784     004D                     ?_dump_buffer:	
  5785                           ; 1 bytes @ 0x2D
  5786                           
  5787     004D                     ??_as7341_power_enable:	
  5788                           ; 1 bytes @ 0x2D
  5789                           
  5790     004D                     dump_buffer@size:	
  5791                           ; 1 bytes @ 0x2D
  5792                           
  5793                           
  5794                           ; 2 bytes @ 0x2D
  5795     004D                     	ds	1
  5796     004E                     as7341_start_measurement@channel:
  5797                           
  5798                           ; 1 bytes @ 0x2E
  5799     004E                     	ds	1
  5800     004F                     ??_dump_buffer:
  5801     004F                     as7341_power_enable@state:	
  5802                           ; 1 bytes @ 0x2F
  5803                           
  5804     004F                     as7341_start_measurement@data:	
  5805                           ; 1 bytes @ 0x2F
  5806                           
  5807                           
  5808                           ; 1 bytes @ 0x2F
  5809     004F                     	ds	1
  5810     0050                     as7341_power_enable@flag:
  5811                           
  5812                           ; 1 bytes @ 0x30
  5813     0050                     	ds	1
  5814     0051                     _as7341_power_enable$1184:
  5815                           
  5816                           ; 2 bytes @ 0x31
  5817     0051                     	ds	2
  5818     0053                     dump_buffer@buffer:
  5819     0053                     _as7341_power_enable$1190:	
  5820                           ; 1 bytes @ 0x33
  5821                           
  5822                           
  5823                           ; 2 bytes @ 0x33
  5824     0053                     	ds	1
  5825     0054                     _dump_buffer$1020:
  5826                           
  5827                           ; 2 bytes @ 0x34
  5828     0054                     	ds	1
  5829     0055                     as7341_power_enable@regVal:
  5830                           
  5831                           ; 1 bytes @ 0x35
  5832     0055                     	ds	1
  5833     0056                     ??_as7341_init:
  5834     0056                     dump_buffer@p:	
  5835                           ; 1 bytes @ 0x36
  5836                           
  5837                           
  5838                           ; 1 bytes @ 0x36
  5839     0056                     	ds	1
  5840     0057                     dump_buffer@i:
  5841                           
  5842                           ; 2 bytes @ 0x37
  5843     0057                     	ds	2
  5844     0059                     dump_buffer@j:
  5845                           
  5846                           ; 2 bytes @ 0x39
  5847     0059                     	ds	1
  5848     005A                     as7341_init@mode:
  5849                           
  5850                           ; 1 bytes @ 0x3A
  5851     005A                     	ds	1
  5852     005B                     as7341_init@as7341_id:
  5853                           
  5854                           ; 1 bytes @ 0x3B
  5855     005B                     	ds	1
  5856     005C                     ??_main:
  5857                           
  5858                           ; 1 bytes @ 0x3C
  5859     005C                     	ds	2
  5860                           
  5861                           	psect	maintext
  5862     028C                     __pmaintext:	
  5863 ;;
  5864 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5865 ;;
  5866 ;; *************** function _main *****************
  5867 ;; Defined at:
  5868 ;;		line 59 in file "main.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  buffer          3    1[BANK1 ] unsigned char [3]
  5873 ;;  value           1    0[BANK1 ] unsigned char 
  5874 ;;  i               1    8[BANK1 ] unsigned char 
  5875 ;;  now             4    4[BANK1 ] unsigned long 
  5876 ;;  data1          12   21[BANK1 ] struct .
  5877 ;;  data2          12    9[BANK1 ] struct .
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : B3F/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5888 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  5889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Totals:         0       2      33       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;Total ram usage:       35 bytes
  5892 ;; Hardware stack levels required when called: 8
  5893 ;; This function calls:
  5894 ;;		_EUSART1_Initialize
  5895 ;;		_SYSTEM_Initialize
  5896 ;;		_as7341_begin
  5897 ;;		_as7341_enableLED
  5898 ;;		_as7341_start_measurement
  5899 ;;		_calculate_diff
  5900 ;;		_control_LED
  5901 ;;		_dump_memory_map
  5902 ;;		_get_ticks_with_lock
  5903 ;;		_i2c_master_init
  5904 ;;		_i2c_slave_init
  5905 ;;		_i2c_slave_set_register
  5906 ;;		_printf
  5907 ;;		_readSpectralDataOne
  5908 ;;		_readSpectralDataTwo
  5909 ;;		_strtol
  5910 ;;		_tmr0_init
  5911 ;; This function is called by:
  5912 ;;		Startup code after reset
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916     028C                     _main:	
  5917                           ;psect for function _main
  5918                           
  5919     028C                     l4909:	
  5920                           ;incstack = 0
  5921                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5922                           
  5923                           
  5924                           ;main.c: 62: SYSTEM_Initialize();
  5925     028C  3189  2179  3182   	fcall	_SYSTEM_Initialize
  5926                           
  5927                           ;main.c: 63: tmr0_init();
  5928     028F  3189  21BA  3182   	fcall	_tmr0_init
  5929                           
  5930                           ;main.c: 64: EUSART1_Initialize();
  5931     0292  318B  23BB  3182   	fcall	_EUSART1_Initialize
  5932     0295                     l4911:
  5933                           
  5934                           ;main.c: 65: _delay((unsigned long)((500)*(1000000/4000.0)));
  5935     0295  30A3               	movlw	163
  5936     0296  0140               	movlb	0	; select bank0
  5937     0297  00DC               	movwf	??_main
  5938     0298  3055               	movlw	85
  5939     0299                     u3717:
  5940     0299  0B89               	decfsz	9,f
  5941     029A  2A99               	goto	u3717
  5942     029B  0BDC               	decfsz	??_main,f
  5943     029C  2A99               	goto	u3717
  5944     029D                     l4913:
  5945                           
  5946                           ;main.c: 67: (RA5PPS = 0x00);
  5947     029D  017E               	movlb	62	; select bank62
  5948     029E  0195               	clrf	21	;volatile
  5949     029F                     l4915:
  5950                           
  5951                           ;main.c: 68: (RA5PPS = 0x0F);
  5952     029F  300F               	movlw	15
  5953     02A0  0095               	movwf	21	;volatile
  5954     02A1                     l4917:
  5955                           
  5956                           ;main.c: 70: (INTCONbits.GIE = 1);
  5957     02A1  178B               	bsf	11,7	;volatile
  5958     02A2                     l4919:
  5959                           
  5960                           ;main.c: 71: (INTCONbits.PEIE = 1);
  5961     02A2  170B               	bsf	11,6	;volatile
  5962     02A3                     l4921:
  5963                           
  5964                           ;main.c: 74: i2c_master_init();
  5965     02A3  3189  21C7  3182   	fcall	_i2c_master_init
  5966     02A6                     l4923:
  5967                           
  5968                           ;main.c: 75: i2c_slave_init();
  5969     02A6  318B  2319  3182   	fcall	_i2c_slave_init
  5970     02A9                     l4925:
  5971                           
  5972                           ;main.c: 77: printf("Hello Light Sensor\r\n");
  5973     02A9  301E               	movlw	low (STR_1| (0+32768))
  5974     02AA  0140               	movlb	0	; select bank0
  5975     02AB  00AC               	movwf	printf@f
  5976     02AC  3091               	movlw	high (STR_1| (0+32768))
  5977     02AD  00AD               	movwf	printf@f+1
  5978     02AE  3180  2046  3182   	fcall	_printf
  5979     02B1                     l4927:
  5980                           
  5981                           ;main.c: 78: printf("sn: %s\r\n", "AF017A0001");
  5982     02B1  3084               	movlw	low (STR_2| (0+32768))
  5983     02B2  0140               	movlb	0	; select bank0
  5984     02B3  00AC               	movwf	printf@f
  5985     02B4  3091               	movlw	high (STR_2| (0+32768))
  5986     02B5  00AD               	movwf	printf@f+1
  5987     02B6  3066               	movlw	low (STR_3| (0+32768))
  5988     02B7  00AE               	movwf	low ((?_printf| 0+2))
  5989     02B8  3091               	movlw	high (STR_3| (0+32768))
  5990     02B9  00AF               	movwf	(low ((?_printf| 0+2))+1)
  5991     02BA  3180  2046  3182   	fcall	_printf
  5992     02BD                     l4929:
  5993                           
  5994                           ;main.c: 81: as7341_begin();
  5995     02BD  318B  239A  3182   	fcall	_as7341_begin
  5996     02C0                     l4931:
  5997                           
  5998                           ;main.c: 82: F1F4_CLEAR_NIR_DATA_t data1;;main.c: 83: F5F8_CLEAR_NIR_DATA_t data2;;main.
      +                          c: 84: as7341_enableLED(1);
  5999     02C0  3001               	movlw	1
  6000     02C1  318C  245C  3182   	fcall	_as7341_enableLED
  6001     02C4                     l4933:
  6002                           
  6003                           ;main.c: 85: control_LED(1, 19);
  6004     02C4  3013               	movlw	19
  6005     02C5  0140               	movlb	0	; select bank0
  6006     02C6  00A4               	movwf	control_LED@current
  6007     02C7  3001               	movlw	1
  6008     02C8  318D  252F  3182   	fcall	_control_LED
  6009     02CB                     l4935:
  6010                           
  6011                           ;main.c: 87: uint32_t now = get_ticks_with_lock();
  6012     02CB  318A  2243  3182   	fcall	_get_ticks_with_lock
  6013     02CE  0140               	movlb	0	; select bank0
  6014     02CF  0823               	movf	?_get_ticks_with_lock+3,w
  6015     02D0  0141               	movlb	1	; select bank1
  6016     02D1  00A7               	movwf	(main@now+3)^(0+128)
  6017     02D2  0140               	movlb	0	; select bank0
  6018     02D3  0822               	movf	?_get_ticks_with_lock+2,w
  6019     02D4  0141               	movlb	1	; select bank1
  6020     02D5  00A6               	movwf	(main@now+2)^(0+128)
  6021     02D6  0140               	movlb	0	; select bank0
  6022     02D7  0821               	movf	?_get_ticks_with_lock+1,w
  6023     02D8  0141               	movlb	1	; select bank1
  6024     02D9  00A5               	movwf	(main@now+1)^(0+128)
  6025     02DA  0140               	movlb	0	; select bank0
  6026     02DB  0820               	movf	?_get_ticks_with_lock,w
  6027     02DC  0141               	movlb	1	; select bank1
  6028     02DD  00A4               	movwf	main@now^(0+128)
  6029     02DE                     l4937:
  6030                           
  6031                           ;main.c: 88: static uint32_t prev_ticks1 = 0;;main.c: 89: static uint32_t prev_ticks2 = 
      +                          0;;main.c: 99: if(calculate_diff(now, prev_ticks1) >= 5000){
  6032     02DE  0827               	movf	(main@now+3)^(0+128),w
  6033     02DF  0140               	movlb	0	; select bank0
  6034     02E0  00A3               	movwf	calculate_diff@now+3
  6035     02E1  0141               	movlb	1	; select bank1
  6036     02E2  0826               	movf	(main@now+2)^(0+128),w
  6037     02E3  0140               	movlb	0	; select bank0
  6038     02E4  00A2               	movwf	calculate_diff@now+2
  6039     02E5  0141               	movlb	1	; select bank1
  6040     02E6  0825               	movf	(main@now+1)^(0+128),w
  6041     02E7  0140               	movlb	0	; select bank0
  6042     02E8  00A1               	movwf	calculate_diff@now+1
  6043     02E9  0141               	movlb	1	; select bank1
  6044     02EA  0824               	movf	main@now^(0+128),w
  6045     02EB  0140               	movlb	0	; select bank0
  6046     02EC  00A0               	movwf	calculate_diff@now
  6047     02ED  0141               	movlb	1	; select bank1
  6048     02EE  0844               	movf	(main@prev_ticks1+3)^(0+128),w
  6049     02EF  0140               	movlb	0	; select bank0
  6050     02F0  00A7               	movwf	calculate_diff@prev_ticks+3
  6051     02F1  0141               	movlb	1	; select bank1
  6052     02F2  0843               	movf	(main@prev_ticks1+2)^(0+128),w
  6053     02F3  0140               	movlb	0	; select bank0
  6054     02F4  00A6               	movwf	calculate_diff@prev_ticks+2
  6055     02F5  0141               	movlb	1	; select bank1
  6056     02F6  0842               	movf	(main@prev_ticks1+1)^(0+128),w
  6057     02F7  0140               	movlb	0	; select bank0
  6058     02F8  00A5               	movwf	calculate_diff@prev_ticks+1
  6059     02F9  0141               	movlb	1	; select bank1
  6060     02FA  0841               	movf	main@prev_ticks1^(0+128),w
  6061     02FB  0140               	movlb	0	; select bank0
  6062     02FC  00A4               	movwf	calculate_diff@prev_ticks
  6063     02FD  318E  26C2  3182   	fcall	_calculate_diff
  6064     0300  0140               	movlb	0	; select bank0
  6065     0301  0823               	movf	?_calculate_diff+3,w
  6066     0302  1D03               	btfss	3,2
  6067     0303  2B0F               	goto	u3600
  6068     0304  0822               	movf	?_calculate_diff+2,w
  6069     0305  1D03               	btfss	3,2
  6070     0306  2B0F               	goto	u3600
  6071     0307  3088               	movlw	136
  6072     0308  0220               	subwf	?_calculate_diff,w
  6073     0309  3013               	movlw	19
  6074     030A  3B21               	subwfb	?_calculate_diff+1,w
  6075     030B  1C03               	btfss	3,0
  6076     030C  2B0E               	goto	u3601
  6077     030D  2B0F               	goto	u3600
  6078     030E                     u3601:
  6079     030E  2ACB               	goto	l4935
  6080     030F                     u3600:
  6081     030F                     l4939:
  6082                           
  6083                           ;main.c: 100: prev_ticks1 = now;
  6084     030F  0141               	movlb	1	; select bank1
  6085     0310  0827               	movf	(main@now+3)^(0+128),w
  6086     0311  00C4               	movwf	(main@prev_ticks1+3)^(0+128)
  6087     0312  0826               	movf	(main@now+2)^(0+128),w
  6088     0313  00C3               	movwf	(main@prev_ticks1+2)^(0+128)
  6089     0314  0825               	movf	(main@now+1)^(0+128),w
  6090     0315  00C2               	movwf	(main@prev_ticks1+1)^(0+128)
  6091     0316  0824               	movf	main@now^(0+128),w
  6092     0317  00C1               	movwf	main@prev_ticks1^(0+128)
  6093     0318                     l4941:
  6094                           
  6095                           ;main.c: 101: as7341_start_measurement(F1F4ClearNIR);
  6096     0318  3000               	movlw	0
  6097     0319  318F  2717  3182   	fcall	_as7341_start_measurement
  6098     031C                     l4943:
  6099                           
  6100                           ;main.c: 102: data1 = readSpectralDataOne();
  6101     031C  318D  25E8  3182   	fcall	_readSpectralDataOne
  6102     031F  0140               	movlb	0	; select bank0
  6103     0320  302D               	movlw	low ?_readSpectralDataOne
  6104     0321  0086               	movwf	6
  6105     0322  3000               	movlw	high ?_readSpectralDataOne
  6106     0323  0087               	movwf	7
  6107     0324  30B5               	movlw	low main@data1
  6108     0325  0084               	movwf	4
  6109     0326  3000               	movlw	high main@data1
  6110     0327  0085               	movwf	5
  6111     0328  300C               	movlw	12
  6112     0329  00DC               	movwf	??_main
  6113     032A                     u3610:
  6114     032A  0016               	moviw fsr1++
  6115     032B  001A               	movwi fsr0++
  6116     032C  0BDC               	decfsz	??_main,f
  6117     032D  2B2A               	goto	u3610
  6118     032E                     l4945:
  6119                           
  6120                           ;main.c: 103: printf("Channel-F1-405-425nm: %u, ";main.c: 104: "Channel-F2-435-455nm: %u
      +                          , ";main.c: 105: "Channel-F3-470-490nm: %u, ";main.c: 106: "Channel-F4-505-525nm: %u, ";
      +                          main.c: 107: "Channel-F5-CLEAR: %u, ";main.c: 108: "Channel-F5-NIR: %u \r\n",;main.c: 10
      +                          9: data1.ADC_CHANNEL_F1,;main.c: 110: data1.ADC_CHANNEL_F2,;main.c: 111: data1.ADC_CHANN
      +                          EL_F3,;main.c: 112: data1.ADC_CHANNEL_F4,;main.c: 113: data1.ADC_CHANNEL_CLEAR,;main.c: 
      +                          114: data1.ADC_CHANNEL_NIR);
  6121     032E  30CA               	movlw	low (STR_4| (0+32768))
  6122     032F  00AC               	movwf	printf@f
  6123     0330  3086               	movlw	high (STR_4| (0+32768))
  6124     0331  00AD               	movwf	printf@f+1
  6125     0332  0141               	movlb	1	; select bank1
  6126     0333  0836               	movf	(main@data1+1)^(0+128),w
  6127     0334  0140               	movlb	0	; select bank0
  6128     0335  00AF               	movwf	?_printf+3
  6129     0336  0141               	movlb	1	; select bank1
  6130     0337  0835               	movf	main@data1^(0+128),w
  6131     0338  0140               	movlb	0	; select bank0
  6132     0339  00AE               	movwf	?_printf+2
  6133     033A  0141               	movlb	1	; select bank1
  6134     033B  0838               	movf	((main@data1+1)^(0+128)+2),w
  6135     033C  0140               	movlb	0	; select bank0
  6136     033D  00B1               	movwf	?_printf+5
  6137     033E  0141               	movlb	1	; select bank1
  6138     033F  0837               	movf	(main@data1^(0+128)+2),w
  6139     0340  0140               	movlb	0	; select bank0
  6140     0341  00B0               	movwf	?_printf+4
  6141     0342  0141               	movlb	1	; select bank1
  6142     0343  083A               	movf	((main@data1+1)^(0+128)+4),w
  6143     0344  0140               	movlb	0	; select bank0
  6144     0345  00B3               	movwf	?_printf+7
  6145     0346  0141               	movlb	1	; select bank1
  6146     0347  0839               	movf	(main@data1^(0+128)+4),w
  6147     0348  0140               	movlb	0	; select bank0
  6148     0349  00B2               	movwf	?_printf+6
  6149     034A  0141               	movlb	1	; select bank1
  6150     034B  083C               	movf	((main@data1+1)^(0+128)+6),w
  6151     034C  0140               	movlb	0	; select bank0
  6152     034D  00B5               	movwf	?_printf+9
  6153     034E  0141               	movlb	1	; select bank1
  6154     034F  083B               	movf	(main@data1^(0+128)+6),w
  6155     0350  0140               	movlb	0	; select bank0
  6156     0351  00B4               	movwf	?_printf+8
  6157     0352  0141               	movlb	1	; select bank1
  6158     0353  083E               	movf	((main@data1+1)^(0+128)+8),w
  6159     0354  0140               	movlb	0	; select bank0
  6160     0355  00B7               	movwf	?_printf+11
  6161     0356  0141               	movlb	1	; select bank1
  6162     0357  083D               	movf	(main@data1^(0+128)+8),w
  6163     0358  0140               	movlb	0	; select bank0
  6164     0359  00B6               	movwf	?_printf+10
  6165     035A  0141               	movlb	1	; select bank1
  6166     035B  0840               	movf	((main@data1+1)^(0+128)+10),w
  6167     035C  0140               	movlb	0	; select bank0
  6168     035D  00B9               	movwf	?_printf+13
  6169     035E  0141               	movlb	1	; select bank1
  6170     035F  083F               	movf	(main@data1^(0+128)+10),w
  6171     0360  0140               	movlb	0	; select bank0
  6172     0361  00B8               	movwf	?_printf+12
  6173     0362  3180  2046  3182   	fcall	_printf
  6174     0365                     l4947:
  6175                           
  6176                           ;main.c: 115: _delay((unsigned long)((50)*(1000000/4000.0)));
  6177     0365  3011               	movlw	17
  6178     0366  0140               	movlb	0	; select bank0
  6179     0367  00DC               	movwf	??_main
  6180     0368  303A               	movlw	58
  6181     0369                     u3727:
  6182     0369  0B89               	decfsz	9,f
  6183     036A  2B69               	goto	u3727
  6184     036B  0BDC               	decfsz	??_main,f
  6185     036C  2B69               	goto	u3727
  6186     036D  0000               	nop
  6187                           
  6188                           ;main.c: 116: as7341_start_measurement(F5F8ClearNIR);
  6189     036E  3001               	movlw	1
  6190     036F  318F  2717  3182   	fcall	_as7341_start_measurement
  6191                           
  6192                           ;main.c: 117: data2 = readSpectralDataTwo();
  6193     0372  318E  262D  3182   	fcall	_readSpectralDataTwo
  6194     0375  0140               	movlb	0	; select bank0
  6195     0376  302D               	movlw	low ?_readSpectralDataTwo
  6196     0377  0086               	movwf	6
  6197     0378  3000               	movlw	high ?_readSpectralDataTwo
  6198     0379  0087               	movwf	7
  6199     037A  30A9               	movlw	low main@data2
  6200     037B  0084               	movwf	4
  6201     037C  3000               	movlw	high main@data2
  6202     037D  0085               	movwf	5
  6203     037E  300C               	movlw	12
  6204     037F  00DC               	movwf	??_main
  6205     0380                     u3620:
  6206     0380  0016               	moviw fsr1++
  6207     0381  001A               	movwi fsr0++
  6208     0382  0BDC               	decfsz	??_main,f
  6209     0383  2B80               	goto	u3620
  6210                           
  6211                           ;main.c: 118: printf("Channel-F5-405-425nm: %u, ";main.c: 119: "Channel-F6-435-455nm: %u
      +                          , ";main.c: 120: "Channel-F7-470-490nm: %u, ";main.c: 121: "Channel-F8-505-525nm: %u, ";
      +                          main.c: 122: "Channel-CLEAR-CLEAR: %u, ";main.c: 123: "Channel-NIR-NIR: %u \r\n",;main.c
      +                          : 124: data2.ADC_CHANNEL_F5,;main.c: 125: data2.ADC_CHANNEL_F6,;main.c: 126: data2.ADC_C
      +                          HANNEL_F7,;main.c: 127: data2.ADC_CHANNEL_F8,;main.c: 128: data2.ADC_CHANNEL_CLEAR,;main
      +                          .c: 129: data2.ADC_CHANNEL_NIR);
  6212     0384  3032               	movlw	low (STR_5| (0+32768))
  6213     0385  00AC               	movwf	printf@f
  6214     0386  3086               	movlw	high (STR_5| (0+32768))
  6215     0387  00AD               	movwf	printf@f+1
  6216     0388  0141               	movlb	1	; select bank1
  6217     0389  082A               	movf	(main@data2+1)^(0+128),w
  6218     038A  0140               	movlb	0	; select bank0
  6219     038B  00AF               	movwf	?_printf+3
  6220     038C  0141               	movlb	1	; select bank1
  6221     038D  0829               	movf	main@data2^(0+128),w
  6222     038E  0140               	movlb	0	; select bank0
  6223     038F  00AE               	movwf	?_printf+2
  6224     0390  0141               	movlb	1	; select bank1
  6225     0391  082C               	movf	((main@data2+1)^(0+128)+2),w
  6226     0392  0140               	movlb	0	; select bank0
  6227     0393  00B1               	movwf	?_printf+5
  6228     0394  0141               	movlb	1	; select bank1
  6229     0395  082B               	movf	(main@data2^(0+128)+2),w
  6230     0396  0140               	movlb	0	; select bank0
  6231     0397  00B0               	movwf	?_printf+4
  6232     0398  0141               	movlb	1	; select bank1
  6233     0399  082E               	movf	((main@data2+1)^(0+128)+4),w
  6234     039A  0140               	movlb	0	; select bank0
  6235     039B  00B3               	movwf	?_printf+7
  6236     039C  0141               	movlb	1	; select bank1
  6237     039D  082D               	movf	(main@data2^(0+128)+4),w
  6238     039E  0140               	movlb	0	; select bank0
  6239     039F  00B2               	movwf	?_printf+6
  6240     03A0  0141               	movlb	1	; select bank1
  6241     03A1  0830               	movf	((main@data2+1)^(0+128)+6),w
  6242     03A2  0140               	movlb	0	; select bank0
  6243     03A3  00B5               	movwf	?_printf+9
  6244     03A4  0141               	movlb	1	; select bank1
  6245     03A5  082F               	movf	(main@data2^(0+128)+6),w
  6246     03A6  0140               	movlb	0	; select bank0
  6247     03A7  00B4               	movwf	?_printf+8
  6248     03A8  0141               	movlb	1	; select bank1
  6249     03A9  0832               	movf	((main@data2+1)^(0+128)+8),w
  6250     03AA  0140               	movlb	0	; select bank0
  6251     03AB  00B7               	movwf	?_printf+11
  6252     03AC  0141               	movlb	1	; select bank1
  6253     03AD  0831               	movf	(main@data2^(0+128)+8),w
  6254     03AE  0140               	movlb	0	; select bank0
  6255     03AF  00B6               	movwf	?_printf+10
  6256     03B0  0141               	movlb	1	; select bank1
  6257     03B1  0834               	movf	((main@data2+1)^(0+128)+10),w
  6258     03B2  0140               	movlb	0	; select bank0
  6259     03B3  00B9               	movwf	?_printf+13
  6260     03B4  0141               	movlb	1	; select bank1
  6261     03B5  0833               	movf	(main@data2^(0+128)+10),w
  6262     03B6  0140               	movlb	0	; select bank0
  6263     03B7  00B8               	movwf	?_printf+12
  6264     03B8  3180  2046  3182   	fcall	_printf
  6265     03BB                     l4949:
  6266                           
  6267                           ;main.c: 131: (INTCONbits.GIE = 0);
  6268     03BB  138B               	bcf	11,7	;volatile
  6269     03BC                     l4951:
  6270                           
  6271                           ;main.c: 132: i2c_slave_set_register(0, data1.ADC_CHANNEL_F1 >> 8);
  6272     03BC  0141               	movlb	1	; select bank1
  6273     03BD  0836               	movf	(main@data1+1)^(0+128),w
  6274     03BE  00F4               	movwf	i2c_slave_set_register@value
  6275     03BF  3000               	movlw	0
  6276     03C0  3189  2166  3182   	fcall	_i2c_slave_set_register
  6277     03C3                     l4953:
  6278                           
  6279                           ;main.c: 133: i2c_slave_set_register(1, data1.ADC_CHANNEL_F1 & 0xFF);
  6280     03C3  0141               	movlb	1	; select bank1
  6281     03C4  0835               	movf	main@data1^(0+128),w
  6282     03C5  00F4               	movwf	i2c_slave_set_register@value
  6283     03C6  3001               	movlw	1
  6284     03C7  3189  2166  3182   	fcall	_i2c_slave_set_register
  6285     03CA                     l4955:
  6286                           
  6287                           ;main.c: 134: i2c_slave_set_register(2, data1.ADC_CHANNEL_F2 >> 8);
  6288     03CA  0141               	movlb	1	; select bank1
  6289     03CB  0838               	movf	((main@data1+1)^(0+128)+2),w
  6290     03CC  00F4               	movwf	i2c_slave_set_register@value
  6291     03CD  3002               	movlw	2
  6292     03CE  3189  2166  3182   	fcall	_i2c_slave_set_register
  6293     03D1                     l4957:
  6294                           
  6295                           ;main.c: 135: i2c_slave_set_register(3, data1.ADC_CHANNEL_F2 & 0xFF);
  6296     03D1  0141               	movlb	1	; select bank1
  6297     03D2  0837               	movf	(main@data1^(0+128)+2),w
  6298     03D3  00F4               	movwf	i2c_slave_set_register@value
  6299     03D4  3003               	movlw	3
  6300     03D5  3189  2166  3182   	fcall	_i2c_slave_set_register
  6301     03D8                     l4959:
  6302                           
  6303                           ;main.c: 136: i2c_slave_set_register(4, data1.ADC_CHANNEL_F3 >> 8);
  6304     03D8  0141               	movlb	1	; select bank1
  6305     03D9  083A               	movf	((main@data1+1)^(0+128)+4),w
  6306     03DA  00F4               	movwf	i2c_slave_set_register@value
  6307     03DB  3004               	movlw	4
  6308     03DC  3189  2166  3182   	fcall	_i2c_slave_set_register
  6309     03DF                     l4961:
  6310                           
  6311                           ;main.c: 137: i2c_slave_set_register(5, data1.ADC_CHANNEL_F3 & 0xFF);
  6312     03DF  0141               	movlb	1	; select bank1
  6313     03E0  0839               	movf	(main@data1^(0+128)+4),w
  6314     03E1  00F4               	movwf	i2c_slave_set_register@value
  6315     03E2  3005               	movlw	5
  6316     03E3  3189  2166  3182   	fcall	_i2c_slave_set_register
  6317     03E6                     l4963:
  6318                           
  6319                           ;main.c: 138: i2c_slave_set_register(6, data1.ADC_CHANNEL_F4 >> 8);
  6320     03E6  0141               	movlb	1	; select bank1
  6321     03E7  083C               	movf	((main@data1+1)^(0+128)+6),w
  6322     03E8  00F4               	movwf	i2c_slave_set_register@value
  6323     03E9  3006               	movlw	6
  6324     03EA  3189  2166  3182   	fcall	_i2c_slave_set_register
  6325     03ED                     l4965:
  6326                           
  6327                           ;main.c: 139: i2c_slave_set_register(7, data1.ADC_CHANNEL_F4 & 0xFF);
  6328     03ED  0141               	movlb	1	; select bank1
  6329     03EE  083B               	movf	(main@data1^(0+128)+6),w
  6330     03EF  00F4               	movwf	i2c_slave_set_register@value
  6331     03F0  3007               	movlw	7
  6332     03F1  3189  2166  3182   	fcall	_i2c_slave_set_register
  6333     03F4                     l4967:
  6334                           
  6335                           ;main.c: 140: i2c_slave_set_register(8, data1.ADC_CHANNEL_CLEAR >> 8);
  6336     03F4  0141               	movlb	1	; select bank1
  6337     03F5  083E               	movf	((main@data1+1)^(0+128)+8),w
  6338     03F6  00F4               	movwf	i2c_slave_set_register@value
  6339     03F7  3008               	movlw	8
  6340     03F8  3189  2166  3182   	fcall	_i2c_slave_set_register
  6341     03FB                     l4969:
  6342                           
  6343                           ;main.c: 141: i2c_slave_set_register(9, data1.ADC_CHANNEL_CLEAR & 0xFF);
  6344     03FB  0141               	movlb	1	; select bank1
  6345     03FC  083D               	movf	(main@data1^(0+128)+8),w
  6346     03FD  00F4               	movwf	i2c_slave_set_register@value
  6347     03FE  3009               	movlw	9
  6348     03FF  3189  2166  3182   	fcall	_i2c_slave_set_register
  6349     0402                     l4971:
  6350                           
  6351                           ;main.c: 142: i2c_slave_set_register(10, data1.ADC_CHANNEL_NIR >> 8);
  6352     0402  0141               	movlb	1	; select bank1
  6353     0403  0840               	movf	((main@data1+1)^(0+128)+10),w
  6354     0404  00F4               	movwf	i2c_slave_set_register@value
  6355     0405  300A               	movlw	10
  6356     0406  3189  2166  3182   	fcall	_i2c_slave_set_register
  6357     0409                     l4973:
  6358                           
  6359                           ;main.c: 143: i2c_slave_set_register(11, data1.ADC_CHANNEL_NIR & 0xFF);
  6360     0409  0141               	movlb	1	; select bank1
  6361     040A  083F               	movf	(main@data1^(0+128)+10),w
  6362     040B  00F4               	movwf	i2c_slave_set_register@value
  6363     040C  300B               	movlw	11
  6364     040D  3189  2166  3182   	fcall	_i2c_slave_set_register
  6365     0410                     l4975:
  6366                           
  6367                           ;main.c: 144: i2c_slave_set_register(12, 10);
  6368     0410  300A               	movlw	10
  6369     0411  00F4               	movwf	i2c_slave_set_register@value
  6370     0412  300C               	movlw	12
  6371     0413  3189  2166  3182   	fcall	_i2c_slave_set_register
  6372     0416                     l4977:
  6373                           
  6374                           ;main.c: 146: for (uint8_t i = 0; i < 5; i++) {
  6375     0416  0141               	movlb	1	; select bank1
  6376     0417  01A8               	clrf	main@i^(0+128)
  6377     0418                     l4983:
  6378                           
  6379                           ;main.c: 147: char buffer[3];;main.c: 148: buffer[0] = "AF017A0001"[i * 2];
  6380     0418  0828               	movf	main@i^(0+128),w
  6381     0419  0140               	movlb	0	; select bank0
  6382     041A  00DC               	movwf	??_main
  6383     041B  01DD               	clrf	??_main+1
  6384     041C  35DC               	lslf	??_main,f
  6385     041D  0DDD               	rlf	??_main+1,f
  6386     041E  3066               	movlw	low STR_3
  6387     041F  075C               	addwf	??_main,w
  6388     0420  0084               	movwf	4
  6389     0421  3011               	movlw	high STR_3
  6390     0422  3D5D               	addwfc	??_main+1,w
  6391     0423  3880               	iorlw	128
  6392     0424  0085               	movwf	5
  6393     0425  0800               	movf	0,w	;code access
  6394     0426  0141               	movlb	1	; select bank1
  6395     0427  00A1               	movwf	main@buffer^(0+128)
  6396                           
  6397                           ;main.c: 149: buffer[1] = "AF017A0001"[i * 2 + 1];
  6398     0428  0828               	movf	main@i^(0+128),w
  6399     0429  0140               	movlb	0	; select bank0
  6400     042A  00DC               	movwf	??_main
  6401     042B  01DD               	clrf	??_main+1
  6402     042C  35DC               	lslf	??_main,f
  6403     042D  0DDD               	rlf	??_main+1,f
  6404     042E  3067               	movlw	low (STR_3+1)
  6405     042F  075C               	addwf	??_main,w
  6406     0430  0084               	movwf	4
  6407     0431  3011               	movlw	high (STR_3+1)
  6408     0432  3D5D               	addwfc	??_main+1,w
  6409     0433  3880               	iorlw	128
  6410     0434  0085               	movwf	5
  6411     0435  0800               	movf	0,w	;code access
  6412     0436  0141               	movlb	1	; select bank1
  6413     0437  00A2               	movwf	(main@buffer^(0+128)+1)
  6414     0438                     l4985:
  6415                           
  6416                           ;main.c: 150: buffer[2] = '\0';
  6417     0438  01A3               	clrf	(main@buffer^(0+128)+2)
  6418     0439                     l4987:
  6419                           
  6420                           ;main.c: 151: uint8_t value = strtol(buffer, (0), 16);
  6421     0439  0140               	movlb	0	; select bank0
  6422     043A  01AC               	clrf	strtol@endptr
  6423     043B  3010               	movlw	16
  6424     043C  00AD               	movwf	strtol@base
  6425     043D  3000               	movlw	0
  6426     043E  00AE               	movwf	strtol@base+1
  6427     043F  30A1               	movlw	(low (main@buffer| 0))& (0+255)
  6428     0440  3184  2461  3182   	fcall	_strtol
  6429     0443  0140               	movlb	0	; select bank0
  6430     0444  082C               	movf	?_strtol,w
  6431     0445  0141               	movlb	1	; select bank1
  6432     0446  00A0               	movwf	main@value^(0+128)
  6433     0447                     l4989:
  6434                           
  6435                           ;main.c: 152: i2c_slave_set_register(57u + i, value);
  6436     0447  0820               	movf	main@value^(0+128),w
  6437     0448  00F4               	movwf	i2c_slave_set_register@value
  6438     0449  0828               	movf	main@i^(0+128),w
  6439     044A  3E39               	addlw	57
  6440     044B  3189  2166  3182   	fcall	_i2c_slave_set_register
  6441     044E                     l4991:
  6442     044E  3001               	movlw	1
  6443     044F  0140               	movlb	0	; select bank0
  6444     0450  00DC               	movwf	??_main
  6445     0451  085C               	movf	??_main,w
  6446     0452  0141               	movlb	1	; select bank1
  6447     0453  07A8               	addwf	main@i^(0+128),f
  6448     0454                     l4993:
  6449     0454  3005               	movlw	5
  6450     0455  0228               	subwf	main@i^(0+128),w
  6451     0456  1C03               	skipc
  6452     0457  2C59               	goto	u3631
  6453     0458  2C5A               	goto	u3630
  6454     0459                     u3631:
  6455     0459  2C18               	goto	l4983
  6456     045A                     u3630:
  6457     045A                     l167:
  6458                           
  6459                           ;main.c: 153: };main.c: 154: (INTCONbits.GIE = 1);
  6460     045A  178B               	bsf	11,7	;volatile
  6461     045B                     l4995:
  6462                           
  6463                           ;main.c: 155: dump_memory_map();
  6464     045B  3189  218D  3182   	fcall	_dump_memory_map
  6465     045E  2ACB               	goto	l4935
  6466     045F  3180  2820         	ljmp	start
  6467     0461                     __end_of_main:
  6468                           
  6469                           	psect	text1
  6470     09BA                     __ptext1:	
  6471 ;; *************** function _tmr0_init *****************
  6472 ;; Defined at:
  6473 ;;		line 5 in file "tmr0.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;Total ram usage:        0 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; Hardware stack levels required when called: 2
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_main
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501     09BA                     _tmr0_init:	
  6502                           ;psect for function _tmr0_init
  6503                           
  6504     09BA                     l3615:	
  6505                           ;incstack = 0
  6506                           ; Regs used in _tmr0_init: [wreg+status,2]
  6507                           
  6508                           
  6509                           ;tmr0.c: 8: T0CON1 = 0x40;
  6510     09BA  3040               	movlw	64
  6511     09BB  014B               	movlb	11	; select bank11
  6512     09BC  009F               	movwf	31	;volatile
  6513                           
  6514                           ;tmr0.c: 11: TMR0H = 0xF3;
  6515     09BD  30F3               	movlw	243
  6516     09BE  009D               	movwf	29	;volatile
  6517     09BF                     l3617:
  6518                           
  6519                           ;tmr0.c: 14: TMR0L = 0x00;
  6520     09BF  019C               	clrf	28	;volatile
  6521     09C0                     l3619:
  6522                           
  6523                           ;tmr0.c: 17: PIR0bits.TMR0IF = 0;
  6524     09C0  014E               	movlb	14	; select bank14
  6525     09C1  128C               	bcf	12,5	;volatile
  6526     09C2                     l3621:
  6527                           
  6528                           ;tmr0.c: 20: PIE0bits.TMR0IE = 1;
  6529     09C2  1696               	bsf	22,5	;volatile
  6530     09C3                     l3623:
  6531                           
  6532                           ;tmr0.c: 23: T0CON0 = 0x80;
  6533     09C3  3080               	movlw	128
  6534     09C4  014B               	movlb	11	; select bank11
  6535     09C5  009E               	movwf	30	;volatile
  6536     09C6                     l434:
  6537     09C6  0008               	return
  6538     09C7                     __end_of_tmr0_init:
  6539                           
  6540                           	psect	text2
  6541     0461                     __ptext2:	
  6542 ;; *************** function _strtol *****************
  6543 ;; Defined at:
  6544 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/strtol.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  s               1    wreg     PTR const unsigned char 
  6547 ;;		 -> main@buffer(3), 
  6548 ;;  endptr          1   12[BANK0 ] PTR PTR unsigned char 
  6549 ;;		 -> NULL(0), 
  6550 ;;  base            2   13[BANK0 ] int 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  s               1   25[BANK0 ] PTR const unsigned char 
  6553 ;;		 -> main@buffer(3), 
  6554 ;;  a               4   21[BANK0 ] long 
  6555 ;;  c               1   26[BANK0 ] unsigned char 
  6556 ;;  sign            1   20[BANK0 ] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  4   12[BANK0 ] long 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;Total ram usage:       15 bytes
  6571 ;; Hardware stack levels used: 1
  6572 ;; Hardware stack levels required when called: 4
  6573 ;; This function calls:
  6574 ;;		___lmul
  6575 ;;		_isalpha
  6576 ;;		_isdigit
  6577 ;;		_isspace
  6578 ;;		_toupper
  6579 ;; This function is called by:
  6580 ;;		_main
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584     0461                     _strtol:	
  6585                           ;psect for function _strtol
  6586                           
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in _strtol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6590                           ;strtol@s stored from wreg
  6591     0461  0140               	movlb	0	; select bank0
  6592     0462  00B9               	movwf	strtol@s
  6593     0463                     l1385:
  6594     0463                     l4823:
  6595     0463  0140               	movlb	0	; select bank0
  6596     0464  0839               	movf	strtol@s,w
  6597     0465  0086               	movwf	6
  6598     0466  0187               	clrf	7
  6599     0467  0801               	movf	1,w
  6600     0468  00BA               	movwf	strtol@c
  6601     0469                     l4825:
  6602     0469  3001               	movlw	1
  6603     046A  00B0               	movwf	??_strtol
  6604     046B  0830               	movf	??_strtol,w
  6605     046C  07B9               	addwf	strtol@s,f
  6606     046D                     l4827:
  6607     046D  083A               	movf	strtol@c,w
  6608     046E  318A  2257  3184   	fcall	_isspace
  6609     0471  1803               	btfsc	3,0
  6610     0472  2C74               	goto	u3451
  6611     0473  2C76               	goto	u3450
  6612     0474                     u3451:
  6613     0474  0140               	movlb	0	; select bank0
  6614     0475  2C63               	goto	l1385
  6615     0476                     u3450:
  6616     0476                     l4829:
  6617     0476  3000               	movlw	0
  6618     0477  0140               	movlb	0	; select bank0
  6619     0478  00B8               	movwf	strtol@a+3
  6620     0479  3000               	movlw	0
  6621     047A  00B7               	movwf	strtol@a+2
  6622     047B  3000               	movlw	0
  6623     047C  00B6               	movwf	strtol@a+1
  6624     047D  3000               	movlw	0
  6625     047E  00B5               	movwf	strtol@a
  6626     047F                     l4831:
  6627     047F  01B4               	clrf	strtol@sign
  6628     0480                     l4833:
  6629     0480  302D               	movlw	45
  6630     0481  063A               	xorwf	strtol@c,w
  6631     0482  1D03               	btfss	3,2
  6632     0483  2C85               	goto	u3461
  6633     0484  2C86               	goto	u3460
  6634     0485                     u3461:
  6635     0485  2C92               	goto	l4841
  6636     0486                     u3460:
  6637     0486                     l4835:
  6638     0486  01B4               	clrf	strtol@sign
  6639     0487  0AB4               	incf	strtol@sign,f
  6640     0488                     l4837:
  6641     0488  0839               	movf	strtol@s,w
  6642     0489  0086               	movwf	6
  6643     048A  0187               	clrf	7
  6644     048B  0801               	movf	1,w
  6645     048C  00BA               	movwf	strtol@c
  6646     048D                     l4839:
  6647     048D  3001               	movlw	1
  6648     048E  00B0               	movwf	??_strtol
  6649     048F  0830               	movf	??_strtol,w
  6650     0490  07B9               	addwf	strtol@s,f
  6651     0491  2C99               	goto	l4847
  6652     0492                     l4841:
  6653     0492  302B               	movlw	43
  6654     0493  063A               	xorwf	strtol@c,w
  6655     0494  1D03               	btfss	3,2
  6656     0495  2C97               	goto	u3471
  6657     0496  2C98               	goto	u3470
  6658     0497                     u3471:
  6659     0497  2C99               	goto	l4847
  6660     0498                     u3470:
  6661     0498  2C88               	goto	l4837
  6662     0499                     l4847:
  6663     0499  3030               	movlw	48
  6664     049A  063A               	xorwf	strtol@c,w
  6665     049B  1D03               	btfss	3,2
  6666     049C  2C9E               	goto	u3481
  6667     049D  2C9F               	goto	u3480
  6668     049E                     u3481:
  6669     049E  2CD9               	goto	l4871
  6670     049F                     u3480:
  6671     049F                     l4849:
  6672     049F  0839               	movf	strtol@s,w
  6673     04A0  0086               	movwf	6
  6674     04A1  0187               	clrf	7
  6675     04A2  0801               	movf	1,w
  6676     04A3  00BA               	movwf	strtol@c
  6677     04A4                     l4851:
  6678     04A4  3001               	movlw	1
  6679     04A5  00B0               	movwf	??_strtol
  6680     04A6  0830               	movf	??_strtol,w
  6681     04A7  07B9               	addwf	strtol@s,f
  6682     04A8                     l4853:
  6683     04A8  082D               	movf	strtol@base,w
  6684     04A9  042E               	iorwf	strtol@base+1,w
  6685     04AA  1903               	btfsc	3,2
  6686     04AB  2CAD               	goto	u3491
  6687     04AC  2CAE               	goto	u3490
  6688     04AD                     u3491:
  6689     04AD  2CB5               	goto	l4857
  6690     04AE                     u3490:
  6691     04AE                     l4855:
  6692     04AE  3010               	movlw	16
  6693     04AF  062D               	xorwf	strtol@base,w
  6694     04B0  042E               	iorwf	strtol@base+1,w
  6695     04B1  1D03               	btfss	3,2
  6696     04B2  2CB4               	goto	u3501
  6697     04B3  2CB5               	goto	u3500
  6698     04B4                     u3501:
  6699     04B4  2CCF               	goto	l4867
  6700     04B5                     u3500:
  6701     04B5                     l4857:
  6702     04B5  3078               	movlw	120
  6703     04B6  063A               	xorwf	strtol@c,w
  6704     04B7  1903               	btfsc	3,2
  6705     04B8  2CBA               	goto	u3511
  6706     04B9  2CBB               	goto	u3510
  6707     04BA                     u3511:
  6708     04BA  2CC1               	goto	l4861
  6709     04BB                     u3510:
  6710     04BB                     l4859:
  6711     04BB  3058               	movlw	88
  6712     04BC  063A               	xorwf	strtol@c,w
  6713     04BD  1D03               	btfss	3,2
  6714     04BE  2CC0               	goto	u3521
  6715     04BF  2CC1               	goto	u3520
  6716     04C0                     u3521:
  6717     04C0  2CCF               	goto	l4867
  6718     04C1                     u3520:
  6719     04C1                     l4861:
  6720     04C1  3010               	movlw	16
  6721     04C2  00AD               	movwf	strtol@base
  6722     04C3  3000               	movlw	0
  6723     04C4  00AE               	movwf	strtol@base+1
  6724     04C5                     l4863:
  6725     04C5  0839               	movf	strtol@s,w
  6726     04C6  0086               	movwf	6
  6727     04C7  0187               	clrf	7
  6728     04C8  0801               	movf	1,w
  6729     04C9  00BA               	movwf	strtol@c
  6730     04CA                     l4865:
  6731     04CA  3001               	movlw	1
  6732     04CB  00B0               	movwf	??_strtol
  6733     04CC  0830               	movf	??_strtol,w
  6734     04CD  07B9               	addwf	strtol@s,f
  6735     04CE  2CD9               	goto	l4871
  6736     04CF                     l4867:
  6737     04CF  082D               	movf	strtol@base,w
  6738     04D0  042E               	iorwf	strtol@base+1,w
  6739     04D1  1D03               	btfss	3,2
  6740     04D2  2CD4               	goto	u3531
  6741     04D3  2CD5               	goto	u3530
  6742     04D4                     u3531:
  6743     04D4  2CD9               	goto	l4871
  6744     04D5                     u3530:
  6745     04D5                     l4869:
  6746     04D5  3008               	movlw	8
  6747     04D6  00AD               	movwf	strtol@base
  6748     04D7  3000               	movlw	0
  6749     04D8  00AE               	movwf	strtol@base+1
  6750     04D9                     l4871:
  6751     04D9  082D               	movf	strtol@base,w
  6752     04DA  042E               	iorwf	strtol@base+1,w
  6753     04DB  1D03               	btfss	3,2
  6754     04DC  2CDE               	goto	u3541
  6755     04DD  2CDF               	goto	u3540
  6756     04DE                     u3541:
  6757     04DE  2CE3               	goto	l4875
  6758     04DF                     u3540:
  6759     04DF                     l4873:
  6760     04DF  300A               	movlw	10
  6761     04E0  00AD               	movwf	strtol@base
  6762     04E1  3000               	movlw	0
  6763     04E2  00AE               	movwf	strtol@base+1
  6764     04E3                     l4875:
  6765     04E3  083A               	movf	strtol@c,w
  6766     04E4  318A  22DD  3184   	fcall	_isalpha
  6767     04E7  1C03               	btfss	3,0
  6768     04E8  2CEA               	goto	u3551
  6769     04E9  2CEB               	goto	u3550
  6770     04EA                     u3551:
  6771     04EA  2CF4               	goto	l4879
  6772     04EB                     u3550:
  6773     04EB                     l4877:
  6774     04EB  0140               	movlb	0	; select bank0
  6775     04EC  083A               	movf	strtol@c,w
  6776     04ED  318A  221C  3184   	fcall	_toupper
  6777     04F0  3EC9               	addlw	201
  6778     04F1  0140               	movlb	0	; select bank0
  6779     04F2  00BA               	movwf	strtol@c
  6780     04F3  2D00               	goto	l4883
  6781     04F4                     l4879:
  6782     04F4  0140               	movlb	0	; select bank0
  6783     04F5  083A               	movf	strtol@c,w
  6784     04F6  3189  21E6  3184   	fcall	_isdigit
  6785     04F9  1C03               	btfss	3,0
  6786     04FA  2CFC               	goto	u3561
  6787     04FB  2CFD               	goto	u3560
  6788     04FC                     u3561:
  6789     04FC  2D41               	goto	l4893
  6790     04FD                     u3560:
  6791     04FD                     l4881:
  6792     04FD  3030               	movlw	48
  6793     04FE  0140               	movlb	0	; select bank0
  6794     04FF  02BA               	subwf	strtol@c,f
  6795     0500                     l4883:
  6796     0500  082E               	movf	strtol@base+1,w
  6797     0501  3A80               	xorlw	128
  6798     0502  3C80               	sublw	128
  6799     0503  1D03               	skipz
  6800     0504  2D07               	goto	u3575
  6801     0505  082D               	movf	strtol@base,w
  6802     0506  023A               	subwf	strtol@c,w
  6803     0507                     u3575:
  6804     0507  1C03               	skipc
  6805     0508  2D0A               	goto	u3571
  6806     0509  2D0B               	goto	u3570
  6807     050A                     u3571:
  6808     050A  2D0C               	goto	l4887
  6809     050B                     u3570:
  6810     050B  2D41               	goto	l4893
  6811     050C                     l4887:
  6812     050C  0140               	movlb	0	; select bank0
  6813     050D  083A               	movf	strtol@c,w
  6814     050E  00B0               	movwf	??_strtol
  6815     050F  01B1               	clrf	??_strtol+1
  6816     0510  01B2               	clrf	??_strtol+2
  6817     0511  01B3               	clrf	??_strtol+3
  6818     0512  082D               	movf	strtol@base,w
  6819     0513  00A0               	movwf	___lmul@multiplier
  6820     0514  082E               	movf	strtol@base+1,w
  6821     0515  00A1               	movwf	___lmul@multiplier+1
  6822     0516  0D89               	rlf	9,f
  6823     0517  3B89               	subwfb	9,f
  6824     0518  0989               	comf	9,f
  6825     0519  00A2               	movwf	___lmul@multiplier+2
  6826     051A  00A3               	movwf	___lmul@multiplier+3
  6827     051B  0838               	movf	strtol@a+3,w
  6828     051C  00A7               	movwf	___lmul@multiplicand+3
  6829     051D  0837               	movf	strtol@a+2,w
  6830     051E  00A6               	movwf	___lmul@multiplicand+2
  6831     051F  0836               	movf	strtol@a+1,w
  6832     0520  00A5               	movwf	___lmul@multiplicand+1
  6833     0521  0835               	movf	strtol@a,w
  6834     0522  00A4               	movwf	___lmul@multiplicand
  6835     0523  318C  2490  3184   	fcall	___lmul
  6836     0526  0140               	movlb	0	; select bank0
  6837     0527  0820               	movf	?___lmul,w
  6838     0528  07B0               	addwf	??_strtol,f
  6839     0529  0821               	movf	?___lmul+1,w
  6840     052A  3DB1               	addwfc	??_strtol+1,f
  6841     052B  0822               	movf	?___lmul+2,w
  6842     052C  3DB2               	addwfc	??_strtol+2,f
  6843     052D  0823               	movf	?___lmul+3,w
  6844     052E  3DB3               	addwfc	??_strtol+3,f
  6845     052F  0833               	movf	??_strtol+3,w
  6846     0530  00B8               	movwf	strtol@a+3
  6847     0531  0832               	movf	??_strtol+2,w
  6848     0532  00B7               	movwf	strtol@a+2
  6849     0533  0831               	movf	??_strtol+1,w
  6850     0534  00B6               	movwf	strtol@a+1
  6851     0535  0830               	movf	??_strtol,w
  6852     0536  00B5               	movwf	strtol@a
  6853     0537                     l4889:
  6854     0537  0839               	movf	strtol@s,w
  6855     0538  0086               	movwf	6
  6856     0539  0187               	clrf	7
  6857     053A  0801               	movf	1,w
  6858     053B  00BA               	movwf	strtol@c
  6859     053C                     l4891:
  6860     053C  3001               	movlw	1
  6861     053D  00B0               	movwf	??_strtol
  6862     053E  0830               	movf	??_strtol,w
  6863     053F  07B9               	addwf	strtol@s,f
  6864     0540  2CE3               	goto	l4875
  6865     0541                     l4893:
  6866     0541  0140               	movlb	0	; select bank0
  6867     0542  082C               	movf	strtol@endptr,w
  6868     0543  1903               	btfsc	3,2
  6869     0544  2D46               	goto	u3581
  6870     0545  2D47               	goto	u3580
  6871     0546                     u3581:
  6872     0546  2D4D               	goto	l4897
  6873     0547                     u3580:
  6874     0547                     l4895:
  6875     0547  082C               	movf	strtol@endptr,w
  6876     0548  0086               	movwf	6
  6877     0549  0187               	clrf	7
  6878     054A  0839               	movf	strtol@s,w
  6879     054B  3EFF               	addlw	-1
  6880     054C  0081               	movwf	1
  6881     054D                     l4897:
  6882     054D  0834               	movf	strtol@sign,w
  6883     054E  1903               	btfsc	3,2
  6884     054F  2D51               	goto	u3591
  6885     0550  2D52               	goto	u3590
  6886     0551                     u3591:
  6887     0551  2D62               	goto	l4903
  6888     0552                     u3590:
  6889     0552                     l4899:
  6890     0552  0935               	comf	strtol@a,w
  6891     0553  00AC               	movwf	?_strtol
  6892     0554  0936               	comf	strtol@a+1,w
  6893     0555  00AD               	movwf	?_strtol+1
  6894     0556  0937               	comf	strtol@a+2,w
  6895     0557  00AE               	movwf	?_strtol+2
  6896     0558  0938               	comf	strtol@a+3,w
  6897     0559  00AF               	movwf	?_strtol+3
  6898     055A  0AAC               	incf	?_strtol,f
  6899     055B  1903               	skipnz
  6900     055C  0AAD               	incf	?_strtol+1,f
  6901     055D  1903               	skipnz
  6902     055E  0AAE               	incf	?_strtol+2,f
  6903     055F  1903               	skipnz
  6904     0560  0AAF               	incf	?_strtol+3,f
  6905     0561  2D6A               	goto	l1408
  6906     0562                     l4903:
  6907     0562  0838               	movf	strtol@a+3,w
  6908     0563  00AF               	movwf	?_strtol+3
  6909     0564  0837               	movf	strtol@a+2,w
  6910     0565  00AE               	movwf	?_strtol+2
  6911     0566  0836               	movf	strtol@a+1,w
  6912     0567  00AD               	movwf	?_strtol+1
  6913     0568  0835               	movf	strtol@a,w
  6914     0569  00AC               	movwf	?_strtol
  6915     056A                     l1408:
  6916     056A  0008               	return
  6917     056B                     __end_of_strtol:
  6918                           
  6919                           	psect	text3
  6920     0A1C                     __ptext3:	
  6921 ;; *************** function _toupper *****************
  6922 ;; Defined at:
  6923 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/toupper.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  c               1    wreg     unsigned char 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  c               1    5[COMMON] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      unsigned char 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;Total ram usage:        2 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 2
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_strtol
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951     0A1C                     _toupper:	
  6952                           ;psect for function _toupper
  6953                           
  6954                           
  6955                           ;incstack = 0
  6956                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6957                           ;toupper@c stored from wreg
  6958     0A1C  00F5               	movwf	toupper@c
  6959     0A1D                     l3547:
  6960     0A1D  307B               	movlw	123
  6961     0A1E  0275               	subwf	toupper@c,w
  6962     0A1F  1803               	skipnc
  6963     0A20  2A22               	goto	u2181
  6964     0A21  2A23               	goto	u2180
  6965     0A22                     u2181:
  6966     0A22  2A2D               	goto	l3553
  6967     0A23                     u2180:
  6968     0A23                     l3549:
  6969     0A23  3061               	movlw	97
  6970     0A24  0275               	subwf	toupper@c,w
  6971     0A25  1C03               	skipc
  6972     0A26  2A28               	goto	u2191
  6973     0A27  2A29               	goto	u2190
  6974     0A28                     u2191:
  6975     0A28  2A2D               	goto	l3553
  6976     0A29                     u2190:
  6977     0A29                     l3551:
  6978     0A29  30DF               	movlw	223
  6979     0A2A  00F4               	movwf	??_toupper
  6980     0A2B  0874               	movf	??_toupper,w
  6981     0A2C  05F5               	andwf	toupper@c,f
  6982     0A2D                     l3553:
  6983     0A2D  0875               	movf	toupper@c,w
  6984     0A2E                     l1429:
  6985     0A2E  0008               	return
  6986     0A2F                     __end_of_toupper:
  6987                           
  6988                           	psect	text4
  6989     0A57                     __ptext4:	
  6990 ;; *************** function _isspace *****************
  6991 ;; Defined at:
  6992 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isspace.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  c               1    wreg     unsigned char 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  c               1    5[COMMON] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;		None               void
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;Total ram usage:        2 bytes
  7011 ;; Hardware stack levels used: 1
  7012 ;; Hardware stack levels required when called: 2
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_strtol
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020     0A57                     _isspace:	
  7021                           ;psect for function _isspace
  7022                           
  7023                           
  7024                           ;incstack = 0
  7025                           ; Regs used in _isspace: [wreg+status,2+status,0]
  7026                           ;isspace@c stored from wreg
  7027     0A57  00F5               	movwf	isspace@c
  7028     0A58                     l3519:
  7029     0A58  01F4               	clrf	_isspace$1840
  7030     0A59  0AF4               	incf	_isspace$1840,f
  7031     0A5A                     l3521:
  7032     0A5A  3020               	movlw	32
  7033     0A5B  0675               	xorwf	isspace@c,w
  7034     0A5C  1903               	btfsc	3,2
  7035     0A5D  2A5F               	goto	u2121
  7036     0A5E  2A60               	goto	u2120
  7037     0A5F                     u2121:
  7038     0A5F  2A6D               	goto	l3529
  7039     0A60                     u2120:
  7040     0A60                     l3523:
  7041     0A60  300E               	movlw	14
  7042     0A61  0275               	subwf	isspace@c,w
  7043     0A62  1803               	skipnc
  7044     0A63  2A65               	goto	u2131
  7045     0A64  2A66               	goto	u2130
  7046     0A65                     u2131:
  7047     0A65  2A6C               	goto	l3527
  7048     0A66                     u2130:
  7049     0A66                     l3525:
  7050     0A66  3009               	movlw	9
  7051     0A67  0275               	subwf	isspace@c,w
  7052     0A68  1803               	skipnc
  7053     0A69  2A6B               	goto	u2141
  7054     0A6A  2A6C               	goto	u2140
  7055     0A6B                     u2141:
  7056     0A6B  2A6D               	goto	l3529
  7057     0A6C                     u2140:
  7058     0A6C                     l3527:
  7059     0A6C  01F4               	clrf	_isspace$1840
  7060     0A6D                     l3529:
  7061     0A6D  0C74               	rrf	_isspace$1840,w
  7062     0A6E                     l1420:
  7063     0A6E  0008               	return
  7064     0A6F                     __end_of_isspace:
  7065                           
  7066                           	psect	text5
  7067     0ADD                     __ptext5:	
  7068 ;; *************** function _isalpha *****************
  7069 ;; Defined at:
  7070 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isalpha.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  c               1    wreg     unsigned char 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  c               1    1[BANK0 ] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;		None               void
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0, pclath, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;Total ram usage:        2 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; Hardware stack levels required when called: 3
  7091 ;; This function calls:
  7092 ;;		_isupper
  7093 ;; This function is called by:
  7094 ;;		_strtol
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098     0ADD                     _isalpha:	
  7099                           ;psect for function _isalpha
  7100                           
  7101                           
  7102                           ;incstack = 0
  7103                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
  7104                           ;isalpha@c stored from wreg
  7105     0ADD  0140               	movlb	0	; select bank0
  7106     0ADE  00A1               	movwf	isalpha@c
  7107     0ADF                     l4699:
  7108     0ADF  01A0               	clrf	_isalpha$1837
  7109     0AE0  0AA0               	incf	_isalpha$1837,f
  7110     0AE1                     l4701:
  7111     0AE1  307B               	movlw	123
  7112     0AE2  0221               	subwf	isalpha@c,w
  7113     0AE3  1803               	skipnc
  7114     0AE4  2AE6               	goto	u3321
  7115     0AE5  2AE7               	goto	u3320
  7116     0AE6                     u3321:
  7117     0AE6  2AED               	goto	l4705
  7118     0AE7                     u3320:
  7119     0AE7                     l4703:
  7120     0AE7  3061               	movlw	97
  7121     0AE8  0221               	subwf	isalpha@c,w
  7122     0AE9  1803               	skipnc
  7123     0AEA  2AEC               	goto	u3331
  7124     0AEB  2AED               	goto	u3330
  7125     0AEC                     u3331:
  7126     0AEC  2AF7               	goto	l4709
  7127     0AED                     u3330:
  7128     0AED                     l4705:
  7129     0AED  0821               	movf	isalpha@c,w
  7130     0AEE  318A  220A  318A   	fcall	_isupper
  7131     0AF1  1803               	btfsc	3,0
  7132     0AF2  2AF4               	goto	u3341
  7133     0AF3  2AF5               	goto	u3340
  7134     0AF4                     u3341:
  7135     0AF4  2AF7               	goto	l4709
  7136     0AF5                     u3340:
  7137     0AF5                     l4707:
  7138     0AF5  0140               	movlb	0	; select bank0
  7139     0AF6  01A0               	clrf	_isalpha$1837
  7140     0AF7                     l4709:
  7141     0AF7  0140               	movlb	0	; select bank0
  7142     0AF8  0C20               	rrf	_isalpha$1837,w
  7143     0AF9                     l1415:
  7144     0AF9  0008               	return
  7145     0AFA                     __end_of_isalpha:
  7146                           
  7147                           	psect	text6
  7148     0A0A                     __ptext6:	
  7149 ;; *************** function _isupper *****************
  7150 ;; Defined at:
  7151 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isupper.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  c               1    wreg     unsigned char 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  c               1    5[COMMON] unsigned char 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;		None               void
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;Total ram usage:        2 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 2
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_isalpha
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179     0A0A                     _isupper:	
  7180                           ;psect for function _isupper
  7181                           
  7182                           
  7183                           ;incstack = 0
  7184                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7185                           ;isupper@c stored from wreg
  7186     0A0A  00F5               	movwf	isupper@c
  7187     0A0B                     l4415:
  7188     0A0B  01F4               	clrf	_isupper$1843
  7189     0A0C                     l4417:
  7190     0A0C  305B               	movlw	91
  7191     0A0D  0275               	subwf	isupper@c,w
  7192     0A0E  1803               	skipnc
  7193     0A0F  2A11               	goto	u3131
  7194     0A10  2A12               	goto	u3130
  7195     0A11                     u3131:
  7196     0A11  2A1A               	goto	l4423
  7197     0A12                     u3130:
  7198     0A12                     l4419:
  7199     0A12  3041               	movlw	65
  7200     0A13  0275               	subwf	isupper@c,w
  7201     0A14  1C03               	skipc
  7202     0A15  2A17               	goto	u3141
  7203     0A16  2A18               	goto	u3140
  7204     0A17                     u3141:
  7205     0A17  2A1A               	goto	l4423
  7206     0A18                     u3140:
  7207     0A18                     l4421:
  7208     0A18  01F4               	clrf	_isupper$1843
  7209     0A19  0AF4               	incf	_isupper$1843,f
  7210     0A1A                     l4423:
  7211     0A1A  0C74               	rrf	_isupper$1843,w
  7212     0A1B                     l1425:
  7213     0A1B  0008               	return
  7214     0A1C                     __end_of_isupper:
  7215                           
  7216                           	psect	text7
  7217     0C90                     __ptext7:	
  7218 ;; *************** function ___lmul *****************
  7219 ;; Defined at:
  7220 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul32.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  multiplier      4    0[BANK0 ] unsigned long 
  7223 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  product         4    8[BANK0 ] unsigned long 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  4    0[BANK0 ] unsigned long 
  7228 ;; Registers used:
  7229 ;;		wreg, status,2, status,0
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7235 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7238 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;Total ram usage:       12 bytes
  7240 ;; Hardware stack levels used: 1
  7241 ;; Hardware stack levels required when called: 2
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_strtol
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249     0C90                     ___lmul:	
  7250                           ;psect for function ___lmul
  7251                           
  7252     0C90                     l4685:	
  7253                           ;incstack = 0
  7254                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7255                           
  7256     0C90  3000               	movlw	0
  7257     0C91  0140               	movlb	0	; select bank0
  7258     0C92  00AB               	movwf	___lmul@product+3
  7259     0C93  3000               	movlw	0
  7260     0C94  00AA               	movwf	___lmul@product+2
  7261     0C95  3000               	movlw	0
  7262     0C96  00A9               	movwf	___lmul@product+1
  7263     0C97  3000               	movlw	0
  7264     0C98  00A8               	movwf	___lmul@product
  7265     0C99                     l4687:
  7266     0C99  1C20               	btfss	___lmul@multiplier,0
  7267     0C9A  2C9C               	goto	u3281
  7268     0C9B  2C9D               	goto	u3280
  7269     0C9C                     u3281:
  7270     0C9C  2CA5               	goto	l4691
  7271     0C9D                     u3280:
  7272     0C9D                     l4689:
  7273     0C9D  0824               	movf	___lmul@multiplicand,w
  7274     0C9E  07A8               	addwf	___lmul@product,f
  7275     0C9F  0825               	movf	___lmul@multiplicand+1,w
  7276     0CA0  3DA9               	addwfc	___lmul@product+1,f
  7277     0CA1  0826               	movf	___lmul@multiplicand+2,w
  7278     0CA2  3DAA               	addwfc	___lmul@product+2,f
  7279     0CA3  0827               	movf	___lmul@multiplicand+3,w
  7280     0CA4  3DAB               	addwfc	___lmul@product+3,f
  7281     0CA5                     l4691:
  7282     0CA5  3001               	movlw	1
  7283     0CA6                     u3295:
  7284     0CA6  35A4               	lslf	___lmul@multiplicand,f
  7285     0CA7  0DA5               	rlf	___lmul@multiplicand+1,f
  7286     0CA8  0DA6               	rlf	___lmul@multiplicand+2,f
  7287     0CA9  0DA7               	rlf	___lmul@multiplicand+3,f
  7288     0CAA  0B89               	decfsz	9,f
  7289     0CAB  2CA6               	goto	u3295
  7290     0CAC                     l4693:
  7291     0CAC  3001               	movlw	1
  7292     0CAD                     u3305:
  7293     0CAD  36A3               	lsrf	___lmul@multiplier+3,f
  7294     0CAE  0CA2               	rrf	___lmul@multiplier+2,f
  7295     0CAF  0CA1               	rrf	___lmul@multiplier+1,f
  7296     0CB0  0CA0               	rrf	___lmul@multiplier,f
  7297     0CB1  0B89               	decfsz	9,f
  7298     0CB2  2CAD               	goto	u3305
  7299     0CB3  0823               	movf	___lmul@multiplier+3,w
  7300     0CB4  0422               	iorwf	___lmul@multiplier+2,w
  7301     0CB5  0421               	iorwf	___lmul@multiplier+1,w
  7302     0CB6  0420               	iorwf	___lmul@multiplier,w
  7303     0CB7  1D03               	skipz
  7304     0CB8  2CBA               	goto	u3311
  7305     0CB9  2CBB               	goto	u3310
  7306     0CBA                     u3311:
  7307     0CBA  2C99               	goto	l4687
  7308     0CBB                     u3310:
  7309     0CBB                     l4695:
  7310     0CBB  082B               	movf	___lmul@product+3,w
  7311     0CBC  00A3               	movwf	?___lmul+3
  7312     0CBD  082A               	movf	___lmul@product+2,w
  7313     0CBE  00A2               	movwf	?___lmul+2
  7314     0CBF  0829               	movf	___lmul@product+1,w
  7315     0CC0  00A1               	movwf	?___lmul+1
  7316     0CC1  0828               	movf	___lmul@product,w
  7317     0CC2  00A0               	movwf	?___lmul
  7318     0CC3                     l930:
  7319     0CC3  0008               	return
  7320     0CC4                     __end_of___lmul:
  7321                           
  7322                           	psect	text8
  7323     0E2D                     __ptext8:	
  7324 ;; *************** function _readSpectralDataTwo *****************
  7325 ;; Defined at:
  7326 ;;		line 272 in file "as7341_model.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;  data           12   26[BANK0 ] struct .
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  12   13[BANK0 ] struct .
  7333 ;; Registers used:
  7334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7340 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;Total ram usage:       25 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; Hardware stack levels required when called: 6
  7347 ;; This function calls:
  7348 ;;		_get_channel_data
  7349 ;; This function is called by:
  7350 ;;		_main
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354     0E2D                     _readSpectralDataTwo:	
  7355                           ;psect for function _readSpectralDataTwo
  7356                           
  7357     0E2D                     l4817:	
  7358                           ;incstack = 0
  7359                           ; Regs used in _readSpectralDataTwo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7360                           
  7361                           
  7362                           ;as7341_model.c: 273: F5F8_CLEAR_NIR_DATA_t data;;as7341_model.c: 274: data.ADC_CHANNEL_
      +                          F5 = get_channel_data(0);
  7363     0E2D  3000               	movlw	0
  7364     0E2E  318C  24F9  318E   	fcall	_get_channel_data
  7365     0E31  0140               	movlb	0	; select bank0
  7366     0E32  0823               	movf	?_get_channel_data+1,w
  7367     0E33  00BB               	movwf	readSpectralDataTwo@data+1
  7368     0E34  0822               	movf	?_get_channel_data,w
  7369     0E35  00BA               	movwf	readSpectralDataTwo@data
  7370                           
  7371                           ;as7341_model.c: 275: data.ADC_CHANNEL_F6 = get_channel_data(1);
  7372     0E36  3001               	movlw	1
  7373     0E37  318C  24F9  318E   	fcall	_get_channel_data
  7374     0E3A  0140               	movlb	0	; select bank0
  7375     0E3B  0823               	movf	?_get_channel_data+1,w
  7376     0E3C  00BD               	movwf	readSpectralDataTwo@data+3
  7377     0E3D  0822               	movf	?_get_channel_data,w
  7378     0E3E  00BC               	movwf	readSpectralDataTwo@data+2
  7379                           
  7380                           ;as7341_model.c: 276: data.ADC_CHANNEL_F7 = get_channel_data(2);
  7381     0E3F  3002               	movlw	2
  7382     0E40  318C  24F9  318E   	fcall	_get_channel_data
  7383     0E43  0140               	movlb	0	; select bank0
  7384     0E44  0823               	movf	?_get_channel_data+1,w
  7385     0E45  00BF               	movwf	readSpectralDataTwo@data+5
  7386     0E46  0822               	movf	?_get_channel_data,w
  7387     0E47  00BE               	movwf	readSpectralDataTwo@data+4
  7388                           
  7389                           ;as7341_model.c: 277: data.ADC_CHANNEL_F8 = get_channel_data(3);
  7390     0E48  3003               	movlw	3
  7391     0E49  318C  24F9  318E   	fcall	_get_channel_data
  7392     0E4C  0140               	movlb	0	; select bank0
  7393     0E4D  0823               	movf	?_get_channel_data+1,w
  7394     0E4E  00C1               	movwf	readSpectralDataTwo@data+7
  7395     0E4F  0822               	movf	?_get_channel_data,w
  7396     0E50  00C0               	movwf	readSpectralDataTwo@data+6
  7397                           
  7398                           ;as7341_model.c: 278: data.ADC_CHANNEL_CLEAR = get_channel_data(4);
  7399     0E51  3004               	movlw	4
  7400     0E52  318C  24F9  318E   	fcall	_get_channel_data
  7401     0E55  0140               	movlb	0	; select bank0
  7402     0E56  0823               	movf	?_get_channel_data+1,w
  7403     0E57  00C3               	movwf	readSpectralDataTwo@data+9
  7404     0E58  0822               	movf	?_get_channel_data,w
  7405     0E59  00C2               	movwf	readSpectralDataTwo@data+8
  7406                           
  7407                           ;as7341_model.c: 279: data.ADC_CHANNEL_NIR = get_channel_data(5);
  7408     0E5A  3005               	movlw	5
  7409     0E5B  318C  24F9  318E   	fcall	_get_channel_data
  7410     0E5E  0140               	movlb	0	; select bank0
  7411     0E5F  0823               	movf	?_get_channel_data+1,w
  7412     0E60  00C5               	movwf	readSpectralDataTwo@data+11
  7413     0E61  0822               	movf	?_get_channel_data,w
  7414     0E62  00C4               	movwf	readSpectralDataTwo@data+10
  7415     0E63                     l4819:
  7416                           
  7417                           ;as7341_model.c: 280: return data;
  7418     0E63  303A               	movlw	low readSpectralDataTwo@data
  7419     0E64  0086               	movwf	6
  7420     0E65  3000               	movlw	high readSpectralDataTwo@data
  7421     0E66  0087               	movwf	7
  7422     0E67  302D               	movlw	low ?_readSpectralDataTwo
  7423     0E68  0084               	movwf	4
  7424     0E69  3000               	movlw	high ?_readSpectralDataTwo
  7425     0E6A  0085               	movwf	5
  7426     0E6B  300C               	movlw	12
  7427     0E6C  00B9               	movwf	??_readSpectralDataTwo
  7428     0E6D                     u3440:
  7429     0E6D  0016               	moviw fsr1++
  7430     0E6E  001A               	movwi fsr0++
  7431     0E6F  0BB9               	decfsz	??_readSpectralDataTwo,f
  7432     0E70  2E6D               	goto	u3440
  7433     0E71                     l566:
  7434     0E71  0008               	return
  7435     0E72                     __end_of_readSpectralDataTwo:
  7436                           
  7437                           	psect	text9
  7438     0DE8                     __ptext9:	
  7439 ;; *************** function _readSpectralDataOne *****************
  7440 ;; Defined at:
  7441 ;;		line 259 in file "as7341_model.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;		None
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  data           12   26[BANK0 ] struct .
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  12   13[BANK0 ] struct .
  7448 ;; Registers used:
  7449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7455 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7456 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;Total ram usage:       25 bytes
  7460 ;; Hardware stack levels used: 1
  7461 ;; Hardware stack levels required when called: 6
  7462 ;; This function calls:
  7463 ;;		_get_channel_data
  7464 ;; This function is called by:
  7465 ;;		_main
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469     0DE8                     _readSpectralDataOne:	
  7470                           ;psect for function _readSpectralDataOne
  7471                           
  7472     0DE8                     l4811:	
  7473                           ;incstack = 0
  7474                           ; Regs used in _readSpectralDataOne: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7475                           
  7476                           
  7477                           ;as7341_model.c: 260: F1F4_CLEAR_NIR_DATA_t data;;as7341_model.c: 261: data.ADC_CHANNEL_
      +                          F1 = get_channel_data(0);
  7478     0DE8  3000               	movlw	0
  7479     0DE9  318C  24F9  318D   	fcall	_get_channel_data
  7480     0DEC  0140               	movlb	0	; select bank0
  7481     0DED  0823               	movf	?_get_channel_data+1,w
  7482     0DEE  00BB               	movwf	readSpectralDataOne@data+1
  7483     0DEF  0822               	movf	?_get_channel_data,w
  7484     0DF0  00BA               	movwf	readSpectralDataOne@data
  7485                           
  7486                           ;as7341_model.c: 262: data.ADC_CHANNEL_F2 = get_channel_data(1);
  7487     0DF1  3001               	movlw	1
  7488     0DF2  318C  24F9  318D   	fcall	_get_channel_data
  7489     0DF5  0140               	movlb	0	; select bank0
  7490     0DF6  0823               	movf	?_get_channel_data+1,w
  7491     0DF7  00BD               	movwf	readSpectralDataOne@data+3
  7492     0DF8  0822               	movf	?_get_channel_data,w
  7493     0DF9  00BC               	movwf	readSpectralDataOne@data+2
  7494                           
  7495                           ;as7341_model.c: 263: data.ADC_CHANNEL_F3 = get_channel_data(2);
  7496     0DFA  3002               	movlw	2
  7497     0DFB  318C  24F9  318D   	fcall	_get_channel_data
  7498     0DFE  0140               	movlb	0	; select bank0
  7499     0DFF  0823               	movf	?_get_channel_data+1,w
  7500     0E00  00BF               	movwf	readSpectralDataOne@data+5
  7501     0E01  0822               	movf	?_get_channel_data,w
  7502     0E02  00BE               	movwf	readSpectralDataOne@data+4
  7503                           
  7504                           ;as7341_model.c: 264: data.ADC_CHANNEL_F4 = get_channel_data(3);
  7505     0E03  3003               	movlw	3
  7506     0E04  318C  24F9  318D   	fcall	_get_channel_data
  7507     0E07  0140               	movlb	0	; select bank0
  7508     0E08  0823               	movf	?_get_channel_data+1,w
  7509     0E09  00C1               	movwf	readSpectralDataOne@data+7
  7510     0E0A  0822               	movf	?_get_channel_data,w
  7511     0E0B  00C0               	movwf	readSpectralDataOne@data+6
  7512                           
  7513                           ;as7341_model.c: 265: data.ADC_CHANNEL_CLEAR = get_channel_data(4);
  7514     0E0C  3004               	movlw	4
  7515     0E0D  318C  24F9  318D   	fcall	_get_channel_data
  7516     0E10  0140               	movlb	0	; select bank0
  7517     0E11  0823               	movf	?_get_channel_data+1,w
  7518     0E12  00C3               	movwf	readSpectralDataOne@data+9
  7519     0E13  0822               	movf	?_get_channel_data,w
  7520     0E14  00C2               	movwf	readSpectralDataOne@data+8
  7521                           
  7522                           ;as7341_model.c: 266: data.ADC_CHANNEL_NIR = get_channel_data(5);
  7523     0E15  3005               	movlw	5
  7524     0E16  318C  24F9  318D   	fcall	_get_channel_data
  7525     0E19  0140               	movlb	0	; select bank0
  7526     0E1A  0823               	movf	?_get_channel_data+1,w
  7527     0E1B  00C5               	movwf	readSpectralDataOne@data+11
  7528     0E1C  0822               	movf	?_get_channel_data,w
  7529     0E1D  00C4               	movwf	readSpectralDataOne@data+10
  7530     0E1E                     l4813:
  7531                           
  7532                           ;as7341_model.c: 267: return data;
  7533     0E1E  303A               	movlw	low readSpectralDataOne@data
  7534     0E1F  0086               	movwf	6
  7535     0E20  3000               	movlw	high readSpectralDataOne@data
  7536     0E21  0087               	movwf	7
  7537     0E22  302D               	movlw	low ?_readSpectralDataOne
  7538     0E23  0084               	movwf	4
  7539     0E24  3000               	movlw	high ?_readSpectralDataOne
  7540     0E25  0085               	movwf	5
  7541     0E26  300C               	movlw	12
  7542     0E27  00B9               	movwf	??_readSpectralDataOne
  7543     0E28                     u3430:
  7544     0E28  0016               	moviw fsr1++
  7545     0E29  001A               	movwi fsr0++
  7546     0E2A  0BB9               	decfsz	??_readSpectralDataOne,f
  7547     0E2B  2E28               	goto	u3430
  7548     0E2C                     l563:
  7549     0E2C  0008               	return
  7550     0E2D                     __end_of_readSpectralDataOne:
  7551                           
  7552                           	psect	text10
  7553     0CF9                     __ptext10:	
  7554 ;; *************** function _get_channel_data *****************
  7555 ;; Defined at:
  7556 ;;		line 246 in file "as7341_model.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  channel         1    wreg     unsigned char 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  channel         1   10[BANK0 ] unsigned char 
  7561 ;;  data            4    6[BANK0 ] unsigned int [2]
  7562 ;;  channelData     2   11[BANK0 ] unsigned int 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  2    2[BANK0 ] unsigned int 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0, pclath, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;Total ram usage:       11 bytes
  7577 ;; Hardware stack levels used: 1
  7578 ;; Hardware stack levels required when called: 5
  7579 ;; This function calls:
  7580 ;;		_as7341_i2c_read
  7581 ;; This function is called by:
  7582 ;;		_readSpectralDataOne
  7583 ;;		_readSpectralDataTwo
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587     0CF9                     _get_channel_data:	
  7588                           ;psect for function _get_channel_data
  7589                           
  7590                           
  7591                           ;incstack = 0
  7592                           ; Regs used in _get_channel_data: [wreg+status,2+status,0+pclath+cstack]
  7593                           ;get_channel_data@channel stored from wreg
  7594     0CF9  0140               	movlb	0	; select bank0
  7595     0CFA  00AA               	movwf	get_channel_data@channel
  7596     0CFB                     l4669:
  7597     0CFB                     l4671:
  7598                           
  7599                           ;as7341_model.c: 249: data[0] = as7341_i2c_read(0x95 + channel*2);
  7600     0CFB  352A               	lslf	get_channel_data@channel,w
  7601     0CFC  3E95               	addlw	149
  7602     0CFD  318B  2358  318C   	fcall	_as7341_i2c_read
  7603     0D00  0140               	movlb	0	; select bank0
  7604     0D01  00A4               	movwf	??_get_channel_data
  7605     0D02  01A5               	clrf	??_get_channel_data+1
  7606     0D03  0824               	movf	??_get_channel_data,w
  7607     0D04  00A6               	movwf	get_channel_data@data
  7608     0D05  0825               	movf	??_get_channel_data+1,w
  7609     0D06  00A7               	movwf	get_channel_data@data+1
  7610     0D07                     l4673:
  7611                           
  7612                           ;as7341_model.c: 250: data[1] = as7341_i2c_read(0x96 + channel*2);
  7613     0D07  352A               	lslf	get_channel_data@channel,w
  7614     0D08  3E96               	addlw	150
  7615     0D09  318B  2358  318C   	fcall	_as7341_i2c_read
  7616     0D0C  0140               	movlb	0	; select bank0
  7617     0D0D  00A4               	movwf	??_get_channel_data
  7618     0D0E  01A5               	clrf	??_get_channel_data+1
  7619     0D0F  0824               	movf	??_get_channel_data,w
  7620     0D10  00A8               	movwf	get_channel_data@data+2
  7621     0D11  0825               	movf	??_get_channel_data+1,w
  7622     0D12  00A9               	movwf	get_channel_data@data+3
  7623     0D13                     l4675:
  7624                           
  7625                           ;as7341_model.c: 251: channelData = data[1];
  7626     0D13  0829               	movf	get_channel_data@data+3,w
  7627     0D14  00AC               	movwf	get_channel_data@channelData+1
  7628     0D15  0828               	movf	get_channel_data@data+2,w
  7629     0D16  00AB               	movwf	get_channel_data@channelData
  7630     0D17                     l4677:
  7631                           
  7632                           ;as7341_model.c: 252: channelData = (channelData<<8) | data[0];
  7633     0D17  082B               	movf	get_channel_data@channelData,w
  7634     0D18  00A5               	movwf	??_get_channel_data+1
  7635     0D19  01A4               	clrf	??_get_channel_data
  7636     0D1A  0826               	movf	get_channel_data@data,w
  7637     0D1B  0424               	iorwf	??_get_channel_data,w
  7638     0D1C  00AB               	movwf	get_channel_data@channelData
  7639     0D1D  0827               	movf	get_channel_data@data+1,w
  7640     0D1E  0425               	iorwf	??_get_channel_data+1,w
  7641     0D1F  00AC               	movwf	get_channel_data@channelData+1
  7642     0D20                     l4679:
  7643                           
  7644                           ;as7341_model.c: 253: _delay((unsigned long)((50)*(1000000/4000.0)));
  7645     0D20  3011               	movlw	17
  7646     0D21  0140               	movlb	0	; select bank0
  7647     0D22  00A4               	movwf	??_get_channel_data
  7648     0D23  303A               	movlw	58
  7649     0D24                     u3737:
  7650     0D24  0B89               	decfsz	9,f
  7651     0D25  2D24               	goto	u3737
  7652     0D26  0BA4               	decfsz	??_get_channel_data,f
  7653     0D27  2D24               	goto	u3737
  7654     0D28  0000               	nop
  7655     0D29                     l4681:
  7656                           
  7657                           ;as7341_model.c: 254: return channelData;
  7658     0D29  0140               	movlb	0	; select bank0
  7659     0D2A  082C               	movf	get_channel_data@channelData+1,w
  7660     0D2B  00A3               	movwf	?_get_channel_data+1
  7661     0D2C  082B               	movf	get_channel_data@channelData,w
  7662     0D2D  00A2               	movwf	?_get_channel_data
  7663     0D2E                     l560:
  7664     0D2E  0008               	return
  7665     0D2F                     __end_of_get_channel_data:
  7666                           
  7667                           	psect	text11
  7668     0966                     __ptext11:	
  7669 ;; *************** function _i2c_slave_set_register *****************
  7670 ;; Defined at:
  7671 ;;		line 32 in file "i2c_slave.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  registerAddr    1    wreg     unsigned char 
  7674 ;;  value           1    4[COMMON] unsigned char 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  registerAddr    1    5[COMMON] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7686 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;Total ram usage:        2 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; Hardware stack levels required when called: 2
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_main
  7697 ;;		_i2c_slave_set_register_with_lock
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701     0966                     _i2c_slave_set_register:	
  7702                           ;psect for function _i2c_slave_set_register
  7703                           
  7704                           
  7705                           ;incstack = 0
  7706                           ; Regs used in _i2c_slave_set_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  7707                           ;i2c_slave_set_register@registerAddress stored from wreg
  7708     0966  00F5               	movwf	i2c_slave_set_register@registerAddress
  7709     0967                     l3761:
  7710                           
  7711                           ;i2c_slave.c: 33: slaveData[registerAddress] = value;
  7712     0967  0875               	movf	i2c_slave_set_register@registerAddress,w
  7713     0968  3E20               	addlw	(low (_slaveData| (0+256)))& (0+255)
  7714     0969  0086               	movwf	6
  7715     096A  3001               	movlw	1	; select bank2/3
  7716     096B  0087               	movwf	7
  7717     096C  0874               	movf	i2c_slave_set_register@value,w
  7718     096D  0081               	movwf	1
  7719     096E                     l274:
  7720     096E  0008               	return
  7721     096F                     __end_of_i2c_slave_set_register:
  7722                           
  7723                           	psect	text12
  7724     0B19                     __ptext12:	
  7725 ;; *************** function _i2c_slave_init *****************
  7726 ;; Defined at:
  7727 ;;		line 14 in file "i2c_slave.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  i               1    5[COMMON] unsigned char 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;Total ram usage:        2 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; Hardware stack levels required when called: 2
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_main
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755     0B19                     _i2c_slave_init:	
  7756                           ;psect for function _i2c_slave_init
  7757                           
  7758     0B19                     l3645:	
  7759                           ;incstack = 0
  7760                           ; Regs used in _i2c_slave_init: [wreg+fsr1l+fsr1h+status,2+status,0]
  7761                           
  7762                           
  7763                           ;i2c_slave.c: 15: SSP1STAT = 0x00;
  7764     0B19  0143               	movlb	3	; select bank3
  7765     0B1A  018F               	clrf	15	;volatile
  7766     0B1B                     l3647:
  7767                           
  7768                           ;i2c_slave.c: 16: SSP1CON1 = 0x36;
  7769     0B1B  3036               	movlw	54
  7770     0B1C  0090               	movwf	16	;volatile
  7771     0B1D                     l3649:
  7772                           
  7773                           ;i2c_slave.c: 17: SSP1CON2 = 0x01;
  7774     0B1D  3001               	movlw	1
  7775     0B1E  0091               	movwf	17	;volatile
  7776     0B1F                     l3651:
  7777                           
  7778                           ;i2c_slave.c: 20: SSP1ADD = 0x68 << 1;
  7779     0B1F  30D0               	movlw	208
  7780     0B20  008D               	movwf	13	;volatile
  7781     0B21                     l3653:
  7782                           
  7783                           ;i2c_slave.c: 21: SSP1MSK = 0xFF;
  7784     0B21  30FF               	movlw	255
  7785     0B22  008E               	movwf	14	;volatile
  7786     0B23                     l3655:
  7787                           
  7788                           ;i2c_slave.c: 23: PIR3bits.SSP1IF = 0;
  7789     0B23  014E               	movlb	14	; select bank14
  7790     0B24  100F               	bcf	15,0	;volatile
  7791     0B25                     l3657:
  7792                           
  7793                           ;i2c_slave.c: 24: PIE3bits.SSP1IE = 1;
  7794     0B25  1419               	bsf	25,0	;volatile
  7795                           
  7796                           ;i2c_slave.c: 27: for (uint8_t i = 0; i < 64u; i++) {
  7797     0B26  01F5               	clrf	i2c_slave_init@i
  7798     0B27                     l3663:
  7799                           
  7800                           ;i2c_slave.c: 28: slaveData[i] = 0;
  7801     0B27  0875               	movf	i2c_slave_init@i,w
  7802     0B28  3E20               	addlw	(low (_slaveData| (0+256)))& (0+255)
  7803     0B29  0086               	movwf	6
  7804     0B2A  3001               	movlw	1	; select bank2/3
  7805     0B2B  0087               	movwf	7
  7806     0B2C  0181               	clrf	1
  7807     0B2D                     l3665:
  7808     0B2D  3001               	movlw	1
  7809     0B2E  00F4               	movwf	??_i2c_slave_init
  7810     0B2F  0874               	movf	??_i2c_slave_init,w
  7811     0B30  07F5               	addwf	i2c_slave_init@i,f
  7812     0B31                     l3667:
  7813     0B31  3040               	movlw	64
  7814     0B32  0275               	subwf	i2c_slave_init@i,w
  7815     0B33  1C03               	skipc
  7816     0B34  2B36               	goto	u2251
  7817     0B35  2B37               	goto	u2250
  7818     0B36                     u2251:
  7819     0B36  2B27               	goto	l3663
  7820     0B37                     u2250:
  7821     0B37                     l271:
  7822     0B37  0008               	return
  7823     0B38                     __end_of_i2c_slave_init:
  7824                           
  7825                           	psect	text13
  7826     09C7                     __ptext13:	
  7827 ;; *************** function _i2c_master_init *****************
  7828 ;; Defined at:
  7829 ;;		line 9 in file "i2c_master.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;		None
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      void 
  7836 ;; Registers used:
  7837 ;;		wreg, status,2
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;Total ram usage:        0 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 2
  7850 ;; This function calls:
  7851 ;;		Nothing
  7852 ;; This function is called by:
  7853 ;;		_main
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857     09C7                     _i2c_master_init:	
  7858                           ;psect for function _i2c_master_init
  7859                           
  7860     09C7                     l3637:	
  7861                           ;incstack = 0
  7862                           ; Regs used in _i2c_master_init: [wreg+status,2]
  7863                           
  7864                           
  7865                           ;i2c_master.c: 10: ANSELCbits.ANSC4 = 0;
  7866     09C7  017E               	movlb	62	; select bank62
  7867     09C8  124E               	bcf	78,4	;volatile
  7868                           
  7869                           ;i2c_master.c: 11: ANSELCbits.ANSC5 = 0;
  7870     09C9  12CE               	bcf	78,5	;volatile
  7871                           
  7872                           ;i2c_master.c: 12: TRISCbits.TRISC4 = 1;
  7873     09CA  0140               	movlb	0	; select bank0
  7874     09CB  1614               	bsf	20,4	;volatile
  7875                           
  7876                           ;i2c_master.c: 13: TRISCbits.TRISC5 = 1;
  7877     09CC  1694               	bsf	20,5	;volatile
  7878     09CD                     l3639:
  7879                           
  7880                           ;i2c_master.c: 15: SSP2CON1 = 0x28;
  7881     09CD  3028               	movlw	40
  7882     09CE  0143               	movlb	3	; select bank3
  7883     09CF  009A               	movwf	26	;volatile
  7884     09D0                     l3641:
  7885                           
  7886                           ;i2c_master.c: 16: SSP2CON2 = 0x00;
  7887     09D0  019B               	clrf	27	;volatile
  7888     09D1                     l3643:
  7889                           
  7890                           ;i2c_master.c: 17: SSP2STAT = 0x00;
  7891     09D1  0199               	clrf	25	;volatile
  7892                           
  7893                           ;i2c_master.c: 18: SSP2ADD = 0x09;
  7894     09D2  3009               	movlw	9
  7895     09D3  0097               	movwf	23	;volatile
  7896     09D4                     l195:
  7897     09D4  0008               	return
  7898     09D5                     __end_of_i2c_master_init:
  7899                           
  7900                           	psect	text14
  7901     0A43                     __ptext14:	
  7902 ;; *************** function _get_ticks_with_lock *****************
  7903 ;; Defined at:
  7904 ;;		line 18 in file "main.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;  result          4    4[BANK0 ] unsigned long 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  4    0[BANK0 ] unsigned long 
  7911 ;; Registers used:
  7912 ;;		wreg
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7918 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;Total ram usage:        8 bytes
  7923 ;; Hardware stack levels used: 1
  7924 ;; Hardware stack levels required when called: 2
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_main
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932     0A43                     _get_ticks_with_lock:	
  7933                           ;psect for function _get_ticks_with_lock
  7934                           
  7935     0A43                     l4713:	
  7936                           ;incstack = 0
  7937                           ; Regs used in _get_ticks_with_lock: [wreg]
  7938                           
  7939                           
  7940                           ;main.c: 19: GIE = 0;
  7941     0A43  138B               	bcf	11,7	;volatile
  7942     0A44                     l4715:
  7943                           
  7944                           ;main.c: 20: uint32_t result = ticks;
  7945     0A44  0140               	movlb	0	; select bank0
  7946     0A45  0865               	movf	_ticks+3,w	;volatile
  7947     0A46  00A7               	movwf	get_ticks_with_lock@result+3
  7948     0A47  0864               	movf	_ticks+2,w	;volatile
  7949     0A48  00A6               	movwf	get_ticks_with_lock@result+2
  7950     0A49  0863               	movf	_ticks+1,w	;volatile
  7951     0A4A  00A5               	movwf	get_ticks_with_lock@result+1
  7952     0A4B  0862               	movf	_ticks,w	;volatile
  7953     0A4C  00A4               	movwf	get_ticks_with_lock@result
  7954     0A4D                     l4717:
  7955                           
  7956                           ;main.c: 21: GIE = 1;
  7957     0A4D  178B               	bsf	11,7	;volatile
  7958                           
  7959                           ;main.c: 22: return result;
  7960     0A4E  0827               	movf	get_ticks_with_lock@result+3,w
  7961     0A4F  00A3               	movwf	?_get_ticks_with_lock+3
  7962     0A50  0826               	movf	get_ticks_with_lock@result+2,w
  7963     0A51  00A2               	movwf	?_get_ticks_with_lock+2
  7964     0A52  0825               	movf	get_ticks_with_lock@result+1,w
  7965     0A53  00A1               	movwf	?_get_ticks_with_lock+1
  7966     0A54  0824               	movf	get_ticks_with_lock@result,w
  7967     0A55  00A0               	movwf	?_get_ticks_with_lock
  7968     0A56                     l143:
  7969     0A56  0008               	return
  7970     0A57                     __end_of_get_ticks_with_lock:
  7971                           
  7972                           	psect	text15
  7973     098D                     __ptext15:	
  7974 ;; *************** function _dump_memory_map *****************
  7975 ;; Defined at:
  7976 ;;		line 121 in file "i2c_slave.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;		None
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;		None
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      void 
  7983 ;; Registers used:
  7984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;Total ram usage:        0 bytes
  7995 ;; Hardware stack levels used: 1
  7996 ;; Hardware stack levels required when called: 6
  7997 ;; This function calls:
  7998 ;;		_dump_buffer
  7999 ;; This function is called by:
  8000 ;;		_main
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004     098D                     _dump_memory_map:	
  8005                           ;psect for function _dump_memory_map
  8006                           
  8007     098D                     l4907:	
  8008                           ;incstack = 0
  8009                           ; Regs used in _dump_memory_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8010                           
  8011                           
  8012                           ;i2c_slave.c: 122: dump_buffer(slaveData, sizeof(slaveData));
  8013     098D  3040               	movlw	64
  8014     098E  0140               	movlb	0	; select bank0
  8015     098F  00CD               	movwf	dump_buffer@size
  8016     0990  3000               	movlw	0
  8017     0991  00CE               	movwf	dump_buffer@size+1
  8018     0992  3020               	movlw	(low (_slaveData| (0+256)))& (0+255)
  8019     0993  3185  256B  3189   	fcall	_dump_buffer
  8020     0996                     l304:
  8021     0996  0008               	return
  8022     0997                     __end_of_dump_memory_map:
  8023                           
  8024                           	psect	text16
  8025     056B                     __ptext16:	
  8026 ;; *************** function _dump_buffer *****************
  8027 ;; Defined at:
  8028 ;;		line 7 in file "my_helpers.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;  buffer          1    wreg     PTR const void 
  8031 ;;		 -> slaveData(64), 
  8032 ;;  size            2   45[BANK0 ] unsigned int 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;  buffer          1   51[BANK0 ] PTR const void 
  8035 ;;		 -> slaveData(64), 
  8036 ;;  j               2   57[BANK0 ] unsigned int 
  8037 ;;  i               2   55[BANK0 ] unsigned int 
  8038 ;;  p               1   54[BANK0 ] PTR const unsigned char 
  8039 ;;		 -> slaveData(64), 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;Total ram usage:       14 bytes
  8054 ;; Hardware stack levels used: 1
  8055 ;; Hardware stack levels required when called: 5
  8056 ;; This function calls:
  8057 ;;		_isprint
  8058 ;;		_printf
  8059 ;; This function is called by:
  8060 ;;		_dump_memory_map
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064     056B                     _dump_buffer:	
  8065                           ;psect for function _dump_buffer
  8066                           
  8067                           
  8068                           ;incstack = 0
  8069                           ; Regs used in _dump_buffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8070                           ;dump_buffer@buffer stored from wreg
  8071     056B  0140               	movlb	0	; select bank0
  8072     056C  00D3               	movwf	dump_buffer@buffer
  8073     056D                     l4447:
  8074                           
  8075                           ;my_helpers.c: 8: const uint8_t *p = (const uint8_t *)buffer;
  8076     056D  0853               	movf	dump_buffer@buffer,w
  8077     056E  00D6               	movwf	dump_buffer@p
  8078     056F                     l4449:
  8079                           
  8080                           ;my_helpers.c: 9: size_t i, j;;my_helpers.c: 11: for (i = 0; i < size; i += 16) {
  8081     056F  01D7               	clrf	dump_buffer@i
  8082     0570  01D8               	clrf	dump_buffer@i+1
  8083     0571  2E27               	goto	l4495
  8084     0572                     l4451:
  8085                           
  8086                           ;my_helpers.c: 12: printf("%08x:", (unsigned int)i);
  8087     0572  30A2               	movlw	low (STR_8| (0+32768))
  8088     0573  00AC               	movwf	printf@f
  8089     0574  3091               	movlw	high (STR_8| (0+32768))
  8090     0575  00AD               	movwf	printf@f+1
  8091     0576  0858               	movf	dump_buffer@i+1,w
  8092     0577  00AF               	movwf	?_printf+3
  8093     0578  0857               	movf	dump_buffer@i,w
  8094     0579  00AE               	movwf	?_printf+2
  8095     057A  3180  2046  3185   	fcall	_printf
  8096     057D                     l4453:
  8097                           
  8098                           ;my_helpers.c: 13: for (j = 0; j < 16; j++) {
  8099     057D  0140               	movlb	0	; select bank0
  8100     057E  01D9               	clrf	dump_buffer@j
  8101     057F  01DA               	clrf	dump_buffer@j+1
  8102     0580                     l4459:
  8103                           
  8104                           ;my_helpers.c: 14: if (i + j < size) {
  8105     0580  0859               	movf	dump_buffer@j,w
  8106     0581  0757               	addwf	dump_buffer@i,w
  8107     0582  00CF               	movwf	??_dump_buffer
  8108     0583  085A               	movf	dump_buffer@j+1,w
  8109     0584  3D58               	addwfc	dump_buffer@i+1,w
  8110     0585  00D0               	movwf	??_dump_buffer+1
  8111     0586  084E               	movf	dump_buffer@size+1,w
  8112     0587  0250               	subwf	??_dump_buffer+1,w
  8113     0588  1D03               	skipz
  8114     0589  2D8C               	goto	u3165
  8115     058A  084D               	movf	dump_buffer@size,w
  8116     058B  024F               	subwf	??_dump_buffer,w
  8117     058C                     u3165:
  8118     058C  1803               	skipnc
  8119     058D  2D8F               	goto	u3161
  8120     058E  2D90               	goto	u3160
  8121     058F                     u3161:
  8122     058F  2DA9               	goto	l4463
  8123     0590                     u3160:
  8124     0590                     l4461:
  8125                           
  8126                           ;my_helpers.c: 15: printf(" %02x", p[i + j]);
  8127     0590  30A8               	movlw	low (STR_9| (0+32768))
  8128     0591  00AC               	movwf	printf@f
  8129     0592  3091               	movlw	high (STR_9| (0+32768))
  8130     0593  00AD               	movwf	printf@f+1
  8131     0594  0857               	movf	dump_buffer@i,w
  8132     0595  0756               	addwf	dump_buffer@p,w
  8133     0596  00CF               	movwf	??_dump_buffer
  8134     0597  0859               	movf	dump_buffer@j,w
  8135     0598  074F               	addwf	??_dump_buffer,w
  8136     0599  00D0               	movwf	??_dump_buffer+1
  8137     059A  0850               	movf	??_dump_buffer+1,w
  8138     059B  0086               	movwf	6
  8139     059C  3001               	movlw	1	; select bank2/3
  8140     059D  0087               	movwf	7
  8141     059E  0801               	movf	1,w
  8142     059F  00D1               	movwf	??_dump_buffer+2
  8143     05A0  01D2               	clrf	??_dump_buffer+3
  8144     05A1  0851               	movf	??_dump_buffer+2,w
  8145     05A2  00AE               	movwf	?_printf+2
  8146     05A3  0852               	movf	??_dump_buffer+3,w
  8147     05A4  00AF               	movwf	?_printf+3
  8148     05A5  3180  2046  3185   	fcall	_printf
  8149                           
  8150                           ;my_helpers.c: 16: } else {
  8151     05A8  2DB0               	goto	l4465
  8152     05A9                     l4463:
  8153                           
  8154                           ;my_helpers.c: 17: printf("   ");
  8155     05A9  30AE               	movlw	low (STR_10| (0+32768))
  8156     05AA  00AC               	movwf	printf@f
  8157     05AB  3091               	movlw	high (STR_10| (0+32768))
  8158     05AC  00AD               	movwf	printf@f+1
  8159     05AD  3180  2046  3185   	fcall	_printf
  8160     05B0                     l4465:
  8161     05B0  3001               	movlw	1
  8162     05B1  0140               	movlb	0	; select bank0
  8163     05B2  07D9               	addwf	dump_buffer@j,f
  8164     05B3  3000               	movlw	0
  8165     05B4  3DDA               	addwfc	dump_buffer@j+1,f
  8166     05B5                     l4467:
  8167     05B5  3000               	movlw	0
  8168     05B6  025A               	subwf	dump_buffer@j+1,w
  8169     05B7  3010               	movlw	16
  8170     05B8  1903               	skipnz
  8171     05B9  0259               	subwf	dump_buffer@j,w
  8172     05BA  1C03               	skipc
  8173     05BB  2DBD               	goto	u3171
  8174     05BC  2DBE               	goto	u3170
  8175     05BD                     u3171:
  8176     05BD  2D80               	goto	l4459
  8177     05BE                     u3170:
  8178     05BE                     l4469:
  8179                           
  8180                           ;my_helpers.c: 18: };my_helpers.c: 19: };my_helpers.c: 20: printf("  ");
  8181     05BE  30AF               	movlw	low ((STR_10+1)| (0+32768))
  8182     05BF  00AC               	movwf	printf@f
  8183     05C0  3091               	movlw	high ((STR_10+1)| (0+32768))
  8184     05C1  00AD               	movwf	printf@f+1
  8185     05C2  3180  2046  3185   	fcall	_printf
  8186     05C5                     l4471:
  8187                           
  8188                           ;my_helpers.c: 21: for (j = 0; j < 16; j++) {
  8189     05C5  0140               	movlb	0	; select bank0
  8190     05C6  01D9               	clrf	dump_buffer@j
  8191     05C7  01DA               	clrf	dump_buffer@j+1
  8192     05C8                     l4477:
  8193                           
  8194                           ;my_helpers.c: 22: if (i + j < size) {
  8195     05C8  0859               	movf	dump_buffer@j,w
  8196     05C9  0757               	addwf	dump_buffer@i,w
  8197     05CA  00CF               	movwf	??_dump_buffer
  8198     05CB  085A               	movf	dump_buffer@j+1,w
  8199     05CC  3D58               	addwfc	dump_buffer@i+1,w
  8200     05CD  00D0               	movwf	??_dump_buffer+1
  8201     05CE  084E               	movf	dump_buffer@size+1,w
  8202     05CF  0250               	subwf	??_dump_buffer+1,w
  8203     05D0  1D03               	skipz
  8204     05D1  2DD4               	goto	u3185
  8205     05D2  084D               	movf	dump_buffer@size,w
  8206     05D3  024F               	subwf	??_dump_buffer,w
  8207     05D4                     u3185:
  8208     05D4  1803               	skipnc
  8209     05D5  2DD7               	goto	u3181
  8210     05D6  2DD8               	goto	u3180
  8211     05D7                     u3181:
  8212     05D7  2E0D               	goto	l4487
  8213     05D8                     u3180:
  8214     05D8                     l4479:
  8215                           
  8216                           ;my_helpers.c: 23: printf("%c", isprint(p[i + j]) ? p[i + j] : '.');
  8217     05D8  0857               	movf	dump_buffer@i,w
  8218     05D9  0756               	addwf	dump_buffer@p,w
  8219     05DA  00CF               	movwf	??_dump_buffer
  8220     05DB  0859               	movf	dump_buffer@j,w
  8221     05DC  074F               	addwf	??_dump_buffer,w
  8222     05DD  00D0               	movwf	??_dump_buffer+1
  8223     05DE  0850               	movf	??_dump_buffer+1,w
  8224     05DF  0086               	movwf	6
  8225     05E0  3001               	movlw	1	; select bank2/3
  8226     05E1  0087               	movwf	7
  8227     05E2  0801               	movf	1,w
  8228     05E3  3189  21F8  3185   	fcall	_isprint
  8229     05E6  1803               	btfsc	3,0
  8230     05E7  2DE9               	goto	u3191
  8231     05E8  2DEA               	goto	u3190
  8232     05E9                     u3191:
  8233     05E9  2DF0               	goto	l4483
  8234     05EA                     u3190:
  8235     05EA                     l4481:
  8236     05EA  302E               	movlw	46
  8237     05EB  0140               	movlb	0	; select bank0
  8238     05EC  00D4               	movwf	_dump_buffer$1020
  8239     05ED  3000               	movlw	0
  8240     05EE  00D5               	movwf	_dump_buffer$1020+1
  8241     05EF  2E02               	goto	l4485
  8242     05F0                     l4483:
  8243     05F0  0140               	movlb	0	; select bank0
  8244     05F1  0857               	movf	dump_buffer@i,w
  8245     05F2  0756               	addwf	dump_buffer@p,w
  8246     05F3  00CF               	movwf	??_dump_buffer
  8247     05F4  0859               	movf	dump_buffer@j,w
  8248     05F5  074F               	addwf	??_dump_buffer,w
  8249     05F6  00D0               	movwf	??_dump_buffer+1
  8250     05F7  0850               	movf	??_dump_buffer+1,w
  8251     05F8  0086               	movwf	6
  8252     05F9  3001               	movlw	1	; select bank2/3
  8253     05FA  0087               	movwf	7
  8254     05FB  0801               	movf	1,w
  8255     05FC  00D1               	movwf	??_dump_buffer+2
  8256     05FD  01D2               	clrf	??_dump_buffer+3
  8257     05FE  0851               	movf	??_dump_buffer+2,w
  8258     05FF  00D4               	movwf	_dump_buffer$1020
  8259     0600  0852               	movf	??_dump_buffer+3,w
  8260     0601  00D5               	movwf	_dump_buffer$1020+1
  8261     0602                     l4485:
  8262     0602  30B2               	movlw	low (STR_12| (0+32768))
  8263     0603  00AC               	movwf	printf@f
  8264     0604  3091               	movlw	high (STR_12| (0+32768))
  8265     0605  00AD               	movwf	printf@f+1
  8266     0606  0855               	movf	_dump_buffer$1020+1,w
  8267     0607  00AF               	movwf	?_printf+3
  8268     0608  0854               	movf	_dump_buffer$1020,w
  8269     0609  00AE               	movwf	?_printf+2
  8270     060A  3180  2046  3185   	fcall	_printf
  8271     060D                     l4487:
  8272     060D  3001               	movlw	1
  8273     060E  0140               	movlb	0	; select bank0
  8274     060F  07D9               	addwf	dump_buffer@j,f
  8275     0610  3000               	movlw	0
  8276     0611  3DDA               	addwfc	dump_buffer@j+1,f
  8277     0612                     l4489:
  8278     0612  3000               	movlw	0
  8279     0613  025A               	subwf	dump_buffer@j+1,w
  8280     0614  3010               	movlw	16
  8281     0615  1903               	skipnz
  8282     0616  0259               	subwf	dump_buffer@j,w
  8283     0617  1C03               	skipc
  8284     0618  2E1A               	goto	u3201
  8285     0619  2E1B               	goto	u3200
  8286     061A                     u3201:
  8287     061A  2DC8               	goto	l4477
  8288     061B                     u3200:
  8289     061B                     l4491:
  8290                           
  8291                           ;my_helpers.c: 24: };my_helpers.c: 25: };my_helpers.c: 26: printf("\r\n");
  8292     061B  30C1               	movlw	low ((STR_23+30)| (0+32768))
  8293     061C  00AC               	movwf	printf@f
  8294     061D  3090               	movlw	high ((STR_23+30)| (0+32768))
  8295     061E  00AD               	movwf	printf@f+1
  8296     061F  3180  2046  3185   	fcall	_printf
  8297     0622                     l4493:
  8298     0622  3010               	movlw	16
  8299     0623  0140               	movlb	0	; select bank0
  8300     0624  07D7               	addwf	dump_buffer@i,f
  8301     0625  3000               	movlw	0
  8302     0626  3DD8               	addwfc	dump_buffer@i+1,f
  8303     0627                     l4495:
  8304     0627  084E               	movf	dump_buffer@size+1,w
  8305     0628  0258               	subwf	dump_buffer@i+1,w
  8306     0629  1D03               	skipz
  8307     062A  2E2D               	goto	u3215
  8308     062B  084D               	movf	dump_buffer@size,w
  8309     062C  0257               	subwf	dump_buffer@i,w
  8310     062D                     u3215:
  8311     062D  1C03               	skipc
  8312     062E  2E30               	goto	u3211
  8313     062F  2E31               	goto	u3210
  8314     0630                     u3211:
  8315     0630  2D72               	goto	l4451
  8316     0631                     u3210:
  8317     0631                     l419:
  8318     0631  0008               	return
  8319     0632                     __end_of_dump_buffer:
  8320                           
  8321                           	psect	text17
  8322     09F8                     __ptext17:	
  8323 ;; *************** function _isprint *****************
  8324 ;; Defined at:
  8325 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isprint.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  c               1    wreg     unsigned char 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  c               1    5[COMMON] unsigned char 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;		None               void
  8332 ;; Registers used:
  8333 ;;		wreg, status,2, status,0
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;Total ram usage:        2 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 2
  8346 ;; This function calls:
  8347 ;;		Nothing
  8348 ;; This function is called by:
  8349 ;;		_dump_buffer
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353     09F8                     _isprint:	
  8354                           ;psect for function _isprint
  8355                           
  8356                           
  8357                           ;incstack = 0
  8358                           ; Regs used in _isprint: [wreg+status,2+status,0]
  8359                           ;isprint@c stored from wreg
  8360     09F8  00F5               	movwf	isprint@c
  8361     09F9                     l3135:
  8362     09F9  01F4               	clrf	_isprint$1806
  8363     09FA                     l3137:
  8364     09FA  307F               	movlw	127
  8365     09FB  0275               	subwf	isprint@c,w
  8366     09FC  1803               	skipnc
  8367     09FD  29FF               	goto	u1881
  8368     09FE  2A00               	goto	u1880
  8369     09FF                     u1881:
  8370     09FF  2A08               	goto	l3143
  8371     0A00                     u1880:
  8372     0A00                     l3139:
  8373     0A00  3020               	movlw	32
  8374     0A01  0275               	subwf	isprint@c,w
  8375     0A02  1C03               	skipc
  8376     0A03  2A05               	goto	u1891
  8377     0A04  2A06               	goto	u1890
  8378     0A05                     u1891:
  8379     0A05  2A08               	goto	l3143
  8380     0A06                     u1890:
  8381     0A06                     l3141:
  8382     0A06  01F4               	clrf	_isprint$1806
  8383     0A07  0AF4               	incf	_isprint$1806,f
  8384     0A08                     l3143:
  8385     0A08  0C74               	rrf	_isprint$1806,w
  8386     0A09                     l1374:
  8387     0A09  0008               	return
  8388     0A0A                     __end_of_isprint:
  8389                           
  8390                           	psect	text18
  8391     0D2F                     __ptext18:	
  8392 ;; *************** function _control_LED *****************
  8393 ;; Defined at:
  8394 ;;		line 386 in file "as7341_model.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  LED             1    wreg     unsigned char 
  8397 ;;  current         1    4[BANK0 ] unsigned char 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  LED             1    6[BANK0 ] unsigned char 
  8400 ;;  data            1    7[BANK0 ] unsigned char 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0, pclath, cstack
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8410 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;Total ram usage:        4 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; Hardware stack levels required when called: 6
  8417 ;; This function calls:
  8418 ;;		_as7341_i2c_write
  8419 ;;		_set_bank
  8420 ;; This function is called by:
  8421 ;;		_main
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425     0D2F                     _control_LED:	
  8426                           ;psect for function _control_LED
  8427                           
  8428                           
  8429                           ;incstack = 0
  8430                           ; Regs used in _control_LED: [wreg+status,2+status,0+pclath+cstack]
  8431                           ;control_LED@LED stored from wreg
  8432     0D2F  0140               	movlb	0	; select bank0
  8433     0D30  00A6               	movwf	control_LED@LED
  8434     0D31                     l4741:
  8435     0D31                     l4743:
  8436                           
  8437                           ;as7341_model.c: 388: if(current < 1) current = 1;
  8438     0D31  0824               	movf	control_LED@current,w
  8439     0D32  1D03               	btfss	3,2
  8440     0D33  2D35               	goto	u3361
  8441     0D34  2D36               	goto	u3360
  8442     0D35                     u3361:
  8443     0D35  2D38               	goto	l4747
  8444     0D36                     u3360:
  8445     0D36                     l4745:
  8446     0D36  01A4               	clrf	control_LED@current
  8447     0D37  0AA4               	incf	control_LED@current,f
  8448     0D38                     l4747:
  8449                           
  8450                           ;as7341_model.c: 389: current--;
  8451     0D38  3001               	movlw	1
  8452     0D39  02A4               	subwf	control_LED@current,f
  8453     0D3A                     l4749:
  8454                           
  8455                           ;as7341_model.c: 390: if(current > 19) {
  8456     0D3A  3014               	movlw	20
  8457     0D3B  0224               	subwf	control_LED@current,w
  8458     0D3C  1C03               	skipc
  8459     0D3D  2D3F               	goto	u3371
  8460     0D3E  2D40               	goto	u3370
  8461     0D3F                     u3371:
  8462     0D3F  2D42               	goto	l4753
  8463     0D40                     u3370:
  8464     0D40                     l4751:
  8465                           
  8466                           ;as7341_model.c: 391: current = 19;
  8467     0D40  3013               	movlw	19
  8468     0D41  00A4               	movwf	control_LED@current
  8469     0D42                     l4753:
  8470                           
  8471                           ;as7341_model.c: 392: };;as7341_model.c: 393: set_bank(1);
  8472     0D42  3001               	movlw	1
  8473     0D43  318A  226F  318D   	fcall	_set_bank
  8474     0D46                     l4755:
  8475                           
  8476                           ;as7341_model.c: 394: if(LED == 1) {
  8477     0D46  0140               	movlb	0	; select bank0
  8478     0D47  0326               	decf	control_LED@LED,w
  8479     0D48  1D03               	btfss	3,2
  8480     0D49  2D4B               	goto	u3381
  8481     0D4A  2D4C               	goto	u3380
  8482     0D4B                     u3381:
  8483     0D4B  2D50               	goto	l4759
  8484     0D4C                     u3380:
  8485     0D4C                     l4757:
  8486                           
  8487                           ;as7341_model.c: 395: data = 0x80 | current;
  8488     0D4C  0824               	movf	control_LED@current,w
  8489     0D4D  3880               	iorlw	128
  8490     0D4E  00A7               	movwf	control_LED@data
  8491                           
  8492                           ;as7341_model.c: 396: } else {
  8493     0D4F  2D52               	goto	l4761
  8494     0D50                     l4759:
  8495                           
  8496                           ;as7341_model.c: 397: data = current;
  8497     0D50  0824               	movf	control_LED@current,w
  8498     0D51  00A7               	movwf	control_LED@data
  8499     0D52                     l4761:
  8500                           
  8501                           ;as7341_model.c: 398: };as7341_model.c: 399: as7341_i2c_write(0x74, data);
  8502     0D52  0827               	movf	control_LED@data,w
  8503     0D53  00F5               	movwf	as7341_i2c_write@value
  8504     0D54  3074               	movlw	116
  8505     0D55  318B  2379  318D   	fcall	_as7341_i2c_write
  8506     0D58                     l4763:
  8507                           
  8508                           ;as7341_model.c: 400: _delay((unsigned long)((100)*(1000000/4000.0)));
  8509     0D58  3021               	movlw	33
  8510     0D59  0140               	movlb	0	; select bank0
  8511     0D5A  00A5               	movwf	??_control_LED
  8512     0D5B  3076               	movlw	118
  8513     0D5C                     u3747:
  8514     0D5C  0B89               	decfsz	9,f
  8515     0D5D  2D5C               	goto	u3747
  8516     0D5E  0BA5               	decfsz	??_control_LED,f
  8517     0D5F  2D5C               	goto	u3747
  8518     0D60  0000               	nop
  8519                           
  8520                           ;as7341_model.c: 401: set_bank(0);
  8521     0D61  3000               	movlw	0
  8522     0D62  318A  226F  318D   	fcall	_set_bank
  8523     0D65                     l604:
  8524     0D65  0008               	return
  8525     0D66                     __end_of_control_LED:
  8526                           
  8527                           	psect	text19
  8528     0EC2                     __ptext19:	
  8529 ;; *************** function _calculate_diff *****************
  8530 ;; Defined at:
  8531 ;;		line 26 in file "main.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  now             4    0[BANK0 ] unsigned long 
  8534 ;;  prev_ticks      4    4[BANK0 ] unsigned long 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;  diff            4   16[BANK0 ] unsigned long 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  4    0[BANK0 ] unsigned long 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8546 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;Total ram usage:       20 bytes
  8551 ;; Hardware stack levels used: 1
  8552 ;; Hardware stack levels required when called: 2
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_main
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560     0EC2                     _calculate_diff:	
  8561                           ;psect for function _calculate_diff
  8562                           
  8563     0EC2                     l4721:	
  8564                           ;incstack = 0
  8565                           ; Regs used in _calculate_diff: [wreg+status,2+status,0]
  8566                           
  8567                           
  8568                           ;main.c: 27: uint32_t diff;;main.c: 28: if (now >= prev_ticks) {
  8569     0EC2  0140               	movlb	0	; select bank0
  8570     0EC3  0827               	movf	calculate_diff@prev_ticks+3,w
  8571     0EC4  0223               	subwf	calculate_diff@now+3,w
  8572     0EC5  1D03               	skipz
  8573     0EC6  2ED1               	goto	u3355
  8574     0EC7  0826               	movf	calculate_diff@prev_ticks+2,w
  8575     0EC8  0222               	subwf	calculate_diff@now+2,w
  8576     0EC9  1D03               	skipz
  8577     0ECA  2ED1               	goto	u3355
  8578     0ECB  0825               	movf	calculate_diff@prev_ticks+1,w
  8579     0ECC  0221               	subwf	calculate_diff@now+1,w
  8580     0ECD  1D03               	skipz
  8581     0ECE  2ED1               	goto	u3355
  8582     0ECF  0824               	movf	calculate_diff@prev_ticks,w
  8583     0ED0  0220               	subwf	calculate_diff@now,w
  8584     0ED1                     u3355:
  8585     0ED1  1C03               	skipc
  8586     0ED2  2ED4               	goto	u3351
  8587     0ED3  2ED5               	goto	u3350
  8588     0ED4                     u3351:
  8589     0ED4  2EEA               	goto	l4725
  8590     0ED5                     u3350:
  8591     0ED5                     l4723:
  8592                           
  8593                           ;main.c: 29: diff = now - prev_ticks;
  8594     0ED5  0824               	movf	calculate_diff@prev_ticks,w
  8595     0ED6  0220               	subwf	calculate_diff@now,w
  8596     0ED7  00A8               	movwf	??_calculate_diff
  8597     0ED8  0825               	movf	calculate_diff@prev_ticks+1,w
  8598     0ED9  3B21               	subwfb	calculate_diff@now+1,w
  8599     0EDA  00A9               	movwf	??_calculate_diff+1
  8600     0EDB  0826               	movf	calculate_diff@prev_ticks+2,w
  8601     0EDC  3B22               	subwfb	calculate_diff@now+2,w
  8602     0EDD  00AA               	movwf	??_calculate_diff+2
  8603     0EDE  0827               	movf	calculate_diff@prev_ticks+3,w
  8604     0EDF  3B23               	subwfb	calculate_diff@now+3,w
  8605     0EE0  00AB               	movwf	??_calculate_diff+3
  8606     0EE1  082B               	movf	??_calculate_diff+3,w
  8607     0EE2  00B3               	movwf	calculate_diff@diff+3
  8608     0EE3  082A               	movf	??_calculate_diff+2,w
  8609     0EE4  00B2               	movwf	calculate_diff@diff+2
  8610     0EE5  0829               	movf	??_calculate_diff+1,w
  8611     0EE6  00B1               	movwf	calculate_diff@diff+1
  8612     0EE7  0828               	movf	??_calculate_diff,w
  8613     0EE8  00B0               	movwf	calculate_diff@diff
  8614                           
  8615                           ;main.c: 30: } else {
  8616     0EE9  2F0E               	goto	l4727
  8617     0EEA                     l4725:
  8618                           
  8619                           ;main.c: 32: diff = ((4294967295UL) - prev_ticks) + now + 1;
  8620     0EEA  0820               	movf	calculate_diff@now,w
  8621     0EEB  00A8               	movwf	??_calculate_diff
  8622     0EEC  0821               	movf	calculate_diff@now+1,w
  8623     0EED  00A9               	movwf	??_calculate_diff+1
  8624     0EEE  0822               	movf	calculate_diff@now+2,w
  8625     0EEF  00AA               	movwf	??_calculate_diff+2
  8626     0EF0  0823               	movf	calculate_diff@now+3,w
  8627     0EF1  00AB               	movwf	??_calculate_diff+3
  8628     0EF2  0924               	comf	calculate_diff@prev_ticks,w
  8629     0EF3  00AC               	movwf	??_calculate_diff+4
  8630     0EF4  0925               	comf	calculate_diff@prev_ticks+1,w
  8631     0EF5  00AD               	movwf	??_calculate_diff+5
  8632     0EF6  0926               	comf	calculate_diff@prev_ticks+2,w
  8633     0EF7  00AE               	movwf	??_calculate_diff+6
  8634     0EF8  0927               	comf	calculate_diff@prev_ticks+3,w
  8635     0EF9  00AF               	movwf	??_calculate_diff+7
  8636     0EFA  082C               	movf	??_calculate_diff+4,w
  8637     0EFB  07A8               	addwf	??_calculate_diff,f
  8638     0EFC  082D               	movf	??_calculate_diff+5,w
  8639     0EFD  3DA9               	addwfc	??_calculate_diff+1,f
  8640     0EFE  082E               	movf	??_calculate_diff+6,w
  8641     0EFF  3DAA               	addwfc	??_calculate_diff+2,f
  8642     0F00  082F               	movf	??_calculate_diff+7,w
  8643     0F01  3DAB               	addwfc	??_calculate_diff+3,f
  8644     0F02  3001               	movlw	1
  8645     0F03  0728               	addwf	??_calculate_diff,w
  8646     0F04  00B0               	movwf	calculate_diff@diff
  8647     0F05  3000               	movlw	0
  8648     0F06  3D29               	addwfc	??_calculate_diff+1,w
  8649     0F07  00B1               	movwf	calculate_diff@diff+1
  8650     0F08  3000               	movlw	0
  8651     0F09  3D2A               	addwfc	??_calculate_diff+2,w
  8652     0F0A  00B2               	movwf	calculate_diff@diff+2
  8653     0F0B  3000               	movlw	0
  8654     0F0C  3D2B               	addwfc	??_calculate_diff+3,w
  8655     0F0D  00B3               	movwf	calculate_diff@diff+3
  8656     0F0E                     l4727:
  8657                           
  8658                           ;main.c: 33: };main.c: 34: return diff;
  8659     0F0E  0833               	movf	calculate_diff@diff+3,w
  8660     0F0F  00A3               	movwf	?_calculate_diff+3
  8661     0F10  0832               	movf	calculate_diff@diff+2,w
  8662     0F11  00A2               	movwf	?_calculate_diff+2
  8663     0F12  0831               	movf	calculate_diff@diff+1,w
  8664     0F13  00A1               	movwf	?_calculate_diff+1
  8665     0F14  0830               	movf	calculate_diff@diff,w
  8666     0F15  00A0               	movwf	?_calculate_diff
  8667     0F16                     l148:
  8668     0F16  0008               	return
  8669     0F17                     __end_of_calculate_diff:
  8670                           
  8671                           	psect	text20
  8672     0F17                     __ptext20:	
  8673 ;; *************** function _as7341_start_measurement *****************
  8674 ;; Defined at:
  8675 ;;		line 198 in file "as7341_model.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  channel         1    wreg     enum E225
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;  channel         1   46[BANK0 ] enum E225
  8680 ;;  data            1   47[BANK0 ] unsigned char 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;Total ram usage:        3 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 7
  8697 ;; This function calls:
  8698 ;;		_as7341_config
  8699 ;;		_as7341_i2c_read
  8700 ;;		_as7341_i2c_write
  8701 ;;		_as7341_smux_cmd_config
  8702 ;;		_enable_smux
  8703 ;;		_enable_sp_en
  8704 ;;		_printf
  8705 ;;		_set_F1F4ClearNIR
  8706 ;;		_set_F5F8ClearNIR
  8707 ;;		_set_GPIO_mode
  8708 ;; This function is called by:
  8709 ;;		_main
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713     0F17                     _as7341_start_measurement:	
  8714                           ;psect for function _as7341_start_measurement
  8715                           
  8716                           
  8717                           ;incstack = 0
  8718                           ; Regs used in _as7341_start_measurement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8719                           ;as7341_start_measurement@channel stored from wreg
  8720     0F17  0140               	movlb	0	; select bank0
  8721     0F18  00CE               	movwf	as7341_start_measurement@channel
  8722     0F19                     l4765:
  8723     0F19                     l4767:
  8724                           
  8725                           ;as7341_model.c: 200: data = as7341_i2c_read(0xA9);
  8726     0F19  30A9               	movlw	169
  8727     0F1A  318B  2358  318F   	fcall	_as7341_i2c_read
  8728     0F1D  0140               	movlb	0	; select bank0
  8729     0F1E  00CF               	movwf	as7341_start_measurement@data
  8730     0F1F                     l4769:
  8731                           
  8732                           ;as7341_model.c: 201: data = data & (~(1<<4));
  8733     0F1F  084F               	movf	as7341_start_measurement@data,w
  8734     0F20  39EF               	andlw	239
  8735     0F21  00CF               	movwf	as7341_start_measurement@data
  8736     0F22                     l4771:
  8737                           
  8738                           ;as7341_model.c: 202: as7341_i2c_write(0xA9, data);
  8739     0F22  084F               	movf	as7341_start_measurement@data,w
  8740     0F23  00F5               	movwf	as7341_i2c_write@value
  8741     0F24  30A9               	movlw	169
  8742     0F25  318B  2379  318F   	fcall	_as7341_i2c_write
  8743     0F28                     l4773:
  8744                           
  8745                           ;as7341_model.c: 204: enable_sp_en(0);
  8746     0F28  3000               	movlw	0
  8747     0F29  318B  23DD  318F   	fcall	_enable_sp_en
  8748     0F2C                     l4775:
  8749                           
  8750                           ;as7341_model.c: 205: as7341_smux_cmd_config();
  8751     0F2C  3189  2144  318F   	fcall	_as7341_smux_cmd_config
  8752     0F2F                     l4777:
  8753                           
  8754                           ;as7341_model.c: 207: if(channel == F1F4ClearNIR) {
  8755     0F2F  0140               	movlb	0	; select bank0
  8756     0F30  084E               	movf	as7341_start_measurement@channel,w
  8757     0F31  1D03               	btfss	3,2
  8758     0F32  2F34               	goto	u3391
  8759     0F33  2F35               	goto	u3390
  8760     0F34                     u3391:
  8761     0F34  2F40               	goto	l4783
  8762     0F35                     u3390:
  8763     0F35                     l4779:
  8764                           
  8765                           ;as7341_model.c: 208: printf("start_measurement_channel: F1F4ClearNIR \r\n");
  8766     0F35  3000               	movlw	low (STR_20| (0+32768))
  8767     0F36  00AC               	movwf	printf@f
  8768     0F37  3090               	movlw	high (STR_20| (0+32768))
  8769     0F38  00AD               	movwf	printf@f+1
  8770     0F39  3180  2046  318F   	fcall	_printf
  8771     0F3C                     l4781:
  8772                           
  8773                           ;as7341_model.c: 209: set_F1F4ClearNIR();
  8774     0F3C  318F  2787  318F   	fcall	_set_F1F4ClearNIR
  8775                           
  8776                           ;as7341_model.c: 210: } else if(channel == F5F8ClearNIR){
  8777     0F3F  2F4F               	goto	l4789
  8778     0F40                     l4783:
  8779     0F40  034E               	decf	as7341_start_measurement@channel,w
  8780     0F41  1D03               	btfss	3,2
  8781     0F42  2F44               	goto	u3401
  8782     0F43  2F45               	goto	u3400
  8783     0F44                     u3401:
  8784     0F44  2F4F               	goto	l4789
  8785     0F45                     u3400:
  8786     0F45                     l4785:
  8787                           
  8788                           ;as7341_model.c: 211: printf("start_measurement_channel: F5F8ClearNIR \r\n");
  8789     0F45  302B               	movlw	low (STR_21| (0+32768))
  8790     0F46  00AC               	movwf	printf@f
  8791     0F47  3090               	movlw	high (STR_21| (0+32768))
  8792     0F48  00AD               	movwf	printf@f+1
  8793     0F49  3180  2046  318F   	fcall	_printf
  8794     0F4C                     l4787:
  8795                           
  8796                           ;as7341_model.c: 212: set_F5F8ClearNIR();
  8797     0F4C  3187  275E  318F   	fcall	_set_F5F8ClearNIR
  8798     0F4F                     l4789:
  8799                           
  8800                           ;as7341_model.c: 213: };;as7341_model.c: 214: enable_smux(1);
  8801     0F4F  3001               	movlw	1
  8802     0F50  318A  22A5  318F   	fcall	_enable_smux
  8803     0F53                     l4791:
  8804                           
  8805                           ;as7341_model.c: 215: if(measurement_mode == SYNS) {
  8806     0F53  0140               	movlb	0	; select bank0
  8807     0F54  0367               	decf	_measurement_mode,w
  8808     0F55  1D03               	btfss	3,2
  8809     0F56  2F58               	goto	u3411
  8810     0F57  2F59               	goto	u3410
  8811     0F58                     u3411:
  8812     0F58  2F69               	goto	l4799
  8813     0F59                     u3410:
  8814     0F59                     l4793:
  8815                           
  8816                           ;as7341_model.c: 216: printf("as7341_start_measurement: SYNS \r\n");
  8817     0F59  3081               	movlw	low (STR_22| (0+32768))
  8818     0F5A  00AC               	movwf	printf@f
  8819     0F5B  3090               	movlw	high (STR_22| (0+32768))
  8820     0F5C  00AD               	movwf	printf@f+1
  8821     0F5D  3180  2046  318F   	fcall	_printf
  8822     0F60                     l4795:
  8823                           
  8824                           ;as7341_model.c: 217: set_GPIO_mode(AS7341_GPIO_INPUT);
  8825     0F60  3001               	movlw	1
  8826     0F61  318A  22FA  318F   	fcall	_set_GPIO_mode
  8827     0F64                     l4797:
  8828                           
  8829                           ;as7341_model.c: 218: as7341_config(SYNS);
  8830     0F64  3001               	movlw	1
  8831     0F65  3187  27D7  318F   	fcall	_as7341_config
  8832                           
  8833                           ;as7341_model.c: 219: } else if(measurement_mode == SPM) {
  8834     0F68  2F79               	goto	l4805
  8835     0F69                     l4799:
  8836     0F69  0867               	movf	_measurement_mode,w
  8837     0F6A  1D03               	btfss	3,2
  8838     0F6B  2F6D               	goto	u3421
  8839     0F6C  2F6E               	goto	u3420
  8840     0F6D                     u3421:
  8841     0F6D  2F79               	goto	l4805
  8842     0F6E                     u3420:
  8843     0F6E                     l4801:
  8844                           
  8845                           ;as7341_model.c: 220: printf("as7341_start_measurement: SPM \r\n");
  8846     0F6E  30A3               	movlw	low (STR_23| (0+32768))
  8847     0F6F  00AC               	movwf	printf@f
  8848     0F70  3090               	movlw	high (STR_23| (0+32768))
  8849     0F71  00AD               	movwf	printf@f+1
  8850     0F72  3180  2046  318F   	fcall	_printf
  8851     0F75                     l4803:
  8852                           
  8853                           ;as7341_model.c: 221: as7341_config(SPM);
  8854     0F75  3000               	movlw	0
  8855     0F76  3187  27D7  318F   	fcall	_as7341_config
  8856     0F79                     l4805:
  8857                           
  8858                           ;as7341_model.c: 222: };;as7341_model.c: 223: enable_sp_en(1);
  8859     0F79  3001               	movlw	1
  8860     0F7A  318B  23DD  318F   	fcall	_enable_sp_en
  8861     0F7D                     l4807:
  8862                           
  8863                           ;as7341_model.c: 224: _delay((unsigned long)((100)*(1000000/4000.0)));
  8864     0F7D  3021               	movlw	33
  8865     0F7E  0140               	movlb	0	; select bank0
  8866     0F7F  00CD               	movwf	??_as7341_start_measurement
  8867     0F80  3076               	movlw	118
  8868     0F81                     u3757:
  8869     0F81  0B89               	decfsz	9,f
  8870     0F82  2F81               	goto	u3757
  8871     0F83  0BCD               	decfsz	??_as7341_start_measurement,f
  8872     0F84  2F81               	goto	u3757
  8873     0F85  0000               	nop
  8874     0F86                     l549:
  8875     0F86  0008               	return
  8876     0F87                     __end_of_as7341_start_measurement:
  8877                           
  8878                           	psect	text21
  8879     0AFA                     __ptext21:	
  8880 ;; *************** function _set_GPIO_mode *****************
  8881 ;; Defined at:
  8882 ;;		line 297 in file "as7341_model.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  mode            1    wreg     unsigned char 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  mode            1    2[BANK0 ] unsigned char 
  8887 ;;  data            1    3[BANK0 ] unsigned char 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, status,2, status,0, pclath, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;Total ram usage:        2 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 5
  8904 ;; This function calls:
  8905 ;;		_as7341_i2c_read
  8906 ;;		_as7341_i2c_write
  8907 ;; This function is called by:
  8908 ;;		_as7341_start_measurement
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912     0AFA                     _set_GPIO_mode:	
  8913                           ;psect for function _set_GPIO_mode
  8914                           
  8915                           
  8916                           ;incstack = 0
  8917                           ; Regs used in _set_GPIO_mode: [wreg+status,2+status,0+pclath+cstack]
  8918                           ;set_GPIO_mode@mode stored from wreg
  8919     0AFA  0140               	movlb	0	; select bank0
  8920     0AFB  00A2               	movwf	set_GPIO_mode@mode
  8921     0AFC                     l4657:
  8922                           
  8923                           ;as7341_model.c: 298: uint8_t data;;as7341_model.c: 299: data = as7341_i2c_read(0xBE);
  8924     0AFC  30BE               	movlw	190
  8925     0AFD  318B  2358  318A   	fcall	_as7341_i2c_read
  8926     0B00  0140               	movlb	0	; select bank0
  8927     0B01  00A3               	movwf	set_GPIO_mode@data
  8928     0B02                     l4659:
  8929                           
  8930                           ;as7341_model.c: 300: if(mode == AS7341_GPIO_INPUT){
  8931     0B02  0322               	decf	set_GPIO_mode@mode,w
  8932     0B03  1D03               	btfss	3,2
  8933     0B04  2B06               	goto	u3261
  8934     0B05  2B07               	goto	u3260
  8935     0B06                     u3261:
  8936     0B06  2B0A               	goto	l4663
  8937     0B07                     u3260:
  8938     0B07                     l4661:
  8939                           
  8940                           ;as7341_model.c: 301: data = data | (1<<2);
  8941     0B07  0823               	movf	set_GPIO_mode@data,w
  8942     0B08  3804               	iorlw	4
  8943     0B09  00A3               	movwf	set_GPIO_mode@data
  8944     0B0A                     l4663:
  8945                           
  8946                           ;as7341_model.c: 302: };as7341_model.c: 303: if(mode == AS7341_GPIO_OUTPUT){
  8947     0B0A  0822               	movf	set_GPIO_mode@mode,w
  8948     0B0B  1D03               	btfss	3,2
  8949     0B0C  2B0E               	goto	u3271
  8950     0B0D  2B0F               	goto	u3270
  8951     0B0E                     u3271:
  8952     0B0E  2B12               	goto	l4667
  8953     0B0F                     u3270:
  8954     0B0F                     l4665:
  8955                           
  8956                           ;as7341_model.c: 304: data = data & (~(1<<2));
  8957     0B0F  0823               	movf	set_GPIO_mode@data,w
  8958     0B10  39FB               	andlw	251
  8959     0B11  00A3               	movwf	set_GPIO_mode@data
  8960     0B12                     l4667:
  8961                           
  8962                           ;as7341_model.c: 305: };as7341_model.c: 306: as7341_i2c_write(0xBE,data);
  8963     0B12  0823               	movf	set_GPIO_mode@data,w
  8964     0B13  00F5               	movwf	as7341_i2c_write@value
  8965     0B14  30BE               	movlw	190
  8966     0B15  318B  2379  318A   	fcall	_as7341_i2c_write
  8967     0B18                     l574:
  8968     0B18  0008               	return
  8969     0B19                     __end_of_set_GPIO_mode:
  8970                           
  8971                           	psect	text22
  8972     075E                     __ptext22:	
  8973 ;; *************** function _set_F5F8ClearNIR *****************
  8974 ;; Defined at:
  8975 ;;		line 141 in file "as7341_model.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;		None
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      void 
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0, pclath, cstack
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;Total ram usage:        0 bytes
  8994 ;; Hardware stack levels used: 1
  8995 ;; Hardware stack levels required when called: 4
  8996 ;; This function calls:
  8997 ;;		_I2C_Start
  8998 ;;		_I2C_Stop
  8999 ;;		_I2C_Write
  9000 ;;		_as7341_write_byte
  9001 ;; This function is called by:
  9002 ;;		_as7341_start_measurement
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006     075E                     _set_F5F8ClearNIR:	
  9007                           ;psect for function _set_F5F8ClearNIR
  9008                           
  9009     075E                     l4609:	
  9010                           ;incstack = 0
  9011                           ; Regs used in _set_F5F8ClearNIR: [wreg+status,2+status,0+pclath+cstack]
  9012                           
  9013                           
  9014                           ;as7341_model.c: 142: I2C_Start();
  9015     075E  3189  2154  3187   	fcall	_I2C_Start
  9016     0761                     l4611:
  9017                           
  9018                           ;as7341_model.c: 143: I2C_Write(0x39 << 1);
  9019     0761  3072               	movlw	114
  9020     0762  318A  222F  3187   	fcall	_I2C_Write
  9021     0765                     l4613:
  9022                           
  9023                           ;as7341_model.c: 144: as7341_write_byte(0x00, 0x00);
  9024     0765  01F5               	clrf	as7341_write_byte@value
  9025     0766  3000               	movlw	0
  9026     0767  3189  2197  3187   	fcall	_as7341_write_byte
  9027     076A                     l4615:
  9028                           
  9029                           ;as7341_model.c: 145: as7341_write_byte(0x01, 0x00);
  9030     076A  01F5               	clrf	as7341_write_byte@value
  9031     076B  3001               	movlw	1
  9032     076C  3189  2197  3187   	fcall	_as7341_write_byte
  9033     076F                     l4617:
  9034                           
  9035                           ;as7341_model.c: 146: as7341_write_byte(0x02, 0x00);
  9036     076F  01F5               	clrf	as7341_write_byte@value
  9037     0770  3002               	movlw	2
  9038     0771  3189  2197  3187   	fcall	_as7341_write_byte
  9039     0774                     l4619:
  9040                           
  9041                           ;as7341_model.c: 147: as7341_write_byte(0x03, 0x40);
  9042     0774  3040               	movlw	64
  9043     0775  00F5               	movwf	as7341_write_byte@value
  9044     0776  3003               	movlw	3
  9045     0777  3189  2197  3187   	fcall	_as7341_write_byte
  9046     077A                     l4621:
  9047                           
  9048                           ;as7341_model.c: 148: as7341_write_byte(0x04, 0x02);
  9049     077A  3002               	movlw	2
  9050     077B  00F5               	movwf	as7341_write_byte@value
  9051     077C  3004               	movlw	4
  9052     077D  3189  2197  3187   	fcall	_as7341_write_byte
  9053     0780                     l4623:
  9054                           
  9055                           ;as7341_model.c: 150: as7341_write_byte(0x05, 0x00);
  9056     0780  01F5               	clrf	as7341_write_byte@value
  9057     0781  3005               	movlw	5
  9058     0782  3189  2197  3187   	fcall	_as7341_write_byte
  9059     0785                     l4625:
  9060                           
  9061                           ;as7341_model.c: 151: as7341_write_byte(0x06, 0x10);
  9062     0785  3010               	movlw	16
  9063     0786  00F5               	movwf	as7341_write_byte@value
  9064     0787  3006               	movlw	6
  9065     0788  3189  2197  3187   	fcall	_as7341_write_byte
  9066     078B                     l4627:
  9067                           
  9068                           ;as7341_model.c: 152: as7341_write_byte(0x07, 0x03);
  9069     078B  3003               	movlw	3
  9070     078C  00F5               	movwf	as7341_write_byte@value
  9071     078D  3007               	movlw	7
  9072     078E  3189  2197  3187   	fcall	_as7341_write_byte
  9073     0791                     l4629:
  9074                           
  9075                           ;as7341_model.c: 153: as7341_write_byte(0x08, 0x50);
  9076     0791  3050               	movlw	80
  9077     0792  00F5               	movwf	as7341_write_byte@value
  9078     0793  3008               	movlw	8
  9079     0794  3189  2197  3187   	fcall	_as7341_write_byte
  9080     0797                     l4631:
  9081                           
  9082                           ;as7341_model.c: 154: as7341_write_byte(0x09, 0x10);
  9083     0797  3010               	movlw	16
  9084     0798  00F5               	movwf	as7341_write_byte@value
  9085     0799  3009               	movlw	9
  9086     079A  3189  2197  3187   	fcall	_as7341_write_byte
  9087     079D                     l4633:
  9088                           
  9089                           ;as7341_model.c: 156: as7341_write_byte(0x0A, 0x03);
  9090     079D  3003               	movlw	3
  9091     079E  00F5               	movwf	as7341_write_byte@value
  9092     079F  300A               	movlw	10
  9093     07A0  3189  2197  3187   	fcall	_as7341_write_byte
  9094     07A3                     l4635:
  9095                           
  9096                           ;as7341_model.c: 157: as7341_write_byte(0x0B, 0x00);
  9097     07A3  01F5               	clrf	as7341_write_byte@value
  9098     07A4  300B               	movlw	11
  9099     07A5  3189  2197  3187   	fcall	_as7341_write_byte
  9100     07A8                     l4637:
  9101                           
  9102                           ;as7341_model.c: 158: as7341_write_byte(0x0C, 0x00);
  9103     07A8  01F5               	clrf	as7341_write_byte@value
  9104     07A9  300C               	movlw	12
  9105     07AA  3189  2197  3187   	fcall	_as7341_write_byte
  9106     07AD                     l4639:
  9107                           
  9108                           ;as7341_model.c: 159: as7341_write_byte(0x0D, 0x00);
  9109     07AD  01F5               	clrf	as7341_write_byte@value
  9110     07AE  300D               	movlw	13
  9111     07AF  3189  2197  3187   	fcall	_as7341_write_byte
  9112     07B2                     l4641:
  9113                           
  9114                           ;as7341_model.c: 160: as7341_write_byte(0x0E, 0x24);
  9115     07B2  3024               	movlw	36
  9116     07B3  00F5               	movwf	as7341_write_byte@value
  9117     07B4  300E               	movlw	14
  9118     07B5  3189  2197  3187   	fcall	_as7341_write_byte
  9119     07B8                     l4643:
  9120                           
  9121                           ;as7341_model.c: 162: as7341_write_byte(0x0F, 0x00);
  9122     07B8  01F5               	clrf	as7341_write_byte@value
  9123     07B9  300F               	movlw	15
  9124     07BA  3189  2197  3187   	fcall	_as7341_write_byte
  9125     07BD                     l4645:
  9126                           
  9127                           ;as7341_model.c: 163: as7341_write_byte(0x10, 0x00);
  9128     07BD  01F5               	clrf	as7341_write_byte@value
  9129     07BE  3010               	movlw	16
  9130     07BF  3189  2197  3187   	fcall	_as7341_write_byte
  9131     07C2                     l4647:
  9132                           
  9133                           ;as7341_model.c: 164: as7341_write_byte(0x11, 0x50);
  9134     07C2  3050               	movlw	80
  9135     07C3  00F5               	movwf	as7341_write_byte@value
  9136     07C4  3011               	movlw	17
  9137     07C5  3189  2197  3187   	fcall	_as7341_write_byte
  9138     07C8                     l4649:
  9139                           
  9140                           ;as7341_model.c: 165: as7341_write_byte(0x12, 0x00);
  9141     07C8  01F5               	clrf	as7341_write_byte@value
  9142     07C9  3012               	movlw	18
  9143     07CA  3189  2197  3187   	fcall	_as7341_write_byte
  9144     07CD                     l4651:
  9145                           
  9146                           ;as7341_model.c: 166: as7341_write_byte(0x13, 0x06);
  9147     07CD  3006               	movlw	6
  9148     07CE  00F5               	movwf	as7341_write_byte@value
  9149     07CF  3013               	movlw	19
  9150     07D0  3189  2197  3187   	fcall	_as7341_write_byte
  9151     07D3                     l4653:
  9152                           
  9153                           ;as7341_model.c: 167: I2C_Stop();
  9154     07D3  3189  21AE  3187   	fcall	_I2C_Stop
  9155     07D6                     l533:
  9156     07D6  0008               	return
  9157     07D7                     __end_of_set_F5F8ClearNIR:
  9158                           
  9159                           	psect	text23
  9160     0F87                     __ptext23:	
  9161 ;; *************** function _set_F1F4ClearNIR *****************
  9162 ;; Defined at:
  9163 ;;		line 111 in file "as7341_model.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;		None
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0, pclath, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;Total ram usage:        0 bytes
  9182 ;; Hardware stack levels used: 1
  9183 ;; Hardware stack levels required when called: 4
  9184 ;; This function calls:
  9185 ;;		_I2C_Start
  9186 ;;		_I2C_Stop
  9187 ;;		_I2C_Write
  9188 ;;		_as7341_write_byte
  9189 ;; This function is called by:
  9190 ;;		_as7341_start_measurement
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194     0F87                     _set_F1F4ClearNIR:	
  9195                           ;psect for function _set_F1F4ClearNIR
  9196                           
  9197     0F87                     l4563:	
  9198                           ;incstack = 0
  9199                           ; Regs used in _set_F1F4ClearNIR: [wreg+status,2+status,0+pclath+cstack]
  9200                           
  9201                           
  9202                           ;as7341_model.c: 112: I2C_Start();
  9203     0F87  3189  2154  318F   	fcall	_I2C_Start
  9204     0F8A                     l4565:
  9205                           
  9206                           ;as7341_model.c: 113: I2C_Write(0x39 << 1);
  9207     0F8A  3072               	movlw	114
  9208     0F8B  318A  222F  318F   	fcall	_I2C_Write
  9209     0F8E                     l4567:
  9210                           
  9211                           ;as7341_model.c: 114: as7341_write_byte(0x00, 0x30);
  9212     0F8E  3030               	movlw	48
  9213     0F8F  00F5               	movwf	as7341_write_byte@value
  9214     0F90  3000               	movlw	0
  9215     0F91  3189  2197  318F   	fcall	_as7341_write_byte
  9216     0F94                     l4569:
  9217                           
  9218                           ;as7341_model.c: 115: as7341_write_byte(0x01, 0x01);
  9219     0F94  01F5               	clrf	as7341_write_byte@value
  9220     0F95  0AF5               	incf	as7341_write_byte@value,f
  9221     0F96  3001               	movlw	1
  9222     0F97  3189  2197  318F   	fcall	_as7341_write_byte
  9223     0F9A                     l4571:
  9224                           
  9225                           ;as7341_model.c: 116: as7341_write_byte(0x02, 0x00);
  9226     0F9A  01F5               	clrf	as7341_write_byte@value
  9227     0F9B  3002               	movlw	2
  9228     0F9C  3189  2197  318F   	fcall	_as7341_write_byte
  9229     0F9F                     l4573:
  9230                           
  9231                           ;as7341_model.c: 117: as7341_write_byte(0x03, 0x00);
  9232     0F9F  01F5               	clrf	as7341_write_byte@value
  9233     0FA0  3003               	movlw	3
  9234     0FA1  3189  2197  318F   	fcall	_as7341_write_byte
  9235     0FA4                     l4575:
  9236                           
  9237                           ;as7341_model.c: 118: as7341_write_byte(0x04, 0x00);
  9238     0FA4  01F5               	clrf	as7341_write_byte@value
  9239     0FA5  3004               	movlw	4
  9240     0FA6  3189  2197  318F   	fcall	_as7341_write_byte
  9241     0FA9                     l4577:
  9242                           
  9243                           ;as7341_model.c: 120: as7341_write_byte(0x05, 0x42);
  9244     0FA9  3042               	movlw	66
  9245     0FAA  00F5               	movwf	as7341_write_byte@value
  9246     0FAB  3005               	movlw	5
  9247     0FAC  3189  2197  318F   	fcall	_as7341_write_byte
  9248     0FAF                     l4579:
  9249                           
  9250                           ;as7341_model.c: 121: as7341_write_byte(0x06, 0x00);
  9251     0FAF  01F5               	clrf	as7341_write_byte@value
  9252     0FB0  3006               	movlw	6
  9253     0FB1  3189  2197  318F   	fcall	_as7341_write_byte
  9254     0FB4                     l4581:
  9255                           
  9256                           ;as7341_model.c: 122: as7341_write_byte(0x07, 0x00);
  9257     0FB4  01F5               	clrf	as7341_write_byte@value
  9258     0FB5  3007               	movlw	7
  9259     0FB6  3189  2197  318F   	fcall	_as7341_write_byte
  9260     0FB9                     l4583:
  9261                           
  9262                           ;as7341_model.c: 123: as7341_write_byte(0x08, 0x50);
  9263     0FB9  3050               	movlw	80
  9264     0FBA  00F5               	movwf	as7341_write_byte@value
  9265     0FBB  3008               	movlw	8
  9266     0FBC  3189  2197  318F   	fcall	_as7341_write_byte
  9267     0FBF                     l4585:
  9268                           
  9269                           ;as7341_model.c: 124: as7341_write_byte(0x09, 0x00);
  9270     0FBF  01F5               	clrf	as7341_write_byte@value
  9271     0FC0  3009               	movlw	9
  9272     0FC1  3189  2197  318F   	fcall	_as7341_write_byte
  9273     0FC4                     l4587:
  9274                           
  9275                           ;as7341_model.c: 126: as7341_write_byte(0x0A, 0x00);
  9276     0FC4  01F5               	clrf	as7341_write_byte@value
  9277     0FC5  300A               	movlw	10
  9278     0FC6  3189  2197  318F   	fcall	_as7341_write_byte
  9279     0FC9                     l4589:
  9280                           
  9281                           ;as7341_model.c: 127: as7341_write_byte(0x0B, 0x00);
  9282     0FC9  01F5               	clrf	as7341_write_byte@value
  9283     0FCA  300B               	movlw	11
  9284     0FCB  3189  2197  318F   	fcall	_as7341_write_byte
  9285     0FCE                     l4591:
  9286                           
  9287                           ;as7341_model.c: 128: as7341_write_byte(0x0C, 0x20);
  9288     0FCE  3020               	movlw	32
  9289     0FCF  00F5               	movwf	as7341_write_byte@value
  9290     0FD0  300C               	movlw	12
  9291     0FD1  3189  2197  318F   	fcall	_as7341_write_byte
  9292     0FD4                     l4593:
  9293                           
  9294                           ;as7341_model.c: 129: as7341_write_byte(0x0D, 0x04);
  9295     0FD4  3004               	movlw	4
  9296     0FD5  00F5               	movwf	as7341_write_byte@value
  9297     0FD6  300D               	movlw	13
  9298     0FD7  3189  2197  318F   	fcall	_as7341_write_byte
  9299     0FDA                     l4595:
  9300                           
  9301                           ;as7341_model.c: 130: as7341_write_byte(0x0E, 0x00);
  9302     0FDA  01F5               	clrf	as7341_write_byte@value
  9303     0FDB  300E               	movlw	14
  9304     0FDC  3189  2197  318F   	fcall	_as7341_write_byte
  9305     0FDF                     l4597:
  9306                           
  9307                           ;as7341_model.c: 132: as7341_write_byte(0x0F, 0x30);
  9308     0FDF  3030               	movlw	48
  9309     0FE0  00F5               	movwf	as7341_write_byte@value
  9310     0FE1  300F               	movlw	15
  9311     0FE2  3189  2197  318F   	fcall	_as7341_write_byte
  9312     0FE5                     l4599:
  9313                           
  9314                           ;as7341_model.c: 133: as7341_write_byte(0x10, 0x01);
  9315     0FE5  01F5               	clrf	as7341_write_byte@value
  9316     0FE6  0AF5               	incf	as7341_write_byte@value,f
  9317     0FE7  3010               	movlw	16
  9318     0FE8  3189  2197  318F   	fcall	_as7341_write_byte
  9319     0FEB                     l4601:
  9320                           
  9321                           ;as7341_model.c: 134: as7341_write_byte(0x11, 0x50);
  9322     0FEB  3050               	movlw	80
  9323     0FEC  00F5               	movwf	as7341_write_byte@value
  9324     0FED  3011               	movlw	17
  9325     0FEE  3189  2197  318F   	fcall	_as7341_write_byte
  9326     0FF1                     l4603:
  9327                           
  9328                           ;as7341_model.c: 135: as7341_write_byte(0x12, 0x00);
  9329     0FF1  01F5               	clrf	as7341_write_byte@value
  9330     0FF2  3012               	movlw	18
  9331     0FF3  3189  2197  318F   	fcall	_as7341_write_byte
  9332     0FF6                     l4605:
  9333                           
  9334                           ;as7341_model.c: 136: as7341_write_byte(0x13, 0x06);
  9335     0FF6  3006               	movlw	6
  9336     0FF7  00F5               	movwf	as7341_write_byte@value
  9337     0FF8  3013               	movlw	19
  9338     0FF9  3189  2197  318F   	fcall	_as7341_write_byte
  9339     0FFC                     l4607:
  9340                           
  9341                           ;as7341_model.c: 138: I2C_Stop();
  9342     0FFC  3189  21AE  318F   	fcall	_I2C_Stop
  9343     0FFF                     l530:
  9344     0FFF  0008               	return
  9345     1000                     __end_of_set_F1F4ClearNIR:
  9346                           
  9347                           	psect	text24
  9348     0997                     __ptext24:	
  9349 ;; *************** function _as7341_write_byte *****************
  9350 ;; Defined at:
  9351 ;;		line 169 in file "as7341_model.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;  reg             1    wreg     unsigned char 
  9354 ;;  value           1    5[COMMON] unsigned char 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  reg             1    0[BANK0 ] unsigned char 
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  1    wreg      void 
  9359 ;; Registers used:
  9360 ;;		wreg, status,2, status,0, pclath, cstack
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;Total ram usage:        2 bytes
  9371 ;; Hardware stack levels used: 1
  9372 ;; Hardware stack levels required when called: 3
  9373 ;; This function calls:
  9374 ;;		_I2C_Write
  9375 ;; This function is called by:
  9376 ;;		_set_F1F4ClearNIR
  9377 ;;		_set_F5F8ClearNIR
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381     0997                     _as7341_write_byte:	
  9382                           ;psect for function _as7341_write_byte
  9383                           
  9384                           
  9385                           ;incstack = 0
  9386                           ; Regs used in _as7341_write_byte: [wreg+status,2+status,0+pclath+cstack]
  9387                           ;as7341_write_byte@reg stored from wreg
  9388     0997  0140               	movlb	0	; select bank0
  9389     0998  00A0               	movwf	as7341_write_byte@reg
  9390     0999                     l4413:
  9391                           
  9392                           ;as7341_model.c: 170: I2C_Write(reg);
  9393     0999  0820               	movf	as7341_write_byte@reg,w
  9394     099A  318A  222F  3189   	fcall	_I2C_Write
  9395                           
  9396                           ;as7341_model.c: 171: I2C_Write(value);
  9397     099D  0875               	movf	as7341_write_byte@value,w
  9398     099E  318A  222F  3189   	fcall	_I2C_Write
  9399     09A1                     l536:
  9400     09A1  0008               	return
  9401     09A2                     __end_of_as7341_write_byte:
  9402                           
  9403                           	psect	text25
  9404     0BDD                     __ptext25:	
  9405 ;; *************** function _enable_sp_en *****************
  9406 ;; Defined at:
  9407 ;;		line 58 in file "as7341_model.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  state           1    wreg     unsigned char 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  state           1    4[BANK0 ] unsigned char 
  9412 ;;  regVal          1    7[BANK0 ] unsigned char 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      void 
  9415 ;; Registers used:
  9416 ;;		wreg, status,2, status,0, pclath, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9425 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9426 ;;Total ram usage:        6 bytes
  9427 ;; Hardware stack levels used: 1
  9428 ;; Hardware stack levels required when called: 5
  9429 ;; This function calls:
  9430 ;;		_as7341_i2c_read
  9431 ;;		_as7341_i2c_write
  9432 ;; This function is called by:
  9433 ;;		_as7341_start_measurement
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437     0BDD                     _enable_sp_en:	
  9438                           ;psect for function _enable_sp_en
  9439                           
  9440                           
  9441                           ;incstack = 0
  9442                           ; Regs used in _enable_sp_en: [wreg+status,2+status,0+pclath+cstack]
  9443                           ;enable_sp_en@state stored from wreg
  9444     0BDD  0140               	movlb	0	; select bank0
  9445     0BDE  00A4               	movwf	enable_sp_en@state
  9446     0BDF                     l4527:
  9447                           
  9448                           ;as7341_model.c: 59: uint8_t regVal = as7341_i2c_read(0x80);
  9449     0BDF  3080               	movlw	128
  9450     0BE0  318B  2358  318B   	fcall	_as7341_i2c_read
  9451     0BE3  0140               	movlb	0	; select bank0
  9452     0BE4  00A7               	movwf	enable_sp_en@regVal
  9453     0BE5                     l4529:
  9454                           
  9455                           ;as7341_model.c: 60: as7341_i2c_write(0x80, (state ? (regVal | (1<<1)) : regVal & (~(1<<
      +                          1))));
  9456     0BE5  0824               	movf	enable_sp_en@state,w
  9457     0BE6  1D03               	btfss	3,2
  9458     0BE7  2BE9               	goto	u3241
  9459     0BE8  2BEA               	goto	u3240
  9460     0BE9                     u3241:
  9461     0BE9  2BF3               	goto	l4533
  9462     0BEA                     u3240:
  9463     0BEA                     l4531:
  9464     0BEA  0827               	movf	enable_sp_en@regVal,w
  9465     0BEB  39FD               	andlw	253
  9466     0BEC  00A2               	movwf	??_enable_sp_en
  9467     0BED  01A3               	clrf	??_enable_sp_en+1
  9468     0BEE  0822               	movf	??_enable_sp_en,w
  9469     0BEF  00A5               	movwf	_enable_sp_en$1194
  9470     0BF0  0823               	movf	??_enable_sp_en+1,w
  9471     0BF1  00A6               	movwf	_enable_sp_en$1194+1
  9472     0BF2  2BF8               	goto	l4535
  9473     0BF3                     l4533:
  9474     0BF3  3002               	movlw	2
  9475     0BF4  0427               	iorwf	enable_sp_en@regVal,w
  9476     0BF5  00A5               	movwf	_enable_sp_en$1194
  9477     0BF6  3000               	movlw	0
  9478     0BF7  00A6               	movwf	_enable_sp_en$1194+1
  9479     0BF8                     l4535:
  9480     0BF8  0825               	movf	_enable_sp_en$1194,w
  9481     0BF9  00F5               	movwf	as7341_i2c_write@value
  9482     0BFA  3080               	movlw	128
  9483     0BFB  318B  2379  318B   	fcall	_as7341_i2c_write
  9484     0BFE                     l506:
  9485     0BFE  0008               	return
  9486     0BFF                     __end_of_enable_sp_en:
  9487                           
  9488                           	psect	text26
  9489     0AA5                     __ptext26:	
  9490 ;; *************** function _enable_smux *****************
  9491 ;; Defined at:
  9492 ;;		line 67 in file "as7341_model.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  state           1    wreg     unsigned char 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  state           1    2[BANK0 ] unsigned char 
  9497 ;;  regVal          1    3[BANK0 ] unsigned char 
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  1    wreg      void 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0, pclath, cstack
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;Total ram usage:        2 bytes
  9512 ;; Hardware stack levels used: 1
  9513 ;; Hardware stack levels required when called: 5
  9514 ;; This function calls:
  9515 ;;		_as7341_i2c_read
  9516 ;;		_as7341_i2c_write
  9517 ;; This function is called by:
  9518 ;;		_as7341_start_measurement
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522     0AA5                     _enable_smux:	
  9523                           ;psect for function _enable_smux
  9524                           
  9525                           
  9526                           ;incstack = 0
  9527                           ; Regs used in _enable_smux: [wreg+status,2+status,0+pclath+cstack]
  9528                           ;enable_smux@state stored from wreg
  9529     0AA5  0140               	movlb	0	; select bank0
  9530     0AA6  00A2               	movwf	enable_smux@state
  9531     0AA7                     l4537:
  9532                           
  9533                           ;as7341_model.c: 68: uint8_t regVal = as7341_i2c_read(0x80);
  9534     0AA7  3080               	movlw	128
  9535     0AA8  318B  2358  318A   	fcall	_as7341_i2c_read
  9536     0AAB  0140               	movlb	0	; select bank0
  9537     0AAC  00A3               	movwf	enable_smux@regVal
  9538     0AAD                     l4539:
  9539                           
  9540                           ;as7341_model.c: 69: if(state == 1) {
  9541     0AAD  0322               	decf	enable_smux@state,w
  9542     0AAE  1D03               	btfss	3,2
  9543     0AAF  2AB1               	goto	u3251
  9544     0AB0  2AB2               	goto	u3250
  9545     0AB1                     u3251:
  9546     0AB1  2AB6               	goto	l4543
  9547     0AB2                     u3250:
  9548     0AB2                     l4541:
  9549                           
  9550                           ;as7341_model.c: 70: regVal = regVal | (1<<4);
  9551     0AB2  0823               	movf	enable_smux@regVal,w
  9552     0AB3  3810               	iorlw	16
  9553     0AB4  00A3               	movwf	enable_smux@regVal
  9554                           
  9555                           ;as7341_model.c: 71: } else {
  9556     0AB5  2AB9               	goto	l4545
  9557     0AB6                     l4543:
  9558                           
  9559                           ;as7341_model.c: 72: regVal = regVal & (~(1<<4));
  9560     0AB6  0823               	movf	enable_smux@regVal,w
  9561     0AB7  39EF               	andlw	239
  9562     0AB8  00A3               	movwf	enable_smux@regVal
  9563     0AB9                     l4545:
  9564                           
  9565                           ;as7341_model.c: 73: };;as7341_model.c: 74: as7341_i2c_write(0x80, regVal);
  9566     0AB9  0823               	movf	enable_smux@regVal,w
  9567     0ABA  00F5               	movwf	as7341_i2c_write@value
  9568     0ABB  3080               	movlw	128
  9569     0ABC  318B  2379  318A   	fcall	_as7341_i2c_write
  9570     0ABF                     l511:
  9571     0ABF  0008               	return
  9572     0AC0                     __end_of_enable_smux:
  9573                           
  9574                           	psect	text27
  9575     0944                     __ptext27:	
  9576 ;; *************** function _as7341_smux_cmd_config *****************
  9577 ;; Defined at:
  9578 ;;		line 289 in file "as7341_model.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;		None
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;		None
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0, pclath, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;Total ram usage:        0 bytes
  9597 ;; Hardware stack levels used: 1
  9598 ;; Hardware stack levels required when called: 5
  9599 ;; This function calls:
  9600 ;;		_as7341_i2c_write
  9601 ;; This function is called by:
  9602 ;;		_as7341_start_measurement
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606     0944                     _as7341_smux_cmd_config:	
  9607                           ;psect for function _as7341_smux_cmd_config
  9608                           
  9609     0944                     l4655:	
  9610                           ;incstack = 0
  9611                           ; Regs used in _as7341_smux_cmd_config: [wreg+status,2+status,0+pclath+cstack]
  9612                           
  9613                           
  9614                           ;as7341_model.c: 290: as7341_i2c_write(0xAF, 0x10);
  9615     0944  3010               	movlw	16
  9616     0945  00F5               	movwf	as7341_i2c_write@value
  9617     0946  30AF               	movlw	175
  9618     0947  318B  2379  3189   	fcall	_as7341_i2c_write
  9619     094A                     l569:
  9620     094A  0008               	return
  9621     094B                     __end_of_as7341_smux_cmd_config:
  9622                           
  9623                           	psect	text28
  9624     07D7                     __ptext28:	
  9625 ;; *************** function _as7341_config *****************
  9626 ;; Defined at:
  9627 ;;		line 88 in file "as7341_model.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  mode            1    wreg     enum E215
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;  mode            1    4[BANK0 ] enum E215
  9632 ;;  data            1    5[BANK0 ] unsigned char 
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      void 
  9635 ;; Registers used:
  9636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9643 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9645 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;Total ram usage:        2 bytes
  9647 ;; Hardware stack levels used: 1
  9648 ;; Hardware stack levels required when called: 6
  9649 ;; This function calls:
  9650 ;;		_as7341_i2c_read
  9651 ;;		_as7341_i2c_write
  9652 ;;		_set_bank
  9653 ;; This function is called by:
  9654 ;;		_as7341_start_measurement
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658     07D7                     _as7341_config:	
  9659                           ;psect for function _as7341_config
  9660                           
  9661                           
  9662                           ;incstack = 0
  9663                           ; Regs used in _as7341_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9664                           ;as7341_config@mode stored from wreg
  9665     07D7  0140               	movlb	0	; select bank0
  9666     07D8  00A4               	movwf	as7341_config@mode
  9667     07D9                     l4547:
  9668     07D9                     l4549:
  9669                           
  9670                           ;as7341_model.c: 90: set_bank(1);
  9671     07D9  3001               	movlw	1
  9672     07DA  318A  226F  3187   	fcall	_set_bank
  9673     07DD                     l4551:
  9674                           
  9675                           ;as7341_model.c: 91: data = as7341_i2c_read(0x70);
  9676     07DD  3070               	movlw	112
  9677     07DE  318B  2358  3187   	fcall	_as7341_i2c_read
  9678     07E1  0140               	movlb	0	; select bank0
  9679     07E2  00A5               	movwf	as7341_config@data
  9680                           
  9681                           ;as7341_model.c: 92: switch(mode){
  9682     07E3  2FF2               	goto	l4561
  9683     07E4                     l4553:
  9684                           
  9685                           ;as7341_model.c: 94: data = (data & (~3)) | SPM;
  9686     07E4  0825               	movf	as7341_config@data,w
  9687     07E5  39FC               	andlw	252
  9688     07E6  00A5               	movwf	as7341_config@data
  9689                           
  9690                           ;as7341_model.c: 95: break;
  9691     07E7  2FFD               	goto	l527
  9692     07E8                     l4555:
  9693                           
  9694                           ;as7341_model.c: 97: data = (data & (~3)) | SYNS;
  9695     07E8  0825               	movf	as7341_config@data,w
  9696     07E9  39FC               	andlw	252
  9697     07EA  3801               	iorlw	1
  9698     07EB  00A5               	movwf	as7341_config@data
  9699                           
  9700                           ;as7341_model.c: 98: break;
  9701     07EC  2FFD               	goto	l527
  9702     07ED                     l4557:
  9703                           
  9704                           ;as7341_model.c: 100: data = (data & (~3)) | SYND;
  9705     07ED  0825               	movf	as7341_config@data,w
  9706     07EE  39FC               	andlw	252
  9707     07EF  3803               	iorlw	3
  9708     07F0  00A5               	movwf	as7341_config@data
  9709                           
  9710                           ;as7341_model.c: 101: break;
  9711     07F1  2FFD               	goto	l527
  9712     07F2                     l4561:
  9713     07F2  0824               	movf	as7341_config@mode,w
  9714                           
  9715                           ; Switch size 1, requested type "simple"
  9716                           ; Number of cases is 3, Range of values is 0 to 3
  9717                           ; switch strategies available:
  9718                           ; Name         Instructions Cycles
  9719                           ; simple_byte           10     6 (average)
  9720                           ; direct_byte           14     6 (fixed)
  9721                           ; jumptable            260     6 (fixed)
  9722                           ;	Chosen strategy is simple_byte
  9723     07F3  3A00               	xorlw	0	; case 0
  9724     07F4  1903               	skipnz
  9725     07F5  2FE4               	goto	l4553
  9726     07F6  3A01               	xorlw	1	; case 1
  9727     07F7  1903               	skipnz
  9728     07F8  2FE8               	goto	l4555
  9729     07F9  3A02               	xorlw	2	; case 3
  9730     07FA  1903               	skipnz
  9731     07FB  2FED               	goto	l4557
  9732     07FC  2FFD               	goto	l527
  9733     07FD                     l527:
  9734     07FD  0008               	return
  9735     07FE                     __end_of_as7341_config:
  9736                           
  9737                           	psect	text29
  9738     0B9A                     __ptext29:	
  9739 ;; *************** function _as7341_begin *****************
  9740 ;; Defined at:
  9741 ;;		line 13 in file "as7341_model.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;		None
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;		None
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      void 
  9748 ;; Registers used:
  9749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;Total ram usage:        0 bytes
  9760 ;; Hardware stack levels used: 1
  9761 ;; Hardware stack levels required when called: 7
  9762 ;; This function calls:
  9763 ;;		_as7341_enableLED
  9764 ;;		_as7341_init
  9765 ;;		_printf
  9766 ;;		_set_AGAIN
  9767 ;;		_set_ASTEP
  9768 ;;		_set_ATIME
  9769 ;; This function is called by:
  9770 ;;		_main
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774     0B9A                     _as7341_begin:	
  9775                           ;psect for function _as7341_begin
  9776                           
  9777     0B9A                     l4731:	
  9778                           ;incstack = 0
  9779                           ; Regs used in _as7341_begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9780                           
  9781                           
  9782                           ;as7341_model.c: 14: as7341_init(SPM);
  9783     0B9A  3000               	movlw	0
  9784     0B9B  318C  242A  318B   	fcall	_as7341_init
  9785     0B9E                     l4733:
  9786                           
  9787                           ;as7341_model.c: 16: set_ATIME(100);
  9788     0B9E  3064               	movlw	100
  9789     0B9F  3189  215D  318B   	fcall	_set_ATIME
  9790     0BA2                     l4735:
  9791                           
  9792                           ;as7341_model.c: 17: set_ASTEP(999);
  9793     0BA2  30E7               	movlw	231
  9794     0BA3  0140               	movlb	0	; select bank0
  9795     0BA4  00A2               	movwf	set_ASTEP@value
  9796     0BA5  3003               	movlw	3
  9797     0BA6  00A3               	movwf	set_ASTEP@value+1
  9798     0BA7  318A  228A  318B   	fcall	_set_ASTEP
  9799     0BAA                     l4737:
  9800                           
  9801                           ;as7341_model.c: 18: set_AGAIN(9);
  9802     0BAA  3009               	movlw	9
  9803     0BAB  3189  21D5  318B   	fcall	_set_AGAIN
  9804     0BAE                     l4739:
  9805                           
  9806                           ;as7341_model.c: 26: as7341_enableLED(1);
  9807     0BAE  3001               	movlw	1
  9808     0BAF  318C  245C  318B   	fcall	_as7341_enableLED
  9809                           
  9810                           ;as7341_model.c: 27: printf("as7341_init...\r\n");
  9811     0BB2  3055               	movlw	low (STR_14| (0+32768))
  9812     0BB3  0140               	movlb	0	; select bank0
  9813     0BB4  00AC               	movwf	printf@f
  9814     0BB5  3091               	movlw	high (STR_14| (0+32768))
  9815     0BB6  00AD               	movwf	printf@f+1
  9816     0BB7  3180  2046  318B   	fcall	_printf
  9817     0BBA                     l483:
  9818     0BBA  0008               	return
  9819     0BBB                     __end_of_as7341_begin:
  9820                           
  9821                           	psect	text30
  9822     095D                     __ptext30:	
  9823 ;; *************** function _set_ATIME *****************
  9824 ;; Defined at:
  9825 ;;		line 322 in file "as7341_model.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;  value           1    wreg     unsigned char 
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;  value           1    2[BANK0 ] unsigned char 
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  1    wreg      unsigned char 
  9832 ;; Registers used:
  9833 ;;		wreg, status,2, status,0, pclath, cstack
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;Total ram usage:        1 bytes
  9844 ;; Hardware stack levels used: 1
  9845 ;; Hardware stack levels required when called: 5
  9846 ;; This function calls:
  9847 ;;		_as7341_i2c_write
  9848 ;; This function is called by:
  9849 ;;		_as7341_begin
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853     095D                     _set_ATIME:	
  9854                           ;psect for function _set_ATIME
  9855                           
  9856                           
  9857                           ;incstack = 0
  9858                           ; Regs used in _set_ATIME: [wreg+status,2+status,0+pclath+cstack]
  9859                           ;set_ATIME@value stored from wreg
  9860     095D  0140               	movlb	0	; select bank0
  9861     095E  00A2               	movwf	set_ATIME@value
  9862     095F                     l4509:
  9863                           
  9864                           ;as7341_model.c: 323: as7341_i2c_write(0x81, value);
  9865     095F  0822               	movf	set_ATIME@value,w
  9866     0960  00F5               	movwf	as7341_i2c_write@value
  9867     0961  3081               	movlw	129
  9868     0962  318B  2379  3189   	fcall	_as7341_i2c_write
  9869     0965                     l582:
  9870     0965  0008               	return
  9871     0966                     __end_of_set_ATIME:
  9872                           
  9873                           	psect	text31
  9874     0A8A                     __ptext31:	
  9875 ;; *************** function _set_ASTEP *****************
  9876 ;; Defined at:
  9877 ;;		line 331 in file "as7341_model.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  value           2    2[BANK0 ] unsigned int 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;  low_value       1    6[BANK0 ] unsigned char 
  9882 ;;  high_value      1    5[BANK0 ] unsigned char 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  1    wreg      unsigned char 
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0, pclath, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9892 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;Total ram usage:        5 bytes
  9897 ;; Hardware stack levels used: 1
  9898 ;; Hardware stack levels required when called: 5
  9899 ;; This function calls:
  9900 ;;		_as7341_i2c_write
  9901 ;; This function is called by:
  9902 ;;		_as7341_begin
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906     0A8A                     _set_ASTEP:	
  9907                           ;psect for function _set_ASTEP
  9908                           
  9909     0A8A                     l4511:	
  9910                           ;incstack = 0
  9911                           ; Regs used in _set_ASTEP: [wreg+status,2+status,0+pclath+cstack]
  9912                           
  9913                           
  9914                           ;as7341_model.c: 332: uint8_t high_value, low_value;;as7341_model.c: 333: low_value = va
      +                          lue & 0x00FF;
  9915     0A8A  0140               	movlb	0	; select bank0
  9916     0A8B  0822               	movf	set_ASTEP@value,w
  9917     0A8C  00A6               	movwf	set_ASTEP@low_value
  9918     0A8D                     l4513:
  9919                           
  9920                           ;as7341_model.c: 334: high_value = value >> 8 ;
  9921     0A8D  0823               	movf	set_ASTEP@value+1,w
  9922     0A8E  00A5               	movwf	set_ASTEP@high_value
  9923     0A8F                     l4515:
  9924                           
  9925                           ;as7341_model.c: 335: as7341_i2c_write(0xCA, low_value);
  9926     0A8F  0826               	movf	set_ASTEP@low_value,w
  9927     0A90  00F5               	movwf	as7341_i2c_write@value
  9928     0A91  30CA               	movlw	202
  9929     0A92  318B  2379  318A   	fcall	_as7341_i2c_write
  9930     0A95                     l4517:
  9931                           
  9932                           ;as7341_model.c: 336: as7341_i2c_write(0xCB, high_value);
  9933     0A95  0140               	movlb	0	; select bank0
  9934     0A96  0825               	movf	set_ASTEP@high_value,w
  9935     0A97  00F5               	movwf	as7341_i2c_write@value
  9936     0A98  30CB               	movlw	203
  9937     0A99  318B  2379  318A   	fcall	_as7341_i2c_write
  9938     0A9C                     l4519:
  9939                           
  9940                           ;as7341_model.c: 337: _delay((unsigned long)((500)*(1000000/4000.0)));
  9941     0A9C  30A3               	movlw	163
  9942     0A9D  0140               	movlb	0	; select bank0
  9943     0A9E  00A4               	movwf	??_set_ASTEP
  9944     0A9F  3055               	movlw	85
  9945     0AA0                     u3767:
  9946     0AA0  0B89               	decfsz	9,f
  9947     0AA1  2AA0               	goto	u3767
  9948     0AA2  0BA4               	decfsz	??_set_ASTEP,f
  9949     0AA3  2AA0               	goto	u3767
  9950     0AA4                     l585:
  9951     0AA4  0008               	return
  9952     0AA5                     __end_of_set_ASTEP:
  9953                           
  9954                           	psect	text32
  9955     09D5                     __ptext32:	
  9956 ;; *************** function _set_AGAIN *****************
  9957 ;; Defined at:
  9958 ;;		line 342 in file "as7341_model.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  value           1    wreg     enum E245
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;  value           1    2[BANK0 ] enum E245
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1    wreg      unsigned char 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2, status,0, pclath, cstack
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;Total ram usage:        1 bytes
  9977 ;; Hardware stack levels used: 1
  9978 ;; Hardware stack levels required when called: 5
  9979 ;; This function calls:
  9980 ;;		_as7341_i2c_write
  9981 ;; This function is called by:
  9982 ;;		_as7341_begin
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986     09D5                     _set_AGAIN:	
  9987                           ;psect for function _set_AGAIN
  9988                           
  9989                           
  9990                           ;incstack = 0
  9991                           ; Regs used in _set_AGAIN: [wreg+status,2+status,0+pclath+cstack]
  9992                           ;set_AGAIN@value stored from wreg
  9993     09D5  0140               	movlb	0	; select bank0
  9994     09D6  00A2               	movwf	set_AGAIN@value
  9995     09D7                     l4521:
  9996                           
  9997                           ;as7341_model.c: 343: if(value > 10) value = 10;
  9998     09D7  300B               	movlw	11
  9999     09D8  0222               	subwf	set_AGAIN@value,w
 10000     09D9  1C03               	skipc
 10001     09DA  29DC               	goto	u3231
 10002     09DB  29DD               	goto	u3230
 10003     09DC                     u3231:
 10004     09DC  29DF               	goto	l4525
 10005     09DD                     u3230:
 10006     09DD                     l4523:
 10007     09DD  300A               	movlw	10
 10008     09DE  00A2               	movwf	set_AGAIN@value
 10009     09DF                     l4525:
 10010                           
 10011                           ;as7341_model.c: 344: as7341_i2c_write(0xAA, value);
 10012     09DF  0822               	movf	set_AGAIN@value,w
 10013     09E0  00F5               	movwf	as7341_i2c_write@value
 10014     09E1  30AA               	movlw	170
 10015     09E2  318B  2379  3189   	fcall	_as7341_i2c_write
 10016     09E5                     l589:
 10017     09E5  0008               	return
 10018     09E6                     __end_of_set_AGAIN:
 10019                           
 10020                           	psect	text33
 10021     0C2A                     __ptext33:	
 10022 ;; *************** function _as7341_init *****************
 10023 ;; Defined at:
 10024 ;;		line 33 in file "as7341_model.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;  mode            1    wreg     enum E215
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;  mode            1   58[BANK0 ] enum E215
 10029 ;;  as7341_id       1   59[BANK0 ] unsigned char 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      void 
 10032 ;; Registers used:
 10033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;Total ram usage:        6 bytes
 10044 ;; Hardware stack levels used: 1
 10045 ;; Hardware stack levels required when called: 6
 10046 ;; This function calls:
 10047 ;;		_as7341_i2c_read
 10048 ;;		_as7341_power_enable
 10049 ;;		_printf
 10050 ;; This function is called by:
 10051 ;;		_as7341_begin
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055     0C2A                     _as7341_init:	
 10056                           ;psect for function _as7341_init
 10057                           
 10058                           
 10059                           ;incstack = 0
 10060                           ; Regs used in _as7341_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10061                           ;as7341_init@mode stored from wreg
 10062     0C2A  0140               	movlb	0	; select bank0
 10063     0C2B  00DA               	movwf	as7341_init@mode
 10064     0C2C                     l4497:
 10065                           
 10066                           ;as7341_model.c: 34: uint8_t as7341_id = as7341_i2c_read(0x92);
 10067     0C2C  3092               	movlw	146
 10068     0C2D  318B  2358  318C   	fcall	_as7341_i2c_read
 10069     0C30  0140               	movlb	0	; select bank0
 10070     0C31  00DB               	movwf	as7341_init@as7341_id
 10071     0C32                     l4499:
 10072                           
 10073                           ;as7341_model.c: 35: if(as7341_id != 0) {
 10074     0C32  085B               	movf	as7341_init@as7341_id,w
 10075     0C33  1903               	btfsc	3,2
 10076     0C34  2C36               	goto	u3221
 10077     0C35  2C37               	goto	u3220
 10078     0C36                     u3221:
 10079     0C36  2C3F               	goto	l4503
 10080     0C37                     u3220:
 10081     0C37                     l4501:
 10082                           
 10083                           ;as7341_model.c: 36: printf("Could not find AS7341, Try to find again\r\n");
 10084     0C37  3056               	movlw	low (STR_15| (0+32768))
 10085     0C38  00AC               	movwf	printf@f
 10086     0C39  3090               	movlw	high (STR_15| (0+32768))
 10087     0C3A  00AD               	movwf	printf@f+1
 10088     0C3B  3180  2046  318C   	fcall	_printf
 10089                           
 10090                           ;as7341_model.c: 37: } else {
 10091     0C3E  2C5B               	goto	l488
 10092     0C3F                     l4503:
 10093                           
 10094                           ;as7341_model.c: 38: as7341_power_enable(1);
 10095     0C3F  3001               	movlw	1
 10096     0C40  318D  25A3  318C   	fcall	_as7341_power_enable
 10097     0C43                     l4505:
 10098                           
 10099                           ;as7341_model.c: 39: measurement_mode = mode;
 10100     0C43  0140               	movlb	0	; select bank0
 10101     0C44  085A               	movf	as7341_init@mode,w
 10102     0C45  00E7               	movwf	_measurement_mode
 10103     0C46                     l4507:
 10104                           
 10105                           ;as7341_model.c: 40: printf("AS7341-GPIO: %u, CHIP-ID: %2X \r\n", mode, as7341_id);
 10106     0C46  30C4               	movlw	low (STR_16| (0+32768))
 10107     0C47  00AC               	movwf	printf@f
 10108     0C48  3090               	movlw	high (STR_16| (0+32768))
 10109     0C49  00AD               	movwf	printf@f+1
 10110     0C4A  085A               	movf	as7341_init@mode,w
 10111     0C4B  00D6               	movwf	??_as7341_init
 10112     0C4C  01D7               	clrf	??_as7341_init+1
 10113     0C4D  0856               	movf	??_as7341_init,w
 10114     0C4E  00AE               	movwf	?_printf+2
 10115     0C4F  0857               	movf	??_as7341_init+1,w
 10116     0C50  00AF               	movwf	?_printf+3
 10117     0C51  085B               	movf	as7341_init@as7341_id,w
 10118     0C52  00D8               	movwf	??_as7341_init+2
 10119     0C53  01D9               	clrf	??_as7341_init+3
 10120     0C54  0858               	movf	??_as7341_init+2,w
 10121     0C55  00B0               	movwf	?_printf+4
 10122     0C56  0859               	movf	??_as7341_init+3,w
 10123     0C57  00B1               	movwf	?_printf+5
 10124     0C58  3180  2046  318C   	fcall	_printf
 10125     0C5B                     l488:
 10126     0C5B  0008               	return
 10127     0C5C                     __end_of_as7341_init:
 10128                           
 10129                           	psect	text34
 10130     0DA3                     __ptext34:	
 10131 ;; *************** function _as7341_power_enable *****************
 10132 ;; Defined at:
 10133 ;;		line 48 in file "as7341_model.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  state           1    wreg     unsigned char 
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;  state           1   47[BANK0 ] unsigned char 
 10138 ;;  regVal          1   53[BANK0 ] unsigned char 
 10139 ;;  flag            1   48[BANK0 ] unsigned char 
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  1    wreg      void 
 10142 ;; Registers used:
 10143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10152 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10153 ;;Total ram usage:        9 bytes
 10154 ;; Hardware stack levels used: 1
 10155 ;; Hardware stack levels required when called: 5
 10156 ;; This function calls:
 10157 ;;		_as7341_i2c_read
 10158 ;;		_as7341_i2c_write
 10159 ;;		_printf
 10160 ;; This function is called by:
 10161 ;;		_as7341_init
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165     0DA3                     _as7341_power_enable:	
 10166                           ;psect for function _as7341_power_enable
 10167                           
 10168                           
 10169                           ;incstack = 0
 10170                           ; Regs used in _as7341_power_enable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10171                           ;as7341_power_enable@state stored from wreg
 10172     0DA3  0140               	movlb	0	; select bank0
 10173     0DA4  00CF               	movwf	as7341_power_enable@state
 10174     0DA5                     l4383:
 10175                           
 10176                           ;as7341_model.c: 49: uint8_t regVal = as7341_i2c_read(0x80);
 10177     0DA5  3080               	movlw	128
 10178     0DA6  318B  2358  318D   	fcall	_as7341_i2c_read
 10179     0DA9  0140               	movlb	0	; select bank0
 10180     0DAA  00D5               	movwf	as7341_power_enable@regVal
 10181     0DAB                     l4385:
 10182                           
 10183                           ;as7341_model.c: 50: regVal = (state == 1) ? regVal | (1<<0) : regVal & (~1);
 10184     0DAB  034F               	decf	as7341_power_enable@state,w
 10185     0DAC  1903               	btfsc	3,2
 10186     0DAD  2DAF               	goto	u3101
 10187     0DAE  2DB0               	goto	u3100
 10188     0DAF                     u3101:
 10189     0DAF  2DB9               	goto	l4389
 10190     0DB0                     u3100:
 10191     0DB0                     l4387:
 10192     0DB0  0855               	movf	as7341_power_enable@regVal,w
 10193     0DB1  39FE               	andlw	254
 10194     0DB2  00CD               	movwf	??_as7341_power_enable
 10195     0DB3  01CE               	clrf	??_as7341_power_enable+1
 10196     0DB4  084D               	movf	??_as7341_power_enable,w
 10197     0DB5  00D1               	movwf	_as7341_power_enable$1184
 10198     0DB6  084E               	movf	??_as7341_power_enable+1,w
 10199     0DB7  00D2               	movwf	_as7341_power_enable$1184+1
 10200     0DB8  2DBE               	goto	l494
 10201     0DB9                     l4389:
 10202     0DB9  3001               	movlw	1
 10203     0DBA  0455               	iorwf	as7341_power_enable@regVal,w
 10204     0DBB  00D1               	movwf	_as7341_power_enable$1184
 10205     0DBC  3000               	movlw	0
 10206     0DBD  00D2               	movwf	_as7341_power_enable$1184+1
 10207     0DBE                     l494:
 10208     0DBE  0851               	movf	_as7341_power_enable$1184,w
 10209     0DBF  00D5               	movwf	as7341_power_enable@regVal
 10210     0DC0                     l4391:
 10211                           
 10212                           ;as7341_model.c: 51: uint8_t flag = as7341_i2c_write(0x80, regVal);
 10213     0DC0  0855               	movf	as7341_power_enable@regVal,w
 10214     0DC1  00F5               	movwf	as7341_i2c_write@value
 10215     0DC2  3080               	movlw	128
 10216     0DC3  318B  2379  318D   	fcall	_as7341_i2c_write
 10217     0DC6  0140               	movlb	0	; select bank0
 10218     0DC7  00D0               	movwf	as7341_power_enable@flag
 10219     0DC8                     l4393:
 10220                           
 10221                           ;as7341_model.c: 52: printf("Initialization is %s?\r\n", (flag == 1) ? "complete" : "wro
      +                          ng");
 10222     0DC8  0350               	decf	as7341_power_enable@flag,w
 10223     0DC9  1903               	btfsc	3,2
 10224     0DCA  2DCC               	goto	u3111
 10225     0DCB  2DCD               	goto	u3110
 10226     0DCC                     u3111:
 10227     0DCC  2DD2               	goto	l4397
 10228     0DCD                     u3110:
 10229     0DCD                     l4395:
 10230     0DCD  309C               	movlw	low (STR_19| (0+32768))
 10231     0DCE  00D3               	movwf	_as7341_power_enable$1190
 10232     0DCF  3091               	movlw	high (STR_19| (0+32768))
 10233     0DD0  00D4               	movwf	_as7341_power_enable$1190+1
 10234     0DD1  2DD6               	goto	l4399
 10235     0DD2                     l4397:
 10236     0DD2  307B               	movlw	low (STR_18| (0+32768))
 10237     0DD3  00D3               	movwf	_as7341_power_enable$1190
 10238     0DD4  3091               	movlw	high (STR_18| (0+32768))
 10239     0DD5  00D4               	movwf	_as7341_power_enable$1190+1
 10240     0DD6                     l4399:
 10241     0DD6  3006               	movlw	low (STR_17| (0+32768))
 10242     0DD7  00AC               	movwf	printf@f
 10243     0DD8  3091               	movlw	high (STR_17| (0+32768))
 10244     0DD9  00AD               	movwf	printf@f+1
 10245     0DDA  0854               	movf	_as7341_power_enable$1190+1,w
 10246     0DDB  00AF               	movwf	(low ((?_printf| 0+2))+1)
 10247     0DDC  0853               	movf	_as7341_power_enable$1190,w
 10248     0DDD  00AE               	movwf	low ((?_printf| 0+2))
 10249     0DDE  3180  2046  318D   	fcall	_printf
 10250     0DE1                     l4401:
 10251                           
 10252                           ;as7341_model.c: 53: as7341_i2c_write(0x00, 0x30);
 10253     0DE1  3030               	movlw	48
 10254     0DE2  00F5               	movwf	as7341_i2c_write@value
 10255     0DE3  3000               	movlw	0
 10256     0DE4  318B  2379  318D   	fcall	_as7341_i2c_write
 10257     0DE7                     l499:
 10258     0DE7  0008               	return
 10259     0DE8                     __end_of_as7341_power_enable:
 10260                           
 10261                           	psect	text35
 10262     0046                     __ptext35:	
 10263 ;; *************** function _printf *****************
 10264 ;; Defined at:
 10265 ;;		line 477 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  f               2   12[BANK0 ] PTR const unsigned char 
 10268 ;;		 -> STR_24(33), STR_23(33), STR_22(34), STR_21(43), 
 10269 ;;		 -> STR_20(43), STR_17(24), STR_16(33), STR_15(43), 
 10270 ;;		 -> STR_14(17), STR_13(3), STR_12(3), STR_11(3), 
 10271 ;;		 -> STR_10(4), STR_9(6), STR_8(6), STR_5(152), 
 10272 ;;		 -> STR_4(148), STR_2(9), STR_1(21), 
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;  idx             1   30[BANK0 ] unsigned char 
 10275 ;;  tmpval          4    0        struct .
 10276 ;;  width           2   42[BANK0 ] int 
 10277 ;;  len             2   39[BANK0 ] unsigned int 
 10278 ;;  val             2   36[BANK0 ] unsigned int 
 10279 ;;  cp              2   34[BANK0 ] PTR const unsigned char 
 10280 ;;		 -> STR_25(7), printf@c(1), ?_printf(2), STR_19(6), 
 10281 ;;		 -> STR_18(9), slaveData(64), STR_3(11), 
 10282 ;;  c               1   44[BANK0 ] unsigned char 
 10283 ;;  flag            1   41[BANK0 ] unsigned char 
 10284 ;;  ap              1   38[BANK0 ] PTR void [1]
 10285 ;;		 -> ?_printf(2), 
 10286 ;;  prec            1   33[BANK0 ] char 
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  2   12[BANK0 ] int 
 10289 ;; Registers used:
 10290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10296 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10298 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10299 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;Total ram usage:       33 bytes
 10301 ;; Hardware stack levels used: 1
 10302 ;; Hardware stack levels required when called: 4
 10303 ;; This function calls:
 10304 ;;		___lwdiv
 10305 ;;		___lwmod
 10306 ;;		___wmul
 10307 ;;		_isdigit
 10308 ;;		_putch
 10309 ;; This function is called by:
 10310 ;;		_main
 10311 ;;		_dump_buffer
 10312 ;;		_as7341_begin
 10313 ;;		_as7341_init
 10314 ;;		_as7341_power_enable
 10315 ;;		_as7341_start_measurement
 10316 ;;		_is_as7341_interrupt
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320     0046                     _printf:	
 10321                           ;psect for function _printf
 10322                           
 10323     0046                     l4203:	
 10324                           ;incstack = 0
 10325                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10326                           
 10327                           
 10328                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 10329     0046  302E               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10330     0047  0140               	movlb	0	; select bank0
 10331     0048  00C6               	movwf	printf@ap
 10332                           
 10333                           ;doprnt.c: 553: while((c = *f++)) {
 10334     0049  2A78               	goto	l4343
 10335     004A                     l4205:
 10336                           
 10337                           ;doprnt.c: 555: if(c != '%')
 10338     004A  3025               	movlw	37
 10339     004B  064C               	xorwf	printf@c,w
 10340     004C  1903               	btfsc	3,2
 10341     004D  284F               	goto	u2861
 10342     004E  2850               	goto	u2860
 10343     004F                     u2861:
 10344     004F  2855               	goto	l4209
 10345     0050                     u2860:
 10346     0050                     l4207:
 10347                           
 10348                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
 10349     0050  084C               	movf	printf@c,w
 10350     0051  3189  2138  3180   	fcall	_putch
 10351                           
 10352                           ;doprnt.c: 559: continue;
 10353     0054  2A78               	goto	l4343
 10354     0055                     l4209:
 10355                           
 10356                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 10357     0055  01CA               	clrf	printf@width
 10358     0056  01CB               	clrf	printf@width+1
 10359                           
 10360                           ;doprnt.c: 565: flag = 0;
 10361     0057  01C9               	clrf	printf@flag
 10362     0058  285E               	goto	l4215
 10363     0059                     l850:	
 10364                           ;doprnt.c: 596: case '0':
 10365                           
 10366                           
 10367                           ;doprnt.c: 597: flag |= 0x04;
 10368     0059  1549               	bsf	printf@flag,2
 10369     005A                     l4211:
 10370                           
 10371                           ;doprnt.c: 598: f++;
 10372     005A  3001               	movlw	1
 10373     005B  07AC               	addwf	printf@f,f
 10374     005C  3000               	movlw	0
 10375     005D  3DAD               	addwfc	printf@f+1,f
 10376     005E                     l4215:	
 10377                           ;doprnt.c: 599: continue;
 10378                           
 10379     005E  082C               	movf	printf@f,w
 10380     005F  0084               	movwf	4
 10381     0060  082D               	movf	printf@f+1,w
 10382     0061  0085               	movwf	5
 10383     0062  0800               	movf	0,w	;code access
 10384                           
 10385                           ; Switch size 1, requested type "simple"
 10386                           ; Number of cases is 1, Range of values is 48 to 48
 10387                           ; switch strategies available:
 10388                           ; Name         Instructions Cycles
 10389                           ; simple_byte            4     3 (average)
 10390                           ; direct_byte           11     9 (fixed)
 10391                           ; jumptable            263     9 (fixed)
 10392                           ;	Chosen strategy is simple_byte
 10393     0063  3A30               	xorlw	48	; case 48
 10394     0064  1903               	skipnz
 10395     0065  2859               	goto	l850
 10396     0066  2867               	goto	l4217
 10397     0067                     l4217:
 10398                           
 10399                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 10400     0067  082C               	movf	printf@f,w
 10401     0068  0084               	movwf	4
 10402     0069  082D               	movf	printf@f+1,w
 10403     006A  0085               	movwf	5
 10404     006B  0800               	movf	0,w	;code access
 10405     006C  3189  21E6  3180   	fcall	_isdigit
 10406     006F  1C03               	btfss	3,0
 10407     0070  2872               	goto	u2871
 10408     0071  2873               	goto	u2870
 10409     0072                     u2871:
 10410     0072  2926               	goto	l4271
 10411     0073                     u2870:
 10412     0073                     l4219:
 10413                           
 10414                           ;doprnt.c: 615: width = 0;
 10415     0073  0140               	movlb	0	; select bank0
 10416     0074  01CA               	clrf	printf@width
 10417     0075  01CB               	clrf	printf@width+1
 10418     0076                     l4221:
 10419                           
 10420                           ;doprnt.c: 617: width *= 10;
 10421     0076  300A               	movlw	10
 10422     0077  0140               	movlb	0	; select bank0
 10423     0078  00A0               	movwf	___wmul@multiplier
 10424     0079  3000               	movlw	0
 10425     007A  00A1               	movwf	___wmul@multiplier+1
 10426     007B  084B               	movf	printf@width+1,w
 10427     007C  00A3               	movwf	___wmul@multiplicand+1
 10428     007D  084A               	movf	printf@width,w
 10429     007E  00A2               	movwf	___wmul@multiplicand
 10430     007F  318B  2338  3180   	fcall	___wmul
 10431     0082  0140               	movlb	0	; select bank0
 10432     0083  0821               	movf	?___wmul+1,w
 10433     0084  00CB               	movwf	printf@width+1
 10434     0085  0820               	movf	?___wmul,w
 10435     0086  00CA               	movwf	printf@width
 10436     0087                     l4223:
 10437                           
 10438                           ;doprnt.c: 618: width += *f++ - '0';
 10439     0087  082C               	movf	printf@f,w
 10440     0088  0084               	movwf	4
 10441     0089  082D               	movf	printf@f+1,w
 10442     008A  0085               	movwf	5
 10443     008B  0800               	movf	0,w	;code access
 10444     008C  3ED0               	addlw	208
 10445     008D  00BA               	movwf	??_printf
 10446     008E  30FF               	movlw	255
 10447     008F  1803               	skipnc
 10448     0090  3000               	movlw	0
 10449     0091  00BB               	movwf	??_printf+1
 10450     0092  083A               	movf	??_printf,w
 10451     0093  07CA               	addwf	printf@width,f
 10452     0094  083B               	movf	??_printf+1,w
 10453     0095  3DCB               	addwfc	printf@width+1,f
 10454     0096                     l4225:
 10455     0096  3001               	movlw	1
 10456     0097  07AC               	addwf	printf@f,f
 10457     0098  3000               	movlw	0
 10458     0099  3DAD               	addwfc	printf@f+1,f
 10459     009A                     l4227:
 10460                           
 10461                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 10462     009A  082C               	movf	printf@f,w
 10463     009B  0084               	movwf	4
 10464     009C  082D               	movf	printf@f+1,w
 10465     009D  0085               	movwf	5
 10466     009E  0800               	movf	0,w	;code access
 10467     009F  3189  21E6  3180   	fcall	_isdigit
 10468     00A2  1803               	btfsc	3,0
 10469     00A3  28A5               	goto	u2881
 10470     00A4  28A6               	goto	u2880
 10471     00A5                     u2881:
 10472     00A5  2876               	goto	l4221
 10473     00A6                     u2880:
 10474     00A6  2926               	goto	l4271
 10475     00A7                     l860:	
 10476                           ;doprnt.c: 738: case 'X':
 10477                           
 10478                           
 10479                           ;doprnt.c: 740: flag |= 0x20;
 10480     00A7  16C9               	bsf	printf@flag,5
 10481     00A8                     l861:	
 10482                           ;doprnt.c: 744: case 'x':
 10483                           
 10484                           
 10485                           ;doprnt.c: 747: flag |= 0x80;
 10486     00A8  17C9               	bsf	printf@flag,7
 10487                           
 10488                           ;doprnt.c: 749: break;
 10489     00A9  2947               	goto	l4273
 10490     00AA                     l4229:
 10491                           
 10492                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 10493     00AA  0846               	movf	printf@ap,w
 10494     00AB  0086               	movwf	6
 10495     00AC  0187               	clrf	7
 10496     00AD  3F40               	moviw [0]fsr1
 10497     00AE  00C2               	movwf	printf@cp
 10498     00AF  3F41               	moviw [1]fsr1
 10499     00B0  00C3               	movwf	printf@cp+1
 10500     00B1                     l4231:
 10501     00B1  3002               	movlw	2
 10502     00B2  00BA               	movwf	??_printf
 10503     00B3  083A               	movf	??_printf,w
 10504     00B4  07C6               	addwf	printf@ap,f
 10505     00B5                     l4233:
 10506                           
 10507                           ;doprnt.c: 766: if(!cp)
 10508     00B5  0842               	movf	printf@cp,w
 10509     00B6  0443               	iorwf	printf@cp+1,w
 10510     00B7  1D03               	btfss	3,2
 10511     00B8  28BA               	goto	u2891
 10512     00B9  28BB               	goto	u2890
 10513     00BA                     u2891:
 10514     00BA  28BF               	goto	l4237
 10515     00BB                     u2890:
 10516     00BB                     l4235:
 10517                           
 10518                           ;doprnt.c: 767: cp = "(null)";
 10519     00BB  3095               	movlw	low (STR_25| (0+32768))
 10520     00BC  00C2               	movwf	printf@cp
 10521     00BD  3091               	movlw	high (STR_25| (0+32768))
 10522     00BE  00C3               	movwf	printf@cp+1
 10523     00BF                     l4237:
 10524                           
 10525                           ;doprnt.c: 771: len = 0;
 10526     00BF  01C7               	clrf	printf@len
 10527     00C0  01C8               	clrf	printf@len+1
 10528                           
 10529                           ;doprnt.c: 772: while(cp[len])
 10530     00C1  28C6               	goto	l4241
 10531     00C2                     l4239:
 10532                           
 10533                           ;doprnt.c: 773: len++;
 10534     00C2  3001               	movlw	1
 10535     00C3  07C7               	addwf	printf@len,f
 10536     00C4  3000               	movlw	0
 10537     00C5  3DC8               	addwfc	printf@len+1,f
 10538     00C6                     l4241:
 10539     00C6  0842               	movf	printf@cp,w
 10540     00C7  0747               	addwf	printf@len,w
 10541     00C8  0084               	movwf	4
 10542     00C9  0843               	movf	printf@cp+1,w
 10543     00CA  3D48               	addwfc	printf@len+1,w
 10544     00CB  0085               	movwf	5
 10545     00CC  0012               	moviw fsr0++
 10546     00CD  1D03               	btfss	3,2
 10547     00CE  28D0               	goto	u2901
 10548     00CF  28D1               	goto	u2900
 10549     00D0                     u2901:
 10550     00D0  28C2               	goto	l4239
 10551     00D1                     u2900:
 10552     00D1                     l4243:
 10553                           
 10554                           ;doprnt.c: 783: if(((unsigned)width) > len)
 10555     00D1  084B               	movf	printf@width+1,w
 10556     00D2  0248               	subwf	printf@len+1,w
 10557     00D3  1D03               	skipz
 10558     00D4  28D7               	goto	u2915
 10559     00D5  084A               	movf	printf@width,w
 10560     00D6  0247               	subwf	printf@len,w
 10561     00D7                     u2915:
 10562     00D7  1803               	skipnc
 10563     00D8  28DA               	goto	u2911
 10564     00D9  28DB               	goto	u2910
 10565     00DA                     u2911:
 10566     00DA  28E0               	goto	l4247
 10567     00DB                     u2910:
 10568     00DB                     l4245:
 10569                           
 10570                           ;doprnt.c: 784: width -= len;
 10571     00DB  0847               	movf	printf@len,w
 10572     00DC  02CA               	subwf	printf@width,f
 10573     00DD  0848               	movf	printf@len+1,w
 10574     00DE  3BCB               	subwfb	printf@width+1,f
 10575     00DF  28E7               	goto	l4251
 10576     00E0                     l4247:
 10577                           
 10578                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
 10579     00E0  01CA               	clrf	printf@width
 10580     00E1  01CB               	clrf	printf@width+1
 10581     00E2  28E7               	goto	l4251
 10582     00E3                     l4249:
 10583                           
 10584                           ;doprnt.c: 791: (putch(' ') );
 10585     00E3  3020               	movlw	32
 10586     00E4  3189  2138  3180   	fcall	_putch
 10587     00E7                     l4251:
 10588     00E7  30FF               	movlw	255
 10589     00E8  0140               	movlb	0	; select bank0
 10590     00E9  07CA               	addwf	printf@width,f
 10591     00EA  30FF               	movlw	255
 10592     00EB  3DCB               	addwfc	printf@width+1,f
 10593     00EC  0A4A               	incf	printf@width,w
 10594     00ED  1D03               	skipz
 10595     00EE  28F3               	goto	u2921
 10596     00EF  0A4B               	incf	printf@width+1,w
 10597     00F0  1D03               	btfss	3,2
 10598     00F1  28F3               	goto	u2921
 10599     00F2  28F4               	goto	u2920
 10600     00F3                     u2921:
 10601     00F3  28E3               	goto	l4249
 10602     00F4                     u2920:
 10603     00F4  2902               	goto	l4257
 10604     00F5                     l4253:
 10605                           
 10606                           ;doprnt.c: 794: (putch(*cp++) );
 10607     00F5  0842               	movf	printf@cp,w
 10608     00F6  0084               	movwf	4
 10609     00F7  0843               	movf	printf@cp+1,w
 10610     00F8  0085               	movwf	5
 10611     00F9  0800               	movf	0,w	;code access
 10612     00FA  3189  2138  3180   	fcall	_putch
 10613     00FD                     l4255:
 10614     00FD  3001               	movlw	1
 10615     00FE  0140               	movlb	0	; select bank0
 10616     00FF  07C2               	addwf	printf@cp,f
 10617     0100  3000               	movlw	0
 10618     0101  3DC3               	addwfc	printf@cp+1,f
 10619     0102                     l4257:
 10620     0102  3001               	movlw	1
 10621     0103  02C7               	subwf	printf@len,f
 10622     0104  3000               	movlw	0
 10623     0105  3BC8               	subwfb	printf@len+1,f
 10624     0106  0A47               	incf	printf@len,w
 10625     0107  1D03               	skipz
 10626     0108  290D               	goto	u2931
 10627     0109  0A48               	incf	printf@len+1,w
 10628     010A  1D03               	btfss	3,2
 10629     010B  290D               	goto	u2931
 10630     010C  290E               	goto	u2930
 10631     010D                     u2931:
 10632     010D  28F5               	goto	l4253
 10633     010E                     u2930:
 10634     010E  2A78               	goto	l4343
 10635     010F                     l4259:
 10636                           
 10637                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
 10638     010F  0846               	movf	printf@ap,w
 10639     0110  0086               	movwf	6
 10640     0111  0187               	clrf	7
 10641     0112  0801               	movf	1,w
 10642     0113  00CC               	movwf	printf@c
 10643     0114                     l4261:
 10644     0114  3002               	movlw	2
 10645     0115  00BA               	movwf	??_printf
 10646     0116  083A               	movf	??_printf,w
 10647     0117  07C6               	addwf	printf@ap,f
 10648     0118                     l4263:
 10649                           
 10650                           ;doprnt.c: 831: cp = (char *)&c;
 10651     0118  304C               	movlw	low printf@c
 10652     0119  00C2               	movwf	printf@cp
 10653     011A  3000               	movlw	high printf@c
 10654     011B  00C3               	movwf	printf@cp+1
 10655     011C                     l4265:
 10656                           
 10657                           ;doprnt.c: 832: len = 1;
 10658     011C  3001               	movlw	1
 10659     011D  00C7               	movwf	printf@len
 10660     011E  3000               	movlw	0
 10661     011F  00C8               	movwf	printf@len+1
 10662                           
 10663                           ;doprnt.c: 833: goto dostring;
 10664     0120  28D1               	goto	l4243
 10665     0121                     l4267:
 10666                           
 10667                           ;doprnt.c: 844: flag |= 0xC0;
 10668     0121  30C0               	movlw	192
 10669     0122  00BA               	movwf	??_printf
 10670     0123  083A               	movf	??_printf,w
 10671     0124  04C9               	iorwf	printf@flag,f
 10672                           
 10673                           ;doprnt.c: 845: break;
 10674     0125  2947               	goto	l4273
 10675     0126                     l4271:
 10676     0126  0140               	movlb	0	; select bank0
 10677     0127  082D               	movf	printf@f+1,w
 10678     0128  00BB               	movwf	??_printf+1
 10679     0129  082C               	movf	printf@f,w
 10680     012A  00BA               	movwf	??_printf
 10681     012B  0AAC               	incf	printf@f,f
 10682     012C  1903               	skipnz
 10683     012D  0AAD               	incf	printf@f+1,f
 10684     012E  083A               	movf	??_printf,w
 10685     012F  0084               	movwf	4
 10686     0130  083B               	movf	??_printf+1,w
 10687     0131  0085               	movwf	5
 10688     0132  0800               	movf	0,w	;code access
 10689     0133  00CC               	movwf	printf@c
 10690                           
 10691                           ; Switch size 1, requested type "simple"
 10692                           ; Number of cases is 6, Range of values is 0 to 120
 10693                           ; switch strategies available:
 10694                           ; Name         Instructions Cycles
 10695                           ; simple_byte           19    10 (average)
 10696                           ; direct_byte          248     6 (fixed)
 10697                           ; jumptable            260     6 (fixed)
 10698                           ;	Chosen strategy is simple_byte
 10699     0134  3A00               	xorlw	0	; case 0
 10700     0135  1903               	skipnz
 10701     0136  2A8B               	goto	l912
 10702     0137  3A58               	xorlw	88	; case 88
 10703     0138  1903               	skipnz
 10704     0139  28A7               	goto	l860
 10705     013A  3A3B               	xorlw	59	; case 99
 10706     013B  1903               	skipnz
 10707     013C  290F               	goto	l4259
 10708     013D  3A10               	xorlw	16	; case 115
 10709     013E  1903               	skipnz
 10710     013F  28AA               	goto	l4229
 10711     0140  3A06               	xorlw	6	; case 117
 10712     0141  1903               	skipnz
 10713     0142  2921               	goto	l4267
 10714     0143  3A0D               	xorlw	13	; case 120
 10715     0144  1903               	skipnz
 10716     0145  28A8               	goto	l861
 10717     0146  2918               	goto	l4263
 10718     0147                     l4273:
 10719                           
 10720                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
 10721     0147  0846               	movf	printf@ap,w
 10722     0148  0086               	movwf	6
 10723     0149  0187               	clrf	7
 10724     014A  3F40               	moviw [0]fsr1
 10725     014B  00C4               	movwf	printf@val
 10726     014C  3F41               	moviw [1]fsr1
 10727     014D  00C5               	movwf	printf@val+1
 10728     014E                     l4275:
 10729     014E  3002               	movlw	2
 10730     014F  00BA               	movwf	??_printf
 10731     0150  083A               	movf	??_printf,w
 10732     0151  07C6               	addwf	printf@ap,f
 10733                           
 10734                           ;doprnt.c: 1313: };doprnt.c: 1320: switch((unsigned char)(flag & (0xC0))) {
 10735     0152  29B1               	goto	l4299
 10736     0153                     l881:	
 10737                           ;doprnt.c: 1328: case 0xC0:
 10738                           
 10739                           
 10740                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10741     0153  01CC               	clrf	printf@c
 10742     0154  0ACC               	incf	printf@c,f
 10743     0155                     l4277:
 10744     0155  3005               	movlw	5
 10745     0156  064C               	xorwf	printf@c,w
 10746     0157  1D03               	btfss	3,2
 10747     0158  295A               	goto	u2941
 10748     0159  295B               	goto	u2940
 10749     015A                     u2941:
 10750     015A  295C               	goto	l4281
 10751     015B                     u2940:
 10752     015B  29BA               	goto	l4301
 10753     015C                     l4281:
 10754                           
 10755                           ;doprnt.c: 1332: if(val < dpowers[c])
 10756     015C  084C               	movf	printf@c,w
 10757     015D  00BA               	movwf	??_printf
 10758     015E  01BB               	clrf	??_printf+1
 10759     015F  35BA               	lslf	??_printf,f
 10760     0160  0DBB               	rlf	??_printf+1,f
 10761     0161  3071               	movlw	low _dpowers
 10762     0162  073A               	addwf	??_printf,w
 10763     0163  0084               	movwf	4
 10764     0164  3011               	movlw	high _dpowers
 10765     0165  3D3B               	addwfc	??_printf+1,w
 10766     0166  3880               	iorlw	128
 10767     0167  0085               	movwf	5
 10768     0168  3F00               	moviw [0]fsr0
 10769     0169  00BC               	movwf	??_printf+2
 10770     016A  3F01               	moviw [1]fsr0
 10771     016B  00BD               	movwf	??_printf+3
 10772     016C  083D               	movf	??_printf+3,w
 10773     016D  0245               	subwf	printf@val+1,w
 10774     016E  1D03               	skipz
 10775     016F  2972               	goto	u2955
 10776     0170  083C               	movf	??_printf+2,w
 10777     0171  0244               	subwf	printf@val,w
 10778     0172                     u2955:
 10779     0172  1803               	skipnc
 10780     0173  2975               	goto	u2951
 10781     0174  2976               	goto	u2950
 10782     0175                     u2951:
 10783     0175  2977               	goto	l4285
 10784     0176                     u2950:
 10785     0176  29BA               	goto	l4301
 10786     0177                     l4285:
 10787     0177  3001               	movlw	1
 10788     0178  00BA               	movwf	??_printf
 10789     0179  083A               	movf	??_printf,w
 10790     017A  07CC               	addwf	printf@c,f
 10791     017B  3005               	movlw	5
 10792     017C  064C               	xorwf	printf@c,w
 10793     017D  1D03               	btfss	3,2
 10794     017E  2980               	goto	u2961
 10795     017F  2981               	goto	u2960
 10796     0180                     u2961:
 10797     0180  295C               	goto	l4281
 10798     0181                     u2960:
 10799     0181  29BA               	goto	l4301
 10800     0182                     l886:	
 10801                           ;doprnt.c: 1340: case 0x80:
 10802                           
 10803                           
 10804                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 10805     0182  01CC               	clrf	printf@c
 10806     0183  0ACC               	incf	printf@c,f
 10807     0184                     l4287:
 10808     0184  3004               	movlw	4
 10809     0185  064C               	xorwf	printf@c,w
 10810     0186  1D03               	btfss	3,2
 10811     0187  2989               	goto	u2971
 10812     0188  298A               	goto	u2970
 10813     0189                     u2971:
 10814     0189  298B               	goto	l4291
 10815     018A                     u2970:
 10816     018A  29BA               	goto	l4301
 10817     018B                     l4291:
 10818                           
 10819                           ;doprnt.c: 1343: if(val < hexpowers[c])
 10820     018B  084C               	movf	printf@c,w
 10821     018C  00BA               	movwf	??_printf
 10822     018D  01BB               	clrf	??_printf+1
 10823     018E  35BA               	lslf	??_printf,f
 10824     018F  0DBB               	rlf	??_printf+1,f
 10825     0190  308D               	movlw	low _hexpowers
 10826     0191  073A               	addwf	??_printf,w
 10827     0192  0084               	movwf	4
 10828     0193  3011               	movlw	high _hexpowers
 10829     0194  3D3B               	addwfc	??_printf+1,w
 10830     0195  3880               	iorlw	128
 10831     0196  0085               	movwf	5
 10832     0197  3F00               	moviw [0]fsr0
 10833     0198  00BC               	movwf	??_printf+2
 10834     0199  3F01               	moviw [1]fsr0
 10835     019A  00BD               	movwf	??_printf+3
 10836     019B  083D               	movf	??_printf+3,w
 10837     019C  0245               	subwf	printf@val+1,w
 10838     019D  1D03               	skipz
 10839     019E  29A1               	goto	u2985
 10840     019F  083C               	movf	??_printf+2,w
 10841     01A0  0244               	subwf	printf@val,w
 10842     01A1                     u2985:
 10843     01A1  1803               	skipnc
 10844     01A2  29A4               	goto	u2981
 10845     01A3  29A5               	goto	u2980
 10846     01A4                     u2981:
 10847     01A4  29A6               	goto	l4295
 10848     01A5                     u2980:
 10849     01A5  29BA               	goto	l4301
 10850     01A6                     l4295:
 10851     01A6  3001               	movlw	1
 10852     01A7  00BA               	movwf	??_printf
 10853     01A8  083A               	movf	??_printf,w
 10854     01A9  07CC               	addwf	printf@c,f
 10855     01AA  3004               	movlw	4
 10856     01AB  064C               	xorwf	printf@c,w
 10857     01AC  1D03               	btfss	3,2
 10858     01AD  29AF               	goto	u2991
 10859     01AE  29B0               	goto	u2990
 10860     01AF                     u2991:
 10861     01AF  298B               	goto	l4291
 10862     01B0                     u2990:
 10863     01B0  29BA               	goto	l4301
 10864     01B1                     l4299:
 10865     01B1  0849               	movf	printf@flag,w
 10866     01B2  39C0               	andlw	192
 10867                           
 10868                           ; Switch size 1, requested type "simple"
 10869                           ; Number of cases is 2, Range of values is 128 to 192
 10870                           ; switch strategies available:
 10871                           ; Name         Instructions Cycles
 10872                           ; simple_byte            7     4 (average)
 10873                           ; direct_byte          139     9 (fixed)
 10874                           ; jumptable            263     9 (fixed)
 10875                           ;	Chosen strategy is simple_byte
 10876     01B3  3A80               	xorlw	128	; case 128
 10877     01B4  1903               	skipnz
 10878     01B5  2982               	goto	l886
 10879     01B6  3A40               	xorlw	64	; case 192
 10880     01B7  1903               	skipnz
 10881     01B8  2953               	goto	l881
 10882     01B9  29BA               	goto	l4301
 10883     01BA                     l4301:
 10884                           
 10885                           ;doprnt.c: 1407: if(width > c)
 10886     01BA  084B               	movf	printf@width+1,w
 10887     01BB  3A80               	xorlw	128
 10888     01BC  3C80               	sublw	128
 10889     01BD  1D03               	skipz
 10890     01BE  29C1               	goto	u3005
 10891     01BF  084A               	movf	printf@width,w
 10892     01C0  024C               	subwf	printf@c,w
 10893     01C1                     u3005:
 10894     01C1  1803               	skipnc
 10895     01C2  29C4               	goto	u3001
 10896     01C3  29C5               	goto	u3000
 10897     01C4                     u3001:
 10898     01C4  29CE               	goto	l4305
 10899     01C5                     u3000:
 10900     01C5                     l4303:
 10901                           
 10902                           ;doprnt.c: 1408: width -= c;
 10903     01C5  0140               	movlb	0	; select bank0
 10904     01C6  084C               	movf	printf@c,w
 10905     01C7  00BA               	movwf	??_printf
 10906     01C8  01BB               	clrf	??_printf+1
 10907     01C9  083A               	movf	??_printf,w
 10908     01CA  02CA               	subwf	printf@width,f
 10909     01CB  083B               	movf	??_printf+1,w
 10910     01CC  3BCB               	subwfb	printf@width+1,f
 10911     01CD  29D1               	goto	l4307
 10912     01CE                     l4305:
 10913                           
 10914                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 10915     01CE  0140               	movlb	0	; select bank0
 10916     01CF  01CA               	clrf	printf@width
 10917     01D0  01CB               	clrf	printf@width+1
 10918     01D1                     l4307:
 10919                           
 10920                           ;doprnt.c: 1413: if(flag & 0x04) {
 10921     01D1  1D49               	btfss	printf@flag,2
 10922     01D2  29D4               	goto	u3011
 10923     01D3  29D5               	goto	u3010
 10924     01D4                     u3011:
 10925     01D4  29EB               	goto	l4315
 10926     01D5                     u3010:
 10927     01D5                     l4309:
 10928                           
 10929                           ;doprnt.c: 1441: if(width)
 10930     01D5  084A               	movf	printf@width,w
 10931     01D6  044B               	iorwf	printf@width+1,w
 10932     01D7  1903               	btfsc	3,2
 10933     01D8  29DA               	goto	u3021
 10934     01D9  29DB               	goto	u3020
 10935     01DA                     u3021:
 10936     01DA  2A00               	goto	l4321
 10937     01DB                     u3020:
 10938     01DB                     l4311:
 10939                           
 10940                           ;doprnt.c: 1443: (putch('0') );
 10941     01DB  3030               	movlw	48
 10942     01DC  3189  2138  3180   	fcall	_putch
 10943     01DF                     l4313:
 10944                           
 10945                           ;doprnt.c: 1444: while(--width);
 10946     01DF  30FF               	movlw	255
 10947     01E0  0140               	movlb	0	; select bank0
 10948     01E1  07CA               	addwf	printf@width,f
 10949     01E2  30FF               	movlw	255
 10950     01E3  3DCB               	addwfc	printf@width+1,f
 10951     01E4  084A               	movf	printf@width,w
 10952     01E5  044B               	iorwf	printf@width+1,w
 10953     01E6  1D03               	btfss	3,2
 10954     01E7  29E9               	goto	u3031
 10955     01E8  29EA               	goto	u3030
 10956     01E9                     u3031:
 10957     01E9  29DB               	goto	l4311
 10958     01EA                     u3030:
 10959     01EA  2A00               	goto	l4321
 10960     01EB                     l4315:
 10961                           
 10962                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 10963     01EB  084A               	movf	printf@width,w
 10964     01EC  044B               	iorwf	printf@width+1,w
 10965     01ED  1903               	btfsc	3,2
 10966     01EE  29F0               	goto	u3041
 10967     01EF  29F1               	goto	u3040
 10968     01F0                     u3041:
 10969     01F0  2A00               	goto	l4321
 10970     01F1                     u3040:
 10971     01F1                     l4317:
 10972                           
 10973                           ;doprnt.c: 1456: (putch(' ') );
 10974     01F1  3020               	movlw	32
 10975     01F2  3189  2138  3180   	fcall	_putch
 10976     01F5                     l4319:
 10977                           
 10978                           ;doprnt.c: 1457: while(--width);
 10979     01F5  30FF               	movlw	255
 10980     01F6  0140               	movlb	0	; select bank0
 10981     01F7  07CA               	addwf	printf@width,f
 10982     01F8  30FF               	movlw	255
 10983     01F9  3DCB               	addwfc	printf@width+1,f
 10984     01FA  084A               	movf	printf@width,w
 10985     01FB  044B               	iorwf	printf@width+1,w
 10986     01FC  1D03               	btfss	3,2
 10987     01FD  29FF               	goto	u3051
 10988     01FE  2A00               	goto	u3050
 10989     01FF                     u3051:
 10990     01FF  29F1               	goto	l4317
 10991     0200                     u3050:
 10992     0200                     l4321:
 10993                           
 10994                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 10995     0200  084C               	movf	printf@c,w
 10996     0201  00C1               	movwf	printf@prec
 10997                           
 10998                           ;doprnt.c: 1500: while(prec--) {
 10999     0202  2A6E               	goto	l4341
 11000     0203                     l4323:
 11001                           
 11002                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 11003     0203  300A               	movlw	10
 11004     0204  00A7               	movwf	___lwmod@divisor
 11005     0205  3000               	movlw	0
 11006     0206  00A8               	movwf	___lwmod@divisor+1
 11007     0207  0841               	movf	printf@prec,w
 11008     0208  00BA               	movwf	??_printf
 11009     0209  01BB               	clrf	??_printf+1
 11010     020A  35BA               	lslf	??_printf,f
 11011     020B  0DBB               	rlf	??_printf+1,f
 11012     020C  3071               	movlw	low _dpowers
 11013     020D  073A               	addwf	??_printf,w
 11014     020E  0084               	movwf	4
 11015     020F  3011               	movlw	high _dpowers
 11016     0210  3D3B               	addwfc	??_printf+1,w
 11017     0211  3880               	iorlw	128
 11018     0212  0085               	movwf	5
 11019     0213  3F00               	moviw [0]fsr0
 11020     0214  00A0               	movwf	___lwdiv@divisor
 11021     0215  3F01               	moviw [1]fsr0
 11022     0216  00A1               	movwf	___lwdiv@divisor+1
 11023     0217  0845               	movf	printf@val+1,w
 11024     0218  00A3               	movwf	___lwdiv@dividend+1
 11025     0219  0844               	movf	printf@val,w
 11026     021A  00A2               	movwf	___lwdiv@dividend
 11027     021B  318D  2566  3180   	fcall	___lwdiv
 11028     021E  0140               	movlb	0	; select bank0
 11029     021F  0821               	movf	?___lwdiv+1,w
 11030     0220  00AA               	movwf	___lwmod@dividend+1
 11031     0221  0820               	movf	?___lwdiv,w
 11032     0222  00A9               	movwf	___lwmod@dividend
 11033     0223  318C  24C4  3180   	fcall	___lwmod
 11034     0226  0140               	movlb	0	; select bank0
 11035     0227  0827               	movf	?___lwmod,w
 11036     0228  3E30               	addlw	48
 11037     0229  00CC               	movwf	printf@c
 11038                           
 11039                           ;doprnt.c: 1517: break;
 11040     022A  2A6A               	goto	l4339
 11041     022B                     l4325:
 11042                           
 11043                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
 11044     022B  0841               	movf	printf@prec,w
 11045     022C  00BA               	movwf	??_printf
 11046     022D  01BB               	clrf	??_printf+1
 11047     022E  35BA               	lslf	??_printf,f
 11048     022F  0DBB               	rlf	??_printf+1,f
 11049     0230  308D               	movlw	low _hexpowers
 11050     0231  073A               	addwf	??_printf,w
 11051     0232  0084               	movwf	4
 11052     0233  3011               	movlw	high _hexpowers
 11053     0234  3D3B               	addwfc	??_printf+1,w
 11054     0235  3880               	iorlw	128
 11055     0236  0085               	movwf	5
 11056     0237  3F00               	moviw [0]fsr0
 11057     0238  00A0               	movwf	___lwdiv@divisor
 11058     0239  3F01               	moviw [1]fsr0
 11059     023A  00A1               	movwf	___lwdiv@divisor+1
 11060     023B  0845               	movf	printf@val+1,w
 11061     023C  00A3               	movwf	___lwdiv@dividend+1
 11062     023D  0844               	movf	printf@val,w
 11063     023E  00A2               	movwf	___lwdiv@dividend
 11064     023F  318D  2566  3180   	fcall	___lwdiv
 11065     0242  0140               	movlb	0	; select bank0
 11066     0243  0820               	movf	?___lwdiv,w
 11067     0244  390F               	andlw	15
 11068     0245  00BE               	movwf	printf@idx
 11069     0246                     l4327:
 11070                           
 11071                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 11072     0246  1AC9               	btfsc	printf@flag,5
 11073     0247  2A49               	goto	u3061
 11074     0248  2A4A               	goto	u3060
 11075     0249                     u3061:
 11076     0249  2A4F               	goto	l4331
 11077     024A                     u3060:
 11078     024A                     l4329:
 11079     024A  3044               	movlw	low (STR_27| (0+32768))
 11080     024B  00BF               	movwf	_printf$1520
 11081     024C  3091               	movlw	high (STR_27| (0+32768))
 11082     024D  00C0               	movwf	_printf$1520+1
 11083     024E  2A53               	goto	l4333
 11084     024F                     l4331:
 11085     024F  3033               	movlw	low (STR_26| (0+32768))
 11086     0250  00BF               	movwf	_printf$1520
 11087     0251  3091               	movlw	high (STR_26| (0+32768))
 11088     0252  00C0               	movwf	_printf$1520+1
 11089     0253                     l4333:
 11090     0253  0840               	movf	_printf$1520+1,w
 11091     0254  00BB               	movwf	??_printf+1
 11092     0255  083F               	movf	_printf$1520,w
 11093     0256  00BA               	movwf	??_printf
 11094     0257  083E               	movf	printf@idx,w
 11095     0258  073A               	addwf	??_printf,w
 11096     0259  0084               	movwf	4
 11097     025A  083B               	movf	??_printf+1,w
 11098     025B  1803               	skipnc
 11099     025C  0A3B               	incf	??_printf+1,w
 11100     025D  0085               	movwf	5
 11101     025E  0800               	movf	0,w	;code access
 11102     025F  00CC               	movwf	printf@c
 11103                           
 11104                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
 11105     0260  2A6A               	goto	l4339
 11106     0261                     l4337:
 11107     0261  0849               	movf	printf@flag,w
 11108     0262  39C0               	andlw	192
 11109                           
 11110                           ; Switch size 1, requested type "simple"
 11111                           ; Number of cases is 2, Range of values is 128 to 192
 11112                           ; switch strategies available:
 11113                           ; Name         Instructions Cycles
 11114                           ; simple_byte            7     4 (average)
 11115                           ; direct_byte          139     9 (fixed)
 11116                           ; jumptable            263     9 (fixed)
 11117                           ;	Chosen strategy is simple_byte
 11118     0263  3A80               	xorlw	128	; case 128
 11119     0264  1903               	skipnz
 11120     0265  2A2B               	goto	l4325
 11121     0266  3A40               	xorlw	64	; case 192
 11122     0267  1903               	skipnz
 11123     0268  2A03               	goto	l4323
 11124     0269  2A6A               	goto	l4339
 11125     026A                     l4339:
 11126                           
 11127                           ;doprnt.c: 1550: (putch(c) );
 11128     026A  084C               	movf	printf@c,w
 11129     026B  3189  2138  3180   	fcall	_putch
 11130     026E                     l4341:
 11131     026E  30FF               	movlw	255
 11132     026F  0140               	movlb	0	; select bank0
 11133     0270  00BA               	movwf	??_printf
 11134     0271  083A               	movf	??_printf,w
 11135     0272  07C1               	addwf	printf@prec,f
 11136     0273  0A41               	incf	printf@prec,w
 11137     0274  1D03               	btfss	3,2
 11138     0275  2A77               	goto	u3071
 11139     0276  2A78               	goto	u3070
 11140     0277                     u3071:
 11141     0277  2A61               	goto	l4337
 11142     0278                     u3070:
 11143     0278                     l4343:
 11144     0278  0140               	movlb	0	; select bank0
 11145     0279  082D               	movf	printf@f+1,w
 11146     027A  00BB               	movwf	??_printf+1
 11147     027B  082C               	movf	printf@f,w
 11148     027C  00BA               	movwf	??_printf
 11149     027D  0AAC               	incf	printf@f,f
 11150     027E  1903               	skipnz
 11151     027F  0AAD               	incf	printf@f+1,f
 11152     0280  083A               	movf	??_printf,w
 11153     0281  0084               	movwf	4
 11154     0282  083B               	movf	??_printf+1,w
 11155     0283  0085               	movwf	5
 11156     0284  0800               	movf	0,w	;code access
 11157     0285  00CC               	movwf	printf@c
 11158     0286  084C               	movf	printf@c,w
 11159     0287  1D03               	btfss	3,2
 11160     0288  2A8A               	goto	u3081
 11161     0289  2A8B               	goto	u3080
 11162     028A                     u3081:
 11163     028A  284A               	goto	l4205
 11164     028B                     u3080:
 11165     028B                     l912:
 11166     028B  0008               	return
 11167     028C                     __end_of_printf:
 11168                           
 11169                           	psect	text36
 11170     0938                     __ptext36:	
 11171 ;; *************** function _putch *****************
 11172 ;; Defined at:
 11173 ;;		line 146 in file "eusart1.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  txData          1    wreg     unsigned char 
 11176 ;; Auto vars:     Size  Location     Type
 11177 ;;  txData          1    5[COMMON] unsigned char 
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  1    wreg      void 
 11180 ;; Registers used:
 11181 ;;		wreg, status,2, status,0, pclath, cstack
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;Total ram usage:        1 bytes
 11192 ;; Hardware stack levels used: 1
 11193 ;; Hardware stack levels required when called: 3
 11194 ;; This function calls:
 11195 ;;		_EUSART1_Write
 11196 ;; This function is called by:
 11197 ;;		_printf
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201     0938                     _putch:	
 11202                           ;psect for function _putch
 11203                           
 11204                           
 11205                           ;incstack = 0
 11206                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 11207                           ;putch@txData stored from wreg
 11208     0938  00F5               	movwf	putch@txData
 11209     0939                     l2879:
 11210                           
 11211                           ;eusart1.c: 148: EUSART1_Write(txData);
 11212     0939  0875               	movf	putch@txData,w
 11213     093A  3189  2183  3189   	fcall	_EUSART1_Write
 11214     093D                     l380:
 11215     093D  0008               	return
 11216     093E                     __end_of_putch:
 11217                           
 11218                           	psect	text37
 11219     0983                     __ptext37:	
 11220 ;; *************** function _EUSART1_Write *****************
 11221 ;; Defined at:
 11222 ;;		line 132 in file "eusart1.c"
 11223 ;; Parameters:    Size  Location     Type
 11224 ;;  txData          1    wreg     unsigned char 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  txData          1    4[COMMON] unsigned char 
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  1    wreg      void 
 11229 ;; Registers used:
 11230 ;;		wreg
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11240 ;;Total ram usage:        1 bytes
 11241 ;; Hardware stack levels used: 1
 11242 ;; Hardware stack levels required when called: 2
 11243 ;; This function calls:
 11244 ;;		Nothing
 11245 ;; This function is called by:
 11246 ;;		_putch
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250     0983                     _EUSART1_Write:	
 11251                           ;psect for function _EUSART1_Write
 11252                           
 11253                           
 11254                           ;incstack = 0
 11255                           ; Regs used in _EUSART1_Write: [wreg]
 11256                           ;EUSART1_Write@txData stored from wreg
 11257     0983  00F4               	movwf	EUSART1_Write@txData
 11258     0984                     l2845:
 11259     0984                     l371:	
 11260                           ;eusart1.c: 135: {
 11261                           
 11262     0984  014E               	movlb	14	; select bank14
 11263     0985  1E0F               	btfss	15,4	;volatile
 11264     0986  2988               	goto	u1361
 11265     0987  2989               	goto	u1360
 11266     0988                     u1361:
 11267     0988  2984               	goto	l371
 11268     0989                     u1360:
 11269     0989                     l2847:
 11270                           
 11271                           ;eusart1.c: 136: };eusart1.c: 138: TX1REG = txData;
 11272     0989  0874               	movf	EUSART1_Write@txData,w
 11273     098A  0142               	movlb	2	; select bank2
 11274     098B  009A               	movwf	26	;volatile
 11275     098C                     l374:
 11276     098C  0008               	return
 11277     098D                     __end_of_EUSART1_Write:
 11278                           
 11279                           	psect	text38
 11280     09E6                     __ptext38:	
 11281 ;; *************** function _isdigit *****************
 11282 ;; Defined at:
 11283 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isdigit.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;  c               1    wreg     unsigned char 
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;  c               1    5[COMMON] unsigned char 
 11288 ;; Return value:  Size  Location     Type
 11289 ;;		None               void
 11290 ;; Registers used:
 11291 ;;		wreg, status,2, status,0
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11301 ;;Total ram usage:        2 bytes
 11302 ;; Hardware stack levels used: 1
 11303 ;; Hardware stack levels required when called: 2
 11304 ;; This function calls:
 11305 ;;		Nothing
 11306 ;; This function is called by:
 11307 ;;		_printf
 11308 ;;		_strtol
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312     09E6                     _isdigit:	
 11313                           ;psect for function _isdigit
 11314                           
 11315                           
 11316                           ;incstack = 0
 11317                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11318                           ;isdigit@c stored from wreg
 11319     09E6  00F5               	movwf	isdigit@c
 11320     09E7                     l2881:
 11321     09E7  01F4               	clrf	_isdigit$1803
 11322     09E8                     l2883:
 11323     09E8  303A               	movlw	58
 11324     09E9  0275               	subwf	isdigit@c,w
 11325     09EA  1803               	skipnc
 11326     09EB  29ED               	goto	u1451
 11327     09EC  29EE               	goto	u1450
 11328     09ED                     u1451:
 11329     09ED  29F6               	goto	l2889
 11330     09EE                     u1450:
 11331     09EE                     l2885:
 11332     09EE  3030               	movlw	48
 11333     09EF  0275               	subwf	isdigit@c,w
 11334     09F0  1C03               	skipc
 11335     09F1  29F3               	goto	u1461
 11336     09F2  29F4               	goto	u1460
 11337     09F3                     u1461:
 11338     09F3  29F6               	goto	l2889
 11339     09F4                     u1460:
 11340     09F4                     l2887:
 11341     09F4  01F4               	clrf	_isdigit$1803
 11342     09F5  0AF4               	incf	_isdigit$1803,f
 11343     09F6                     l2889:
 11344     09F6  0C74               	rrf	_isdigit$1803,w
 11345     09F7                     l1369:
 11346     09F7  0008               	return
 11347     09F8                     __end_of_isdigit:
 11348                           
 11349                           	psect	text39
 11350     0B38                     __ptext39:	
 11351 ;; *************** function ___wmul *****************
 11352 ;; Defined at:
 11353 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul16.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11356 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;  product         2    4[COMMON] unsigned int 
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  2    0[BANK0 ] unsigned int 
 11361 ;; Registers used:
 11362 ;;		wreg, status,2, status,0
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11368 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11371 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11372 ;;Total ram usage:        6 bytes
 11373 ;; Hardware stack levels used: 1
 11374 ;; Hardware stack levels required when called: 2
 11375 ;; This function calls:
 11376 ;;		Nothing
 11377 ;; This function is called by:
 11378 ;;		_printf
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382     0B38                     ___wmul:	
 11383                           ;psect for function ___wmul
 11384                           
 11385     0B38                     l4163:	
 11386                           ;incstack = 0
 11387                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11388                           
 11389     0B38  01F4               	clrf	___wmul@product
 11390     0B39  01F5               	clrf	___wmul@product+1
 11391     0B3A                     l4165:
 11392     0B3A  0140               	movlb	0	; select bank0
 11393     0B3B  1C20               	btfss	___wmul@multiplier,0
 11394     0B3C  2B3E               	goto	u2751
 11395     0B3D  2B3F               	goto	u2750
 11396     0B3E                     u2751:
 11397     0B3E  2B43               	goto	l916
 11398     0B3F                     u2750:
 11399     0B3F                     l4167:
 11400     0B3F  0822               	movf	___wmul@multiplicand,w
 11401     0B40  07F4               	addwf	___wmul@product,f
 11402     0B41  0823               	movf	___wmul@multiplicand+1,w
 11403     0B42  3DF5               	addwfc	___wmul@product+1,f
 11404     0B43                     l916:
 11405     0B43  3001               	movlw	1
 11406     0B44                     u2765:
 11407     0B44  35A2               	lslf	___wmul@multiplicand,f
 11408     0B45  0DA3               	rlf	___wmul@multiplicand+1,f
 11409     0B46  0B89               	decfsz	9,f
 11410     0B47  2B44               	goto	u2765
 11411     0B48                     l4169:
 11412     0B48  3001               	movlw	1
 11413     0B49                     u2775:
 11414     0B49  36A1               	lsrf	___wmul@multiplier+1,f
 11415     0B4A  0CA0               	rrf	___wmul@multiplier,f
 11416     0B4B  0B89               	decfsz	9,f
 11417     0B4C  2B49               	goto	u2775
 11418     0B4D                     l4171:
 11419     0B4D  0820               	movf	___wmul@multiplier,w
 11420     0B4E  0421               	iorwf	___wmul@multiplier+1,w
 11421     0B4F  1D03               	btfss	3,2
 11422     0B50  2B52               	goto	u2781
 11423     0B51  2B53               	goto	u2780
 11424     0B52                     u2781:
 11425     0B52  2B3A               	goto	l4165
 11426     0B53                     u2780:
 11427     0B53                     l4173:
 11428     0B53  0875               	movf	___wmul@product+1,w
 11429     0B54  00A1               	movwf	?___wmul+1
 11430     0B55  0874               	movf	___wmul@product,w
 11431     0B56  00A0               	movwf	?___wmul
 11432     0B57                     l918:
 11433     0B57  0008               	return
 11434     0B58                     __end_of___wmul:
 11435                           
 11436                           	psect	text40
 11437     0CC4                     __ptext40:	
 11438 ;; *************** function ___lwmod *****************
 11439 ;; Defined at:
 11440 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/lwmod.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  divisor         2    7[BANK0 ] unsigned int 
 11443 ;;  dividend        2    9[BANK0 ] unsigned int 
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;  counter         1   11[BANK0 ] unsigned char 
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  2    7[BANK0 ] unsigned int 
 11448 ;; Registers used:
 11449 ;;		wreg, status,2, status,0
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/0
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;Total ram usage:        6 bytes
 11460 ;; Hardware stack levels used: 1
 11461 ;; Hardware stack levels required when called: 2
 11462 ;; This function calls:
 11463 ;;		Nothing
 11464 ;; This function is called by:
 11465 ;;		_printf
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469     0CC4                     ___lwmod:	
 11470                           ;psect for function ___lwmod
 11471                           
 11472     0CC4                     l2933:	
 11473                           ;incstack = 0
 11474                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11475                           
 11476     0CC4  0140               	movlb	0	; select bank0
 11477     0CC5  0827               	movf	___lwmod@divisor,w
 11478     0CC6  0428               	iorwf	___lwmod@divisor+1,w
 11479     0CC7  1903               	btfsc	3,2
 11480     0CC8  2CCA               	goto	u1581
 11481     0CC9  2CCB               	goto	u1580
 11482     0CCA                     u1581:
 11483     0CCA  2CF4               	goto	l2951
 11484     0CCB                     u1580:
 11485     0CCB                     l2935:
 11486     0CCB  01AB               	clrf	___lwmod@counter
 11487     0CCC  0AAB               	incf	___lwmod@counter,f
 11488     0CCD  2CD7               	goto	l2941
 11489     0CCE                     l2937:
 11490     0CCE  3001               	movlw	1
 11491     0CCF                     u1595:
 11492     0CCF  35A7               	lslf	___lwmod@divisor,f
 11493     0CD0  0DA8               	rlf	___lwmod@divisor+1,f
 11494     0CD1  0B89               	decfsz	9,f
 11495     0CD2  2CCF               	goto	u1595
 11496     0CD3                     l2939:
 11497     0CD3  3001               	movlw	1
 11498     0CD4  00F5               	movwf	??___lwmod
 11499     0CD5  0875               	movf	??___lwmod,w
 11500     0CD6  07AB               	addwf	___lwmod@counter,f
 11501     0CD7                     l2941:
 11502     0CD7  1FA8               	btfss	___lwmod@divisor+1,7
 11503     0CD8  2CDA               	goto	u1601
 11504     0CD9  2CDB               	goto	u1600
 11505     0CDA                     u1601:
 11506     0CDA  2CCE               	goto	l2937
 11507     0CDB                     u1600:
 11508     0CDB                     l2943:
 11509     0CDB  0828               	movf	___lwmod@divisor+1,w
 11510     0CDC  022A               	subwf	___lwmod@dividend+1,w
 11511     0CDD  1D03               	skipz
 11512     0CDE  2CE1               	goto	u1615
 11513     0CDF  0827               	movf	___lwmod@divisor,w
 11514     0CE0  0229               	subwf	___lwmod@dividend,w
 11515     0CE1                     u1615:
 11516     0CE1  1C03               	skipc
 11517     0CE2  2CE4               	goto	u1611
 11518     0CE3  2CE5               	goto	u1610
 11519     0CE4                     u1611:
 11520     0CE4  2CE9               	goto	l2947
 11521     0CE5                     u1610:
 11522     0CE5                     l2945:
 11523     0CE5  0827               	movf	___lwmod@divisor,w
 11524     0CE6  02A9               	subwf	___lwmod@dividend,f
 11525     0CE7  0828               	movf	___lwmod@divisor+1,w
 11526     0CE8  3BAA               	subwfb	___lwmod@dividend+1,f
 11527     0CE9                     l2947:
 11528     0CE9  3001               	movlw	1
 11529     0CEA                     u1625:
 11530     0CEA  36A8               	lsrf	___lwmod@divisor+1,f
 11531     0CEB  0CA7               	rrf	___lwmod@divisor,f
 11532     0CEC  0B89               	decfsz	9,f
 11533     0CED  2CEA               	goto	u1625
 11534     0CEE                     l2949:
 11535     0CEE  3001               	movlw	1
 11536     0CEF  02AB               	subwf	___lwmod@counter,f
 11537     0CF0  1D03               	btfss	3,2
 11538     0CF1  2CF3               	goto	u1631
 11539     0CF2  2CF4               	goto	u1630
 11540     0CF3                     u1631:
 11541     0CF3  2CDB               	goto	l2943
 11542     0CF4                     u1630:
 11543     0CF4                     l2951:
 11544     0CF4  082A               	movf	___lwmod@dividend+1,w
 11545     0CF5  00A8               	movwf	?___lwmod+1
 11546     0CF6  0829               	movf	___lwmod@dividend,w
 11547     0CF7  00A7               	movwf	?___lwmod
 11548     0CF8                     l1198:
 11549     0CF8  0008               	return
 11550     0CF9                     __end_of___lwmod:
 11551                           
 11552                           	psect	text41
 11553     0D66                     __ptext41:	
 11554 ;; *************** function ___lwdiv *****************
 11555 ;; Defined at:
 11556 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/lwdiv.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;  divisor         2    0[BANK0 ] unsigned int 
 11559 ;;  dividend        2    2[BANK0 ] unsigned int 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  quotient        2    5[BANK0 ] unsigned int 
 11562 ;;  counter         1    4[BANK0 ] unsigned char 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  2    0[BANK0 ] unsigned int 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;Total ram usage:        8 bytes
 11577 ;; Hardware stack levels used: 1
 11578 ;; Hardware stack levels required when called: 2
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_printf
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586     0D66                     ___lwdiv:	
 11587                           ;psect for function ___lwdiv
 11588                           
 11589     0D66                     l4177:	
 11590                           ;incstack = 0
 11591                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11592                           
 11593     0D66  0140               	movlb	0	; select bank0
 11594     0D67  01A5               	clrf	___lwdiv@quotient
 11595     0D68  01A6               	clrf	___lwdiv@quotient+1
 11596     0D69                     l4179:
 11597     0D69  0820               	movf	___lwdiv@divisor,w
 11598     0D6A  0421               	iorwf	___lwdiv@divisor+1,w
 11599     0D6B  1903               	btfsc	3,2
 11600     0D6C  2D6E               	goto	u2791
 11601     0D6D  2D6F               	goto	u2790
 11602     0D6E                     u2791:
 11603     0D6E  2D9E               	goto	l4199
 11604     0D6F                     u2790:
 11605     0D6F                     l4181:
 11606     0D6F  01A4               	clrf	___lwdiv@counter
 11607     0D70  0AA4               	incf	___lwdiv@counter,f
 11608     0D71  2D7B               	goto	l4187
 11609     0D72                     l4183:
 11610     0D72  3001               	movlw	1
 11611     0D73                     u2805:
 11612     0D73  35A0               	lslf	___lwdiv@divisor,f
 11613     0D74  0DA1               	rlf	___lwdiv@divisor+1,f
 11614     0D75  0B89               	decfsz	9,f
 11615     0D76  2D73               	goto	u2805
 11616     0D77                     l4185:
 11617     0D77  3001               	movlw	1
 11618     0D78  00F4               	movwf	??___lwdiv
 11619     0D79  0874               	movf	??___lwdiv,w
 11620     0D7A  07A4               	addwf	___lwdiv@counter,f
 11621     0D7B                     l4187:
 11622     0D7B  1FA1               	btfss	___lwdiv@divisor+1,7
 11623     0D7C  2D7E               	goto	u2811
 11624     0D7D  2D7F               	goto	u2810
 11625     0D7E                     u2811:
 11626     0D7E  2D72               	goto	l4183
 11627     0D7F                     u2810:
 11628     0D7F                     l4189:
 11629     0D7F  3001               	movlw	1
 11630     0D80                     u2825:
 11631     0D80  35A5               	lslf	___lwdiv@quotient,f
 11632     0D81  0DA6               	rlf	___lwdiv@quotient+1,f
 11633     0D82  0B89               	decfsz	9,f
 11634     0D83  2D80               	goto	u2825
 11635     0D84  0821               	movf	___lwdiv@divisor+1,w
 11636     0D85  0223               	subwf	___lwdiv@dividend+1,w
 11637     0D86  1D03               	skipz
 11638     0D87  2D8A               	goto	u2835
 11639     0D88  0820               	movf	___lwdiv@divisor,w
 11640     0D89  0222               	subwf	___lwdiv@dividend,w
 11641     0D8A                     u2835:
 11642     0D8A  1C03               	skipc
 11643     0D8B  2D8D               	goto	u2831
 11644     0D8C  2D8E               	goto	u2830
 11645     0D8D                     u2831:
 11646     0D8D  2D93               	goto	l4195
 11647     0D8E                     u2830:
 11648     0D8E                     l4191:
 11649     0D8E  0820               	movf	___lwdiv@divisor,w
 11650     0D8F  02A2               	subwf	___lwdiv@dividend,f
 11651     0D90  0821               	movf	___lwdiv@divisor+1,w
 11652     0D91  3BA3               	subwfb	___lwdiv@dividend+1,f
 11653     0D92                     l4193:
 11654     0D92  1425               	bsf	___lwdiv@quotient,0
 11655     0D93                     l4195:
 11656     0D93  3001               	movlw	1
 11657     0D94                     u2845:
 11658     0D94  36A1               	lsrf	___lwdiv@divisor+1,f
 11659     0D95  0CA0               	rrf	___lwdiv@divisor,f
 11660     0D96  0B89               	decfsz	9,f
 11661     0D97  2D94               	goto	u2845
 11662     0D98                     l4197:
 11663     0D98  3001               	movlw	1
 11664     0D99  02A4               	subwf	___lwdiv@counter,f
 11665     0D9A  1D03               	btfss	3,2
 11666     0D9B  2D9D               	goto	u2851
 11667     0D9C  2D9E               	goto	u2850
 11668     0D9D                     u2851:
 11669     0D9D  2D7F               	goto	l4189
 11670     0D9E                     u2850:
 11671     0D9E                     l4199:
 11672     0D9E  0826               	movf	___lwdiv@quotient+1,w
 11673     0D9F  00A1               	movwf	?___lwdiv+1
 11674     0DA0  0825               	movf	___lwdiv@quotient,w
 11675     0DA1  00A0               	movwf	?___lwdiv
 11676     0DA2                     l1188:
 11677     0DA2  0008               	return
 11678     0DA3                     __end_of___lwdiv:
 11679                           
 11680                           	psect	text42
 11681     0C5C                     __ptext42:	
 11682 ;; *************** function _as7341_enableLED *****************
 11683 ;; Defined at:
 11684 ;;		line 366 in file "as7341_model.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;  state           1    wreg     unsigned char 
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;  state           1    4[BANK0 ] unsigned char 
 11689 ;;  data            1    6[BANK0 ] unsigned char 
 11690 ;;  data1           1    5[BANK0 ] unsigned char 
 11691 ;; Return value:  Size  Location     Type
 11692 ;;                  1    wreg      unsigned char 
 11693 ;; Registers used:
 11694 ;;		wreg, status,2, status,0, pclath, cstack
 11695 ;; Tracked objects:
 11696 ;;		On entry : 0/0
 11697 ;;		On exit  : 0/0
 11698 ;;		Unchanged: 0/0
 11699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11704 ;;Total ram usage:        3 bytes
 11705 ;; Hardware stack levels used: 1
 11706 ;; Hardware stack levels required when called: 6
 11707 ;; This function calls:
 11708 ;;		_as7341_i2c_read
 11709 ;;		_as7341_i2c_write
 11710 ;;		_set_bank
 11711 ;; This function is called by:
 11712 ;;		_main
 11713 ;;		_as7341_begin
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717     0C5C                     _as7341_enableLED:	
 11718                           ;psect for function _as7341_enableLED
 11719                           
 11720                           
 11721                           ;incstack = 0
 11722                           ; Regs used in _as7341_enableLED: [wreg+status,2+status,0+pclath+cstack]
 11723                           ;as7341_enableLED@state stored from wreg
 11724     0C5C  0140               	movlb	0	; select bank0
 11725     0C5D  00A4               	movwf	as7341_enableLED@state
 11726     0C5E                     l4427:
 11727                           
 11728                           ;as7341_model.c: 368: uint8_t data1 = 0;
 11729     0C5E  01A5               	clrf	as7341_enableLED@data1
 11730     0C5F                     l4429:
 11731                           
 11732                           ;as7341_model.c: 369: set_bank(1);
 11733     0C5F  3001               	movlw	1
 11734     0C60  318A  226F  318C   	fcall	_set_bank
 11735     0C63                     l4431:
 11736                           
 11737                           ;as7341_model.c: 370: data = as7341_i2c_read(0x70);
 11738     0C63  3070               	movlw	112
 11739     0C64  318B  2358  318C   	fcall	_as7341_i2c_read
 11740     0C67  0140               	movlb	0	; select bank0
 11741     0C68  00A6               	movwf	as7341_enableLED@data
 11742     0C69                     l4433:
 11743                           
 11744                           ;as7341_model.c: 371: data1 = as7341_i2c_read(0x74);
 11745     0C69  3074               	movlw	116
 11746     0C6A  318B  2358  318C   	fcall	_as7341_i2c_read
 11747     0C6D  0140               	movlb	0	; select bank0
 11748     0C6E  00A5               	movwf	as7341_enableLED@data1
 11749     0C6F                     l4435:
 11750                           
 11751                           ;as7341_model.c: 372: if(state == 1) {
 11752     0C6F  0324               	decf	as7341_enableLED@state,w
 11753     0C70  1D03               	btfss	3,2
 11754     0C71  2C73               	goto	u3151
 11755     0C72  2C74               	goto	u3150
 11756     0C73                     u3151:
 11757     0C73  2C78               	goto	l4439
 11758     0C74                     u3150:
 11759     0C74                     l4437:
 11760                           
 11761                           ;as7341_model.c: 373: data = data | 0x08;
 11762     0C74  0826               	movf	as7341_enableLED@data,w
 11763     0C75  3808               	iorlw	8
 11764     0C76  00A6               	movwf	as7341_enableLED@data
 11765                           
 11766                           ;as7341_model.c: 374: } else {
 11767     0C77  2C84               	goto	l4443
 11768     0C78                     l4439:
 11769                           
 11770                           ;as7341_model.c: 375: data = data & 0xF7;
 11771     0C78  0826               	movf	as7341_enableLED@data,w
 11772     0C79  39F7               	andlw	247
 11773     0C7A  00A6               	movwf	as7341_enableLED@data
 11774                           
 11775                           ;as7341_model.c: 376: data1 = data1 & 0x7F;
 11776     0C7B  0825               	movf	as7341_enableLED@data1,w
 11777     0C7C  397F               	andlw	127
 11778     0C7D  00A5               	movwf	as7341_enableLED@data1
 11779     0C7E                     l4441:
 11780                           
 11781                           ;as7341_model.c: 377: as7341_i2c_write(0x74, data1);
 11782     0C7E  0825               	movf	as7341_enableLED@data1,w
 11783     0C7F  00F5               	movwf	as7341_i2c_write@value
 11784     0C80  3074               	movlw	116
 11785     0C81  318B  2379  318C   	fcall	_as7341_i2c_write
 11786     0C84                     l4443:
 11787                           
 11788                           ;as7341_model.c: 378: };as7341_model.c: 379: as7341_i2c_write(0x70, data);
 11789     0C84  0140               	movlb	0	; select bank0
 11790     0C85  0826               	movf	as7341_enableLED@data,w
 11791     0C86  00F5               	movwf	as7341_i2c_write@value
 11792     0C87  3070               	movlw	112
 11793     0C88  318B  2379  318C   	fcall	_as7341_i2c_write
 11794     0C8B                     l4445:
 11795                           
 11796                           ;as7341_model.c: 380: set_bank(0);
 11797     0C8B  3000               	movlw	0
 11798     0C8C  318A  226F  318C   	fcall	_set_bank
 11799     0C8F                     l597:
 11800     0C8F  0008               	return
 11801     0C90                     __end_of_as7341_enableLED:
 11802                           
 11803                           	psect	text43
 11804     0A6F                     __ptext43:	
 11805 ;; *************** function _set_bank *****************
 11806 ;; Defined at:
 11807 ;;		line 312 in file "as7341_model.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;  state           1    wreg     unsigned char 
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;  state           1    2[BANK0 ] unsigned char 
 11812 ;;  regVal          1    3[BANK0 ] unsigned char 
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  1    wreg      unsigned char 
 11815 ;; Registers used:
 11816 ;;		wreg, status,2, status,0, pclath, cstack
 11817 ;; Tracked objects:
 11818 ;;		On entry : 0/0
 11819 ;;		On exit  : 0/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;Total ram usage:        2 bytes
 11827 ;; Hardware stack levels used: 1
 11828 ;; Hardware stack levels required when called: 5
 11829 ;; This function calls:
 11830 ;;		_as7341_i2c_read
 11831 ;;		_as7341_i2c_write
 11832 ;; This function is called by:
 11833 ;;		_as7341_config
 11834 ;;		_as7341_enableLED
 11835 ;;		_control_LED
 11836 ;;		_set_LED_current
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840     0A6F                     _set_bank:	
 11841                           ;psect for function _set_bank
 11842                           
 11843                           
 11844                           ;incstack = 0
 11845                           ; Regs used in _set_bank: [wreg+status,2+status,0+pclath+cstack]
 11846                           ;set_bank@state stored from wreg
 11847     0A6F  0140               	movlb	0	; select bank0
 11848     0A70  00A2               	movwf	set_bank@state
 11849     0A71                     l4403:
 11850                           
 11851                           ;as7341_model.c: 313: uint8_t regVal = as7341_i2c_read(0xA9);
 11852     0A71  30A9               	movlw	169
 11853     0A72  318B  2358  318A   	fcall	_as7341_i2c_read
 11854     0A75  0140               	movlb	0	; select bank0
 11855     0A76  00A3               	movwf	set_bank@regVal
 11856     0A77                     l4405:
 11857                           
 11858                           ;as7341_model.c: 314: if(state == 1) {
 11859     0A77  0322               	decf	set_bank@state,w
 11860     0A78  1D03               	btfss	3,2
 11861     0A79  2A7B               	goto	u3121
 11862     0A7A  2A7C               	goto	u3120
 11863     0A7B                     u3121:
 11864     0A7B  2A80               	goto	l4409
 11865     0A7C                     u3120:
 11866     0A7C                     l4407:
 11867                           
 11868                           ;as7341_model.c: 315: regVal = regVal | (1<<4);
 11869     0A7C  0823               	movf	set_bank@regVal,w
 11870     0A7D  3810               	iorlw	16
 11871     0A7E  00A3               	movwf	set_bank@regVal
 11872                           
 11873                           ;as7341_model.c: 316: } else {
 11874     0A7F  2A83               	goto	l4411
 11875     0A80                     l4409:
 11876                           
 11877                           ;as7341_model.c: 317: regVal = regVal & (~(1<<4));
 11878     0A80  0823               	movf	set_bank@regVal,w
 11879     0A81  39EF               	andlw	239
 11880     0A82  00A3               	movwf	set_bank@regVal
 11881     0A83                     l4411:
 11882                           
 11883                           ;as7341_model.c: 318: };;as7341_model.c: 319: as7341_i2c_write(0xA9, regVal);
 11884     0A83  0823               	movf	set_bank@regVal,w
 11885     0A84  00F5               	movwf	as7341_i2c_write@value
 11886     0A85  30A9               	movlw	169
 11887     0A86  318B  2379  318A   	fcall	_as7341_i2c_write
 11888     0A89                     l579:
 11889     0A89  0008               	return
 11890     0A8A                     __end_of_set_bank:
 11891                           
 11892                           	psect	text44
 11893     0B79                     __ptext44:	
 11894 ;; *************** function _as7341_i2c_write *****************
 11895 ;; Defined at:
 11896 ;;		line 608 in file "as7341_model.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;  reg             1    wreg     unsigned char 
 11899 ;;  value           1    5[COMMON] unsigned char 
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;  reg             1    0[BANK0 ] unsigned char 
 11902 ;;  data            1    1[BANK0 ] unsigned char 
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  1    wreg      unsigned char 
 11905 ;; Registers used:
 11906 ;;		wreg, status,2, status,0, pclath, cstack
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11912 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11915 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11916 ;;Total ram usage:        3 bytes
 11917 ;; Hardware stack levels used: 1
 11918 ;; Hardware stack levels required when called: 4
 11919 ;; This function calls:
 11920 ;;		_I2C_Start
 11921 ;;		_I2C_Stop
 11922 ;;		_I2C_Write
 11923 ;; This function is called by:
 11924 ;;		_as7341_power_enable
 11925 ;;		_enable_sp_en
 11926 ;;		_enable_smux
 11927 ;;		_as7341_config
 11928 ;;		_as7341_start_measurement
 11929 ;;		_as7341_smux_cmd_config
 11930 ;;		_set_GPIO_mode
 11931 ;;		_set_bank
 11932 ;;		_set_ATIME
 11933 ;;		_set_ASTEP
 11934 ;;		_set_AGAIN
 11935 ;;		_as7341_enableLED
 11936 ;;		_control_LED
 11937 ;;		_enable_flicker_detection
 11938 ;;		_flicker_detection_config
 11939 ;;		_set_LED_current
 11940 ;;		_clear_interrupt
 11941 ;;		_enable_spectral_interrupt
 11942 ;;		_set_interrupt_persistence
 11943 ;;		_set_interrupt_threshold
 11944 ;;		_set_spectral_threshold_channel
 11945 ;;		_syns_interrupt_sel
 11946 ;;		_disabledAll
 11947 ;;		_enableSMUX_Interrupt
 11948 ;;		_enable_Special_Interrupt
 11949 ;;		_set_integration_mode
 11950 ;;		_enable_WITME
 11951 ;;		_set_WTIME
 11952 ;;		_INT_MODE
 11953 ;;		_set_APERS
 11954 ;;		_flicker_detect_config
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958     0B79                     _as7341_i2c_write:	
 11959                           ;psect for function _as7341_i2c_write
 11960                           
 11961                           
 11962                           ;incstack = 0
 11963                           ; Regs used in _as7341_i2c_write: [wreg+status,2+status,0+pclath+cstack]
 11964                           ;as7341_i2c_write@reg stored from wreg
 11965     0B79  0140               	movlb	0	; select bank0
 11966     0B7A  00A0               	movwf	as7341_i2c_write@reg
 11967     0B7B                     l4361:
 11968                           
 11969                           ;as7341_model.c: 609: uint8_t data;;as7341_model.c: 610: I2C_Start();
 11970     0B7B  3189  2154  318B   	fcall	_I2C_Start
 11971     0B7E                     l4363:
 11972                           
 11973                           ;as7341_model.c: 611: I2C_Write(0x39 << 1);
 11974     0B7E  3072               	movlw	114
 11975     0B7F  318A  222F  318B   	fcall	_I2C_Write
 11976     0B82                     l4365:
 11977                           
 11978                           ;as7341_model.c: 612: I2C_Write(reg);
 11979     0B82  0140               	movlb	0	; select bank0
 11980     0B83  0820               	movf	as7341_i2c_write@reg,w
 11981     0B84  318A  222F  318B   	fcall	_I2C_Write
 11982     0B87                     l4367:
 11983                           
 11984                           ;as7341_model.c: 613: data = I2C_Write(value);
 11985     0B87  0875               	movf	as7341_i2c_write@value,w
 11986     0B88  318A  222F  318B   	fcall	_I2C_Write
 11987     0B8B  0140               	movlb	0	; select bank0
 11988     0B8C  00A1               	movwf	as7341_i2c_write@data
 11989     0B8D                     l4369:
 11990                           
 11991                           ;as7341_model.c: 614: I2C_Stop();
 11992     0B8D  3189  21AE  318B   	fcall	_I2C_Stop
 11993     0B90                     l4371:
 11994                           
 11995                           ;as7341_model.c: 615: if(data == 1) {
 11996     0B90  0140               	movlb	0	; select bank0
 11997     0B91  0321               	decf	as7341_i2c_write@data,w
 11998     0B92  1D03               	btfss	3,2
 11999     0B93  2B95               	goto	u3091
 12000     0B94  2B96               	goto	u3090
 12001     0B95                     u3091:
 12002     0B95  2B98               	goto	l4379
 12003     0B96                     u3090:
 12004     0B96                     l4373:
 12005                           
 12006                           ;as7341_model.c: 616: return 1;
 12007     0B96  3001               	movlw	1
 12008     0B97  2B99               	goto	l675
 12009     0B98                     l4379:
 12010                           
 12011                           ;as7341_model.c: 618: return 0;
 12012     0B98  3000               	movlw	0
 12013     0B99                     l675:
 12014     0B99  0008               	return
 12015     0B9A                     __end_of_as7341_i2c_write:
 12016                           
 12017                           	psect	text45
 12018     0B58                     __ptext45:	
 12019 ;; *************** function _as7341_i2c_read *****************
 12020 ;; Defined at:
 12021 ;;		line 622 in file "as7341_model.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  reg             1    wreg     unsigned char 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  reg             1    0[BANK0 ] unsigned char 
 12026 ;;  buf             1    1[BANK0 ] unsigned char 
 12027 ;; Return value:  Size  Location     Type
 12028 ;;                  1    wreg      unsigned char 
 12029 ;; Registers used:
 12030 ;;		wreg, status,2, status,0, pclath, cstack
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;Total ram usage:        2 bytes
 12041 ;; Hardware stack levels used: 1
 12042 ;; Hardware stack levels required when called: 4
 12043 ;; This function calls:
 12044 ;;		_I2C_Read
 12045 ;;		_I2C_Start
 12046 ;;		_I2C_Stop
 12047 ;;		_I2C_Write
 12048 ;; This function is called by:
 12049 ;;		_as7341_init
 12050 ;;		_as7341_power_enable
 12051 ;;		_enable_sp_en
 12052 ;;		_enable_smux
 12053 ;;		_as7341_config
 12054 ;;		_as7341_start_measurement
 12055 ;;		_get_channel_data
 12056 ;;		_set_GPIO_mode
 12057 ;;		_set_bank
 12058 ;;		_as7341_enableLED
 12059 ;;		_enable_flicker_detection
 12060 ;;		_is_measurement_complete
 12061 ;;		_is_as7341_interrupt
 12062 ;;		_enable_spectral_interrupt
 12063 ;;		_get_low_threshold
 12064 ;;		_get_high_threshold
 12065 ;;		_get_smux_enabled
 12066 ;;		_enable_WITME
 12067 ;;		_INT_MODE
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071     0B58                     _as7341_i2c_read:	
 12072                           ;psect for function _as7341_i2c_read
 12073                           
 12074                           
 12075                           ;incstack = 0
 12076                           ; Regs used in _as7341_i2c_read: [wreg+status,2+status,0+pclath+cstack]
 12077                           ;as7341_i2c_read@reg stored from wreg
 12078     0B58  0140               	movlb	0	; select bank0
 12079     0B59  00A0               	movwf	as7341_i2c_read@reg
 12080     0B5A                     l4345:
 12081                           
 12082                           ;as7341_model.c: 623: uint8_t buf;;as7341_model.c: 624: I2C_Start();
 12083     0B5A  3189  2154  318B   	fcall	_I2C_Start
 12084     0B5D                     l4347:
 12085                           
 12086                           ;as7341_model.c: 625: I2C_Write(0x39 << 1);
 12087     0B5D  3072               	movlw	114
 12088     0B5E  318A  222F  318B   	fcall	_I2C_Write
 12089     0B61                     l4349:
 12090                           
 12091                           ;as7341_model.c: 626: I2C_Write(reg);
 12092     0B61  0140               	movlb	0	; select bank0
 12093     0B62  0820               	movf	as7341_i2c_read@reg,w
 12094     0B63  318A  222F  318B   	fcall	_I2C_Write
 12095                           
 12096                           ;as7341_model.c: 627: I2C_Start();
 12097     0B66  3189  2154  318B   	fcall	_I2C_Start
 12098     0B69                     l4351:
 12099                           
 12100                           ;as7341_model.c: 628: I2C_Write((0x39 << 1) | 0x01);
 12101     0B69  3073               	movlw	115
 12102     0B6A  318A  222F  318B   	fcall	_I2C_Write
 12103     0B6D                     l4353:
 12104     0B6D  3001               	movlw	1
 12105     0B6E  318A  22C0  318B   	fcall	_I2C_Read
 12106     0B71  0140               	movlb	0	; select bank0
 12107     0B72  00A1               	movwf	as7341_i2c_read@buf
 12108     0B73                     l4355:
 12109                           
 12110                           ;as7341_model.c: 630: I2C_Stop();
 12111     0B73  3189  21AE  318B   	fcall	_I2C_Stop
 12112     0B76                     l4357:
 12113                           
 12114                           ;as7341_model.c: 631: return buf;
 12115     0B76  0140               	movlb	0	; select bank0
 12116     0B77  0821               	movf	as7341_i2c_read@buf,w
 12117     0B78                     l679:
 12118     0B78  0008               	return
 12119     0B79                     __end_of_as7341_i2c_read:
 12120                           
 12121                           	psect	text46
 12122     0A2F                     __ptext46:	
 12123 ;; *************** function _I2C_Write *****************
 12124 ;; Defined at:
 12125 ;;		line 61 in file "i2c_master.c"
 12126 ;; Parameters:    Size  Location     Type
 12127 ;;  data            1    wreg     unsigned char 
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;  data            1    4[COMMON] unsigned char 
 12130 ;; Return value:  Size  Location     Type
 12131 ;;                  1    wreg      unsigned char 
 12132 ;; Registers used:
 12133 ;;		wreg
 12134 ;; Tracked objects:
 12135 ;;		On entry : 0/0
 12136 ;;		On exit  : 0/0
 12137 ;;		Unchanged: 0/0
 12138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;Total ram usage:        1 bytes
 12144 ;; Hardware stack levels used: 1
 12145 ;; Hardware stack levels required when called: 2
 12146 ;; This function calls:
 12147 ;;		Nothing
 12148 ;; This function is called by:
 12149 ;;		_set_F1F4ClearNIR
 12150 ;;		_set_F5F8ClearNIR
 12151 ;;		_as7341_write_byte
 12152 ;;		_as7341_i2c_write
 12153 ;;		_as7341_i2c_read
 12154 ;;		_readTwoReg
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158     0A2F                     _I2C_Write:	
 12159                           ;psect for function _I2C_Write
 12160                           
 12161                           
 12162                           ;incstack = 0
 12163                           ; Regs used in _I2C_Write: [wreg]
 12164                           ;I2C_Write@data stored from wreg
 12165     0A2F  00F4               	movwf	I2C_Write@data
 12166     0A30                     l4139:
 12167                           
 12168                           ;i2c_master.c: 64: SSP2BUF = data;
 12169     0A30  0874               	movf	I2C_Write@data,w
 12170     0A31  0143               	movlb	3	; select bank3
 12171     0A32  0096               	movwf	22	;volatile
 12172     0A33                     l225:	
 12173                           ;i2c_master.c: 66: while (!(PIR3bits.SSP2IF));
 12174                           
 12175     0A33  014E               	movlb	14	; select bank14
 12176     0A34  1D0F               	btfss	15,2	;volatile
 12177     0A35  2A37               	goto	u2691
 12178     0A36  2A38               	goto	u2690
 12179     0A37                     u2691:
 12180     0A37  2A33               	goto	l225
 12181     0A38                     u2690:
 12182     0A38                     l227:
 12183                           
 12184                           ;i2c_master.c: 67: PIR3bits.SSP2IF = 0;
 12185     0A38  110F               	bcf	15,2	;volatile
 12186                           
 12187                           ;i2c_master.c: 69: if (SSP2CON2bits.ACKSTAT) {
 12188     0A39  0143               	movlb	3	; select bank3
 12189     0A3A  1F1B               	btfss	27,6	;volatile
 12190     0A3B  2A3D               	goto	u2701
 12191     0A3C  2A3E               	goto	u2700
 12192     0A3D                     u2701:
 12193     0A3D  2A41               	goto	l4147
 12194     0A3E                     u2700:
 12195     0A3E                     l4141:
 12196                           
 12197                           ;i2c_master.c: 70: SSP2CON2bits.PEN = 1;
 12198     0A3E  151B               	bsf	27,2	;volatile
 12199     0A3F                     l4143:
 12200                           
 12201                           ;i2c_master.c: 71: return 0;
 12202     0A3F  3000               	movlw	0
 12203     0A40  2A42               	goto	l229
 12204     0A41                     l4147:
 12205                           
 12206                           ;i2c_master.c: 72: };i2c_master.c: 73: return 1;
 12207     0A41  3001               	movlw	1
 12208     0A42                     l229:
 12209     0A42  0008               	return
 12210     0A43                     __end_of_I2C_Write:
 12211                           
 12212                           	psect	text47
 12213     09AE                     __ptext47:	
 12214 ;; *************** function _I2C_Stop *****************
 12215 ;; Defined at:
 12216 ;;		line 51 in file "i2c_master.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;		None
 12219 ;; Auto vars:     Size  Location     Type
 12220 ;;		None
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1    wreg      void 
 12223 ;; Registers used:
 12224 ;;		wreg, status,2, status,0, pclath, cstack
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/0
 12227 ;;		On exit  : 0/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;Total ram usage:        0 bytes
 12235 ;; Hardware stack levels used: 1
 12236 ;; Hardware stack levels required when called: 3
 12237 ;; This function calls:
 12238 ;;		_I2C_Wait
 12239 ;; This function is called by:
 12240 ;;		_set_F1F4ClearNIR
 12241 ;;		_set_F5F8ClearNIR
 12242 ;;		_as7341_i2c_write
 12243 ;;		_as7341_i2c_read
 12244 ;;		_readTwoReg
 12245 ;; This function uses a non-reentrant model
 12246 ;;
 12247                           
 12248     09AE                     _I2C_Stop:	
 12249                           ;psect for function _I2C_Stop
 12250                           
 12251     09AE                     l4135:	
 12252                           ;incstack = 0
 12253                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
 12254                           
 12255                           
 12256                           ;i2c_master.c: 53: I2C_Wait();
 12257     09AE  3189  21A2  3189   	fcall	_I2C_Wait
 12258     09B1                     l4137:
 12259                           
 12260                           ;i2c_master.c: 55: SSP2CON2bits.PEN = 1;
 12261     09B1  0143               	movlb	3	; select bank3
 12262     09B2  151B               	bsf	27,2	;volatile
 12263     09B3                     l219:	
 12264                           ;i2c_master.c: 56: while (SSP2CON2bits.PEN);
 12265                           
 12266     09B3  191B               	btfsc	27,2	;volatile
 12267     09B4  29B6               	goto	u2681
 12268     09B5  29B7               	goto	u2680
 12269     09B6                     u2681:
 12270     09B6  29B3               	goto	l219
 12271     09B7                     u2680:
 12272     09B7                     l221:
 12273                           
 12274                           ;i2c_master.c: 58: PIR3bits.SSP2IF = 0;
 12275     09B7  014E               	movlb	14	; select bank14
 12276     09B8  110F               	bcf	15,2	;volatile
 12277     09B9                     l222:
 12278     09B9  0008               	return
 12279     09BA                     __end_of_I2C_Stop:
 12280                           
 12281                           	psect	text48
 12282     09A2                     __ptext48:	
 12283 ;; *************** function _I2C_Wait *****************
 12284 ;; Defined at:
 12285 ;;		line 29 in file "i2c_master.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;		None
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;		None
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  1    wreg      void 
 12292 ;; Registers used:
 12293 ;;		wreg, status,2
 12294 ;; Tracked objects:
 12295 ;;		On entry : 0/0
 12296 ;;		On exit  : 0/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;Total ram usage:        0 bytes
 12304 ;; Hardware stack levels used: 1
 12305 ;; Hardware stack levels required when called: 2
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_I2C_Stop
 12310 ;;		_I2C_RepeatedStart
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314     09A2                     _I2C_Wait:	
 12315                           ;psect for function _I2C_Wait
 12316                           
 12317     09A2                     l4129:	
 12318                           ;incstack = 0
 12319                           ; Regs used in _I2C_Wait: [wreg+status,2]
 12320                           
 12321     09A2                     l201:	
 12322                           ;i2c_master.c: 30: while ((SSP2STAT & 0x04) || (SSP2CON2 & 0x1F));
 12323                           
 12324     09A2  0143               	movlb	3	; select bank3
 12325     09A3  1919               	btfsc	25,2	;volatile
 12326     09A4  29A6               	goto	u2651
 12327     09A5  29A7               	goto	u2650
 12328     09A6                     u2651:
 12329     09A6  29A2               	goto	l201
 12330     09A7                     u2650:
 12331     09A7                     l4131:
 12332     09A7  081B               	movf	27,w	;volatile
 12333     09A8  391F               	andlw	31
 12334     09A9  1D03               	btfss	3,2
 12335     09AA  29AC               	goto	u2661
 12336     09AB  29AD               	goto	u2660
 12337     09AC                     u2661:
 12338     09AC  29A2               	goto	l201
 12339     09AD                     u2660:
 12340     09AD                     l204:
 12341     09AD  0008               	return
 12342     09AE                     __end_of_I2C_Wait:
 12343                           
 12344                           	psect	text49
 12345     0954                     __ptext49:	
 12346 ;; *************** function _I2C_Start *****************
 12347 ;; Defined at:
 12348 ;;		line 33 in file "i2c_master.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		None
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;Total ram usage:        0 bytes
 12367 ;; Hardware stack levels used: 1
 12368 ;; Hardware stack levels required when called: 2
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_set_F1F4ClearNIR
 12373 ;;		_set_F5F8ClearNIR
 12374 ;;		_as7341_i2c_write
 12375 ;;		_as7341_i2c_read
 12376 ;;		_readTwoReg
 12377 ;; This function uses a non-reentrant model
 12378 ;;
 12379                           
 12380     0954                     _I2C_Start:	
 12381                           ;psect for function _I2C_Start
 12382                           
 12383     0954                     l4133:	
 12384                           ;incstack = 0
 12385                           ; Regs used in _I2C_Start: []
 12386                           
 12387                           
 12388                           ;i2c_master.c: 35: SSP2CON2bits.SEN = 1;
 12389     0954  0143               	movlb	3	; select bank3
 12390     0955  141B               	bsf	27,0	;volatile
 12391     0956                     l207:	
 12392                           ;i2c_master.c: 36: while (SSP2CON2bits.SEN);
 12393                           
 12394     0956  181B               	btfsc	27,0	;volatile
 12395     0957  2959               	goto	u2671
 12396     0958  295A               	goto	u2670
 12397     0959                     u2671:
 12398     0959  2956               	goto	l207
 12399     095A                     u2670:
 12400     095A                     l209:
 12401                           
 12402                           ;i2c_master.c: 38: PIR3bits.SSP2IF = 0;
 12403     095A  014E               	movlb	14	; select bank14
 12404     095B  110F               	bcf	15,2	;volatile
 12405     095C                     l210:
 12406     095C  0008               	return
 12407     095D                     __end_of_I2C_Start:
 12408                           
 12409                           	psect	text50
 12410     0AC0                     __ptext50:	
 12411 ;; *************** function _I2C_Read *****************
 12412 ;; Defined at:
 12413 ;;		line 76 in file "i2c_master.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  a               1    wreg     unsigned char 
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;  a               1    4[COMMON] unsigned char 
 12418 ;;  temp            1    5[COMMON] unsigned char 
 12419 ;; Return value:  Size  Location     Type
 12420 ;;                  1    wreg      unsigned char 
 12421 ;; Registers used:
 12422 ;;		wreg
 12423 ;; Tracked objects:
 12424 ;;		On entry : 0/0
 12425 ;;		On exit  : 0/0
 12426 ;;		Unchanged: 0/0
 12427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;Total ram usage:        2 bytes
 12433 ;; Hardware stack levels used: 1
 12434 ;; Hardware stack levels required when called: 2
 12435 ;; This function calls:
 12436 ;;		Nothing
 12437 ;; This function is called by:
 12438 ;;		_as7341_i2c_read
 12439 ;;		_readTwoReg
 12440 ;; This function uses a non-reentrant model
 12441 ;;
 12442                           
 12443     0AC0                     _I2C_Read:	
 12444                           ;psect for function _I2C_Read
 12445                           
 12446                           
 12447                           ;incstack = 0
 12448                           ; Regs used in _I2C_Read: [wreg]
 12449                           ;I2C_Read@a stored from wreg
 12450     0AC0  00F4               	movwf	I2C_Read@a
 12451     0AC1                     l4151:
 12452                           
 12453                           ;i2c_master.c: 78: SSP2CON2bits.RCEN = 1;
 12454     0AC1  0143               	movlb	3	; select bank3
 12455     0AC2  159B               	bsf	27,3	;volatile
 12456     0AC3                     l232:	
 12457                           ;i2c_master.c: 80: while (!(PIR3bits.SSP2IF));
 12458                           
 12459     0AC3  014E               	movlb	14	; select bank14
 12460     0AC4  1D0F               	btfss	15,2	;volatile
 12461     0AC5  2AC7               	goto	u2711
 12462     0AC6  2AC8               	goto	u2710
 12463     0AC7                     u2711:
 12464     0AC7  2AC3               	goto	l232
 12465     0AC8                     u2710:
 12466     0AC8                     l234:
 12467                           
 12468                           ;i2c_master.c: 81: PIR3bits.SSP2IF = 0;
 12469     0AC8  110F               	bcf	15,2	;volatile
 12470     0AC9                     l4153:
 12471                           
 12472                           ;i2c_master.c: 83: uint8_t temp = SSP2BUF;
 12473     0AC9  0143               	movlb	3	; select bank3
 12474     0ACA  0816               	movf	22,w	;volatile
 12475     0ACB  00F5               	movwf	I2C_Read@temp
 12476     0ACC                     l4155:
 12477                           
 12478                           ;i2c_master.c: 85: ACKDT2 = a;
 12479     0ACC  1874               	btfsc	I2C_Read@a,0
 12480     0ACD  2ACF               	goto	u2721
 12481     0ACE  2AD2               	goto	u2720
 12482     0ACF                     u2721:
 12483     0ACF  0143               	movlb	3	; select bank3
 12484     0AD0  169B               	bsf	27,5	;volatile
 12485     0AD1  2AD4               	goto	u2734
 12486     0AD2                     u2720:
 12487     0AD2  0143               	movlb	3	; select bank3
 12488     0AD3  129B               	bcf	27,5	;volatile
 12489     0AD4                     u2734:
 12490     0AD4                     l4157:
 12491                           
 12492                           ;i2c_master.c: 86: ACKEN2 = 1;
 12493     0AD4  161B               	bsf	27,4	;volatile
 12494     0AD5                     l235:	
 12495                           ;i2c_master.c: 87: while (!(PIR3bits.SSP2IF));
 12496                           
 12497     0AD5  014E               	movlb	14	; select bank14
 12498     0AD6  1D0F               	btfss	15,2	;volatile
 12499     0AD7  2AD9               	goto	u2741
 12500     0AD8  2ADA               	goto	u2740
 12501     0AD9                     u2741:
 12502     0AD9  2AD5               	goto	l235
 12503     0ADA                     u2740:
 12504     0ADA                     l237:
 12505                           
 12506                           ;i2c_master.c: 88: PIR3bits.SSP2IF = 0;
 12507     0ADA  110F               	bcf	15,2	;volatile
 12508     0ADB                     l4159:
 12509                           
 12510                           ;i2c_master.c: 90: return temp;
 12511     0ADB  0875               	movf	I2C_Read@temp,w
 12512     0ADC                     l238:
 12513     0ADC  0008               	return
 12514     0ADD                     __end_of_I2C_Read:
 12515                           
 12516                           	psect	text51
 12517     0979                     __ptext51:	
 12518 ;; *************** function _SYSTEM_Initialize *****************
 12519 ;; Defined at:
 12520 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12521 ;; Parameters:    Size  Location     Type
 12522 ;;		None
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;		None
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      void 
 12527 ;; Registers used:
 12528 ;;		wreg, status,2, status,0, pclath, cstack
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;Total ram usage:        0 bytes
 12539 ;; Hardware stack levels used: 1
 12540 ;; Hardware stack levels required when called: 3
 12541 ;; This function calls:
 12542 ;;		_OSCILLATOR_Initialize
 12543 ;;		_PIN_MANAGER_Initialize
 12544 ;;		_PMD_Initialize
 12545 ;; This function is called by:
 12546 ;;		_main
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550     0979                     _SYSTEM_Initialize:	
 12551                           ;psect for function _SYSTEM_Initialize
 12552                           
 12553     0979                     l3557:	
 12554                           ;incstack = 0
 12555                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12556                           
 12557                           
 12558                           ;mcc.c: 52: PMD_Initialize();
 12559     0979  3189  216F  3189   	fcall	_PMD_Initialize
 12560     097C                     l3559:
 12561                           
 12562                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 12563     097C  318B  23FF  3189   	fcall	_PIN_MANAGER_Initialize
 12564     097F                     l3561:
 12565                           
 12566                           ;mcc.c: 54: OSCILLATOR_Initialize();
 12567     097F  3189  214B  3189   	fcall	_OSCILLATOR_Initialize
 12568     0982                     l35:
 12569     0982  0008               	return
 12570     0983                     __end_of_SYSTEM_Initialize:
 12571                           
 12572                           	psect	text52
 12573     096F                     __ptext52:	
 12574 ;; *************** function _PMD_Initialize *****************
 12575 ;; Defined at:
 12576 ;;		line 71 in file "mcc_generated_files/mcc.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;		None
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;		None
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  1    wreg      void 
 12583 ;; Registers used:
 12584 ;;		status,2
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/0
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;Total ram usage:        0 bytes
 12595 ;; Hardware stack levels used: 1
 12596 ;; Hardware stack levels required when called: 2
 12597 ;; This function calls:
 12598 ;;		Nothing
 12599 ;; This function is called by:
 12600 ;;		_SYSTEM_Initialize
 12601 ;; This function uses a non-reentrant model
 12602 ;;
 12603                           
 12604     096F                     _PMD_Initialize:	
 12605                           ;psect for function _PMD_Initialize
 12606                           
 12607     096F                     l3191:	
 12608                           ;incstack = 0
 12609                           ; Regs used in _PMD_Initialize: [status,2]
 12610                           
 12611                           
 12612                           ;mcc.c: 74: PMD0 = 0x00;
 12613     096F  014F               	movlb	15	; select bank15
 12614     0970  0196               	clrf	22	;volatile
 12615                           
 12616                           ;mcc.c: 76: PMD1 = 0x00;
 12617     0971  0197               	clrf	23	;volatile
 12618                           
 12619                           ;mcc.c: 78: PMD2 = 0x00;
 12620     0972  0198               	clrf	24	;volatile
 12621                           
 12622                           ;mcc.c: 80: PMD3 = 0x00;
 12623     0973  0199               	clrf	25	;volatile
 12624                           
 12625                           ;mcc.c: 82: PMD4 = 0x00;
 12626     0974  019A               	clrf	26	;volatile
 12627                           
 12628                           ;mcc.c: 84: PMD5 = 0x00;
 12629     0975  019B               	clrf	27	;volatile
 12630                           
 12631                           ;mcc.c: 86: PMD6 = 0x00;
 12632     0976  019C               	clrf	28	;volatile
 12633                           
 12634                           ;mcc.c: 88: PMD7 = 0x00;
 12635     0977  019D               	clrf	29	;volatile
 12636     0978                     l41:
 12637     0978  0008               	return
 12638     0979                     __end_of_PMD_Initialize:
 12639                           
 12640                           	psect	text53
 12641     0BFF                     __ptext53:	
 12642 ;; *************** function _PIN_MANAGER_Initialize *****************
 12643 ;; Defined at:
 12644 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;		None
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;		None
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  1    wreg      void 
 12651 ;; Registers used:
 12652 ;;		wreg, status,2
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;Total ram usage:        0 bytes
 12663 ;; Hardware stack levels used: 1
 12664 ;; Hardware stack levels required when called: 2
 12665 ;; This function calls:
 12666 ;;		Nothing
 12667 ;; This function is called by:
 12668 ;;		_SYSTEM_Initialize
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           
 12672     0BFF                     _PIN_MANAGER_Initialize:	
 12673                           ;psect for function _PIN_MANAGER_Initialize
 12674                           
 12675     0BFF                     l3193:	
 12676                           ;incstack = 0
 12677                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12678                           
 12679                           
 12680                           ;pin_manager.c: 56: LATA = 0x00;
 12681     0BFF  0140               	movlb	0	; select bank0
 12682     0C00  0198               	clrf	24	;volatile
 12683                           
 12684                           ;pin_manager.c: 57: LATC = 0x00;
 12685     0C01  019A               	clrf	26	;volatile
 12686                           
 12687                           ;pin_manager.c: 62: TRISA = 0x00;
 12688     0C02  0192               	clrf	18	;volatile
 12689     0C03                     l3195:
 12690                           
 12691                           ;pin_manager.c: 64: TRISC = 0x3F;
 12692     0C03  303F               	movlw	63
 12693     0C04  0094               	movwf	20	;volatile
 12694     0C05                     l3197:
 12695                           
 12696                           ;pin_manager.c: 69: ANSELC = 0x00;
 12697     0C05  017E               	movlb	62	; select bank62
 12698     0C06  01CE               	clrf	78	;volatile
 12699     0C07                     l3199:
 12700                           
 12701                           ;pin_manager.c: 70: ANSELA = 0x00;
 12702     0C07  01B8               	clrf	56	;volatile
 12703     0C08                     l3201:
 12704                           
 12705                           ;pin_manager.c: 75: WPUA = 0x00;
 12706     0C08  01B9               	clrf	57	;volatile
 12707     0C09                     l3203:
 12708                           
 12709                           ;pin_manager.c: 76: WPUC = 0x00;
 12710     0C09  01CF               	clrf	79	;volatile
 12711     0C0A                     l3205:
 12712                           
 12713                           ;pin_manager.c: 81: ODCONA = 0x00;
 12714     0C0A  01BA               	clrf	58	;volatile
 12715     0C0B                     l3207:
 12716                           
 12717                           ;pin_manager.c: 82: ODCONC = 0x00;
 12718     0C0B  01D0               	clrf	80	;volatile
 12719     0C0C                     l3209:
 12720                           
 12721                           ;pin_manager.c: 87: SLRCONA = 0x37;
 12722     0C0C  3037               	movlw	55
 12723     0C0D  00BB               	movwf	59	;volatile
 12724     0C0E                     l3211:
 12725                           
 12726                           ;pin_manager.c: 88: SLRCONC = 0x3F;
 12727     0C0E  303F               	movlw	63
 12728     0C0F  00D1               	movwf	81	;volatile
 12729     0C10                     l3213:
 12730                           
 12731                           ;pin_manager.c: 93: INLVLA = 0x3F;
 12732     0C10  303F               	movlw	63
 12733     0C11  00BC               	movwf	60	;volatile
 12734     0C12                     l3215:
 12735                           
 12736                           ;pin_manager.c: 94: INLVLC = 0x3F;
 12737     0C12  303F               	movlw	63
 12738     0C13  00D2               	movwf	82	;volatile
 12739     0C14                     l3217:
 12740                           
 12741                           ;pin_manager.c: 96: RC0PPS = 0x13;
 12742     0C14  3013               	movlw	19
 12743     0C15  00A0               	movwf	32	;volatile
 12744     0C16                     l3219:
 12745                           
 12746                           ;pin_manager.c: 97: SSP1CLKPPS = 0x10;
 12747     0C16  3010               	movlw	16
 12748     0C17  017D               	movlb	61	; select bank61
 12749     0C18  00C5               	movwf	69	;volatile
 12750     0C19                     l3221:
 12751                           
 12752                           ;pin_manager.c: 98: RC1PPS = 0x14;
 12753     0C19  3014               	movlw	20
 12754     0C1A  017E               	movlb	62	; select bank62
 12755     0C1B  00A1               	movwf	33	;volatile
 12756     0C1C                     l3223:
 12757                           
 12758                           ;pin_manager.c: 99: SSP1DATPPS = 0x11;
 12759     0C1C  3011               	movlw	17
 12760     0C1D  017D               	movlb	61	; select bank61
 12761     0C1E  00C6               	movwf	70	;volatile
 12762     0C1F                     l3225:
 12763                           
 12764                           ;pin_manager.c: 106: RC4PPS = 0x15;
 12765     0C1F  3015               	movlw	21
 12766     0C20  017E               	movlb	62	; select bank62
 12767     0C21  00A4               	movwf	36	;volatile
 12768     0C22                     l3227:
 12769                           
 12770                           ;pin_manager.c: 107: RC5PPS = 0x16;
 12771     0C22  3016               	movlw	22
 12772     0C23  00A5               	movwf	37	;volatile
 12773     0C24                     l3229:
 12774                           
 12775                           ;pin_manager.c: 108: SSP2DATPPS = 0x15;
 12776     0C24  3015               	movlw	21
 12777     0C25  017D               	movlb	61	; select bank61
 12778     0C26  00C9               	movwf	73	;volatile
 12779     0C27                     l3231:
 12780                           
 12781                           ;pin_manager.c: 109: SSP2CLKPPS = 0x14;
 12782     0C27  3014               	movlw	20
 12783     0C28  00C8               	movwf	72	;volatile
 12784     0C29                     l88:
 12785     0C29  0008               	return
 12786     0C2A                     __end_of_PIN_MANAGER_Initialize:
 12787                           
 12788                           	psect	text54
 12789     094B                     __ptext54:	
 12790 ;; *************** function _OSCILLATOR_Initialize *****************
 12791 ;; Defined at:
 12792 ;;		line 57 in file "mcc_generated_files/mcc.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;		None
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1    wreg      void 
 12799 ;; Registers used:
 12800 ;;		wreg, status,2
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;Total ram usage:        0 bytes
 12811 ;; Hardware stack levels used: 1
 12812 ;; Hardware stack levels required when called: 2
 12813 ;; This function calls:
 12814 ;;		Nothing
 12815 ;; This function is called by:
 12816 ;;		_SYSTEM_Initialize
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820     094B                     _OSCILLATOR_Initialize:	
 12821                           ;psect for function _OSCILLATOR_Initialize
 12822                           
 12823     094B                     l3233:	
 12824                           ;incstack = 0
 12825                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12826                           
 12827                           
 12828                           ;mcc.c: 60: OSCCON1 = 0x62;
 12829     094B  3062               	movlw	98
 12830     094C  0151               	movlb	17	; select bank17
 12831     094D  008D               	movwf	13	;volatile
 12832     094E                     l3235:
 12833                           
 12834                           ;mcc.c: 62: OSCCON3 = 0x00;
 12835     094E  018F               	clrf	15	;volatile
 12836     094F                     l3237:
 12837                           
 12838                           ;mcc.c: 64: OSCEN = 0x00;
 12839     094F  0191               	clrf	17	;volatile
 12840                           
 12841                           ;mcc.c: 66: OSCFRQ = 0x02;
 12842     0950  3002               	movlw	2
 12843     0951  0093               	movwf	19	;volatile
 12844     0952                     l3239:
 12845                           
 12846                           ;mcc.c: 68: OSCTUNE = 0x00;
 12847     0952  0192               	clrf	18	;volatile
 12848     0953                     l38:
 12849     0953  0008               	return
 12850     0954                     __end_of_OSCILLATOR_Initialize:
 12851                           
 12852                           	psect	text55
 12853     0BBB                     __ptext55:	
 12854 ;; *************** function _EUSART1_Initialize *****************
 12855 ;; Defined at:
 12856 ;;		line 66 in file "eusart1.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;		None
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      void 
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0, pclath, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;Total ram usage:        0 bytes
 12875 ;; Hardware stack levels used: 1
 12876 ;; Hardware stack levels required when called: 3
 12877 ;; This function calls:
 12878 ;;		_EUSART1_SetErrorHandler
 12879 ;;		_EUSART1_SetFramingErrorHandler
 12880 ;;		_EUSART1_SetOverrunErrorHandler
 12881 ;; This function is called by:
 12882 ;;		_main
 12883 ;; This function uses a non-reentrant model
 12884 ;;
 12885                           
 12886     0BBB                     _EUSART1_Initialize:	
 12887                           ;psect for function _EUSART1_Initialize
 12888                           
 12889     0BBB                     l3625:	
 12890                           ;incstack = 0
 12891                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12892                           
 12893                           
 12894                           ;eusart1.c: 71: BAUD1CON = 0x08;
 12895     0BBB  3008               	movlw	8
 12896     0BBC  0142               	movlb	2	; select bank2
 12897     0BBD  009F               	movwf	31	;volatile
 12898                           
 12899                           ;eusart1.c: 74: RC1STA = 0x80;
 12900     0BBE  3080               	movlw	128
 12901     0BBF  009D               	movwf	29	;volatile
 12902                           
 12903                           ;eusart1.c: 77: TX1STA = 0x24;
 12904     0BC0  3024               	movlw	36
 12905     0BC1  009E               	movwf	30	;volatile
 12906                           
 12907                           ;eusart1.c: 80: SP1BRGL = 0x19;
 12908     0BC2  3019               	movlw	25
 12909     0BC3  009B               	movwf	27	;volatile
 12910     0BC4                     l3627:
 12911                           
 12912                           ;eusart1.c: 83: SP1BRGH = 0x00;
 12913     0BC4  019C               	clrf	28	;volatile
 12914     0BC5                     l3629:
 12915                           
 12916                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
 12917     0BC5  3000               	movlw	0
 12918     0BC6  00F4               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12919     0BC7  3000               	movlw	0
 12920     0BC8  00F5               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12921     0BC9  3189  212C  318B   	fcall	_EUSART1_SetFramingErrorHandler
 12922     0BCC                     l3631:
 12923                           
 12924                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
 12925     0BCC  3000               	movlw	0
 12926     0BCD  00F4               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12927     0BCE  3000               	movlw	0
 12928     0BCF  00F5               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12929     0BD0  3189  2132  318B   	fcall	_EUSART1_SetOverrunErrorHandler
 12930     0BD3                     l3633:
 12931                           
 12932                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
 12933     0BD3  3000               	movlw	0
 12934     0BD4  00F4               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12935     0BD5  3000               	movlw	0
 12936     0BD6  00F5               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12937     0BD7  3189  2126  318B   	fcall	_EUSART1_SetErrorHandler
 12938     0BDA                     l3635:
 12939                           
 12940                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
 12941     0BDA  0140               	movlb	0	; select bank0
 12942     0BDB  01E8               	clrf	_eusart1RxLastError	;volatile
 12943     0BDC                     l347:
 12944     0BDC  0008               	return
 12945     0BDD                     __end_of_EUSART1_Initialize:
 12946                           
 12947                           	psect	text56
 12948     0932                     __ptext56:	
 12949 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12950 ;; Defined at:
 12951 ;;		line 170 in file "eusart1.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 12954 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;		None
 12957 ;; Return value:  Size  Location     Type
 12958 ;;                  1    wreg      void 
 12959 ;; Registers used:
 12960 ;;		wreg
 12961 ;; Tracked objects:
 12962 ;;		On entry : 0/0
 12963 ;;		On exit  : 0/0
 12964 ;;		Unchanged: 0/0
 12965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;Total ram usage:        2 bytes
 12971 ;; Hardware stack levels used: 1
 12972 ;; Hardware stack levels required when called: 2
 12973 ;; This function calls:
 12974 ;;		Nothing
 12975 ;; This function is called by:
 12976 ;;		_EUSART1_Initialize
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980     0932                     _EUSART1_SetOverrunErrorHandler:	
 12981                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12982                           
 12983     0932                     l3313:	
 12984                           ;incstack = 0
 12985                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12986                           
 12987                           
 12988                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
 12989     0932  0875               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12990     0933  0140               	movlb	0	; select bank0
 12991     0934  00EC               	movwf	_EUSART1_OverrunErrorHandler+1
 12992     0935  0874               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12993     0936  00EB               	movwf	_EUSART1_OverrunErrorHandler
 12994     0937                     l395:
 12995     0937  0008               	return
 12996     0938                     __end_of_EUSART1_SetOverrunErrorHandler:
 12997                           
 12998                           	psect	text57
 12999     092C                     __ptext57:	
 13000 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13001 ;; Defined at:
 13002 ;;		line 166 in file "eusart1.c"
 13003 ;; Parameters:    Size  Location     Type
 13004 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 13005 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13006 ;; Auto vars:     Size  Location     Type
 13007 ;;		None
 13008 ;; Return value:  Size  Location     Type
 13009 ;;                  1    wreg      void 
 13010 ;; Registers used:
 13011 ;;		wreg
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;Total ram usage:        2 bytes
 13022 ;; Hardware stack levels used: 1
 13023 ;; Hardware stack levels required when called: 2
 13024 ;; This function calls:
 13025 ;;		Nothing
 13026 ;; This function is called by:
 13027 ;;		_EUSART1_Initialize
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031     092C                     _EUSART1_SetFramingErrorHandler:	
 13032                           ;psect for function _EUSART1_SetFramingErrorHandler
 13033                           
 13034     092C                     l3311:	
 13035                           ;incstack = 0
 13036                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13037                           
 13038                           
 13039                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
 13040     092C  0875               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13041     092D  0140               	movlb	0	; select bank0
 13042     092E  00EE               	movwf	_EUSART1_FramingErrorHandler+1
 13043     092F  0874               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13044     0930  00ED               	movwf	_EUSART1_FramingErrorHandler
 13045     0931                     l392:
 13046     0931  0008               	return
 13047     0932                     __end_of_EUSART1_SetFramingErrorHandler:
 13048                           
 13049                           	psect	text58
 13050     0926                     __ptext58:	
 13051 ;; *************** function _EUSART1_SetErrorHandler *****************
 13052 ;; Defined at:
 13053 ;;		line 174 in file "eusart1.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 13056 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;		None
 13059 ;; Return value:  Size  Location     Type
 13060 ;;                  1    wreg      void 
 13061 ;; Registers used:
 13062 ;;		wreg
 13063 ;; Tracked objects:
 13064 ;;		On entry : 0/0
 13065 ;;		On exit  : 0/0
 13066 ;;		Unchanged: 0/0
 13067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;Total ram usage:        2 bytes
 13073 ;; Hardware stack levels used: 1
 13074 ;; Hardware stack levels required when called: 2
 13075 ;; This function calls:
 13076 ;;		Nothing
 13077 ;; This function is called by:
 13078 ;;		_EUSART1_Initialize
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082     0926                     _EUSART1_SetErrorHandler:	
 13083                           ;psect for function _EUSART1_SetErrorHandler
 13084                           
 13085     0926                     l3315:	
 13086                           ;incstack = 0
 13087                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13088                           
 13089                           
 13090                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
 13091     0926  0875               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13092     0927  0140               	movlb	0	; select bank0
 13093     0928  00EA               	movwf	_EUSART1_ErrorHandler+1
 13094     0929  0874               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13095     092A  00E9               	movwf	_EUSART1_ErrorHandler
 13096     092B                     l398:
 13097     092B  0008               	return
 13098     092C                     __end_of_EUSART1_SetErrorHandler:
 13099                           
 13100                           	psect	intentry
 13101     0004                     __pintentry:	
 13102 ;; *************** function _INTERRUPT_InterruptManager *****************
 13103 ;; Defined at:
 13104 ;;		line 42 in file "main.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;		None
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;		None
 13109 ;; Return value:  Size  Location     Type
 13110 ;;                  1    wreg      void 
 13111 ;; Registers used:
 13112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13113 ;; Tracked objects:
 13114 ;;		On entry : 0/0
 13115 ;;		On exit  : 0/0
 13116 ;;		Unchanged: 0/0
 13117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13122 ;;Total ram usage:        0 bytes
 13123 ;; Hardware stack levels used: 1
 13124 ;; Hardware stack levels required when called: 1
 13125 ;; This function calls:
 13126 ;;		_i2c_slave_interrupt
 13127 ;; This function is called by:
 13128 ;;		Interrupt level 1
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132     0004                     _INTERRUPT_InterruptManager:
 13133                           
 13134                           ;incstack = 0
 13135     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13136                           
 13137                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13138     0005  3180               	pagesel	$
 13139     0006                     i1l3865:
 13140                           
 13141                           ;main.c: 44: if (PIR0bits.TMR0IF) {
 13142     0006  014E               	movlb	14	; select bank14
 13143     0007  1E8C               	btfss	12,5	;volatile
 13144     0008  280A               	goto	u252_21
 13145     0009  280B               	goto	u252_20
 13146     000A                     u252_21:
 13147     000A  2815               	goto	i1l3871
 13148     000B                     u252_20:
 13149     000B                     i1l3867:
 13150                           
 13151                           ;main.c: 45: PIR0bits.TMR0IF = 0;
 13152     000B  128C               	bcf	12,5	;volatile
 13153     000C                     i1l3869:
 13154                           
 13155                           ;main.c: 46: ticks++;
 13156     000C  3001               	movlw	1
 13157     000D  0140               	movlb	0	; select bank0
 13158     000E  07E2               	addwf	_ticks,f	;volatile
 13159     000F  3000               	movlw	0
 13160     0010  3DE3               	addwfc	_ticks+1,f	;volatile
 13161     0011  3000               	movlw	0
 13162     0012  3DE4               	addwfc	_ticks+2,f	;volatile
 13163     0013  3000               	movlw	0
 13164     0014  3DE5               	addwfc	_ticks+3,f	;volatile
 13165     0015                     i1l3871:
 13166                           
 13167                           ;main.c: 47: };main.c: 50: if (PIR3bits.SSP1IF == 1) {
 13168     0015  014E               	movlb	14	; select bank14
 13169     0016  1C0F               	btfss	15,0	;volatile
 13170     0017  2819               	goto	u253_21
 13171     0018  281A               	goto	u253_20
 13172     0019                     u253_21:
 13173     0019  281E               	goto	i1l155
 13174     001A                     u253_20:
 13175     001A                     i1l3873:
 13176                           
 13177                           ;main.c: 51: PIR3bits.SSP1IF = 0;
 13178     001A  100F               	bcf	15,0	;volatile
 13179     001B                     i1l3875:
 13180                           
 13181                           ;main.c: 52: i2c_slave_interrupt();
 13182     001B  318E  2672  3180   	fcall	_i2c_slave_interrupt
 13183     001E                     i1l155:
 13184     001E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13185     001F  0009               	retfie
 13186     0020                     __end_of_INTERRUPT_InterruptManager:
 13187                           
 13188                           	psect	text60
 13189     0E72                     __ptext60:	
 13190 ;; *************** function _i2c_slave_interrupt *****************
 13191 ;; Defined at:
 13192 ;;		line 65 in file "i2c_slave.c"
 13193 ;; Parameters:    Size  Location     Type
 13194 ;;		None
 13195 ;; Auto vars:     Size  Location     Type
 13196 ;;  value           1    3[COMMON] unsigned char 
 13197 ;;  isNack          1    2[COMMON] char 
 13198 ;;  isRead          1    1[COMMON] unsigned char 
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  1    wreg      void 
 13201 ;; Registers used:
 13202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13203 ;; Tracked objects:
 13204 ;;		On entry : 0/0
 13205 ;;		On exit  : 0/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13209 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13212 ;;Total ram usage:        4 bytes
 13213 ;; Hardware stack levels used: 1
 13214 ;; This function calls:
 13215 ;;		Nothing
 13216 ;; This function is called by:
 13217 ;;		_INTERRUPT_InterruptManager
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221     0E72                     _i2c_slave_interrupt:	
 13222                           ;psect for function _i2c_slave_interrupt
 13223                           
 13224     0E72                     i1l3581:	
 13225                           ;incstack = 0
 13226                           ; Regs used in _i2c_slave_interrupt: [wreg-fsr1h+status,2+status,0]
 13227                           
 13228                           
 13229                           ;i2c_slave.c: 68: uint8_t isRead = SSP1STATbits.R_nW;
 13230     0E72  3000               	movlw	0
 13231     0E73  0143               	movlb	3	; select bank3
 13232     0E74  190F               	btfsc	15,2	;volatile
 13233     0E75  3001               	movlw	1
 13234     0E76  00F1               	movwf	i2c_slave_interrupt@isRead
 13235                           
 13236                           ;i2c_slave.c: 69: int8_t isNack = SSP1CON2bits.ACKSTAT;
 13237     0E77  3000               	movlw	0
 13238     0E78  1B11               	btfsc	17,6	;volatile
 13239     0E79  3001               	movlw	1
 13240     0E7A  00F2               	movwf	i2c_slave_interrupt@isNack
 13241     0E7B                     i1l3583:
 13242                           
 13243                           ;i2c_slave.c: 72: if (isNack) {
 13244     0E7B  0872               	movf	i2c_slave_interrupt@isNack,w
 13245     0E7C  1903               	btfsc	3,2
 13246     0E7D  2E7F               	goto	u221_21
 13247     0E7E  2E80               	goto	u221_20
 13248     0E7F                     u221_21:
 13249     0E7F  2E82               	goto	i1l3589
 13250     0E80                     u221_20:
 13251     0E80                     i1l3585:
 13252                           
 13253                           ;i2c_slave.c: 73: currentState = 0;
 13254     0E80  01F6               	clrf	_currentState
 13255     0E81  2EC1               	goto	i1l291
 13256     0E82                     i1l3589:
 13257                           
 13258                           ;i2c_slave.c: 75: };i2c_slave.c: 78: if (isRead) {
 13259     0E82  0871               	movf	i2c_slave_interrupt@isRead,w
 13260     0E83  1903               	btfsc	3,2
 13261     0E84  2E86               	goto	u222_21
 13262     0E85  2E87               	goto	u222_20
 13263     0E86                     u222_21:
 13264     0E86  2E9A               	goto	i1l3599
 13265     0E87                     u222_20:
 13266     0E87                     i1l3591:
 13267                           
 13268                           ;i2c_slave.c: 80: SSP1BUF = slaveData[currentRegister];
 13269     0E87  0877               	movf	_currentRegister,w
 13270     0E88  3E20               	addlw	(low (_slaveData| (0+256)))& (0+255)
 13271     0E89  0086               	movwf	6
 13272     0E8A  3001               	movlw	1	; select bank2/3
 13273     0E8B  0087               	movwf	7
 13274     0E8C  0801               	movf	1,w
 13275     0E8D  008C               	movwf	12	;volatile
 13276     0E8E                     i1l3593:
 13277                           
 13278                           ;i2c_slave.c: 82: currentRegister++;
 13279     0E8E  3001               	movlw	1
 13280     0E8F  00F0               	movwf	??_i2c_slave_interrupt
 13281     0E90  0870               	movf	??_i2c_slave_interrupt,w
 13282     0E91  07F7               	addwf	_currentRegister,f
 13283     0E92                     i1l3595:
 13284                           
 13285                           ;i2c_slave.c: 84: if (currentRegister >= 64u) {
 13286     0E92  3040               	movlw	64
 13287     0E93  0277               	subwf	_currentRegister,w
 13288     0E94  1C03               	skipc
 13289     0E95  2E97               	goto	u223_21
 13290     0E96  2E98               	goto	u223_20
 13291     0E97                     u223_21:
 13292     0E97  2EC0               	goto	i1l294
 13293     0E98                     u223_20:
 13294     0E98                     i1l3597:
 13295                           
 13296                           ;i2c_slave.c: 85: currentRegister = 0;
 13297     0E98  01F7               	clrf	_currentRegister
 13298     0E99  2EC0               	goto	i1l294
 13299     0E9A                     i1l3599:
 13300                           
 13301                           ;i2c_slave.c: 90: uint8_t value = SSP1BUF;
 13302     0E9A  080C               	movf	12,w	;volatile
 13303     0E9B  00F3               	movwf	i2c_slave_interrupt@value
 13304                           
 13305                           ;i2c_slave.c: 92: switch (currentState) {
 13306     0E9C  2EB5               	goto	i1l3613
 13307     0E9D                     i1l296:	
 13308                           ;i2c_slave.c: 94: case 0:
 13309                           
 13310                           
 13311                           ;i2c_slave.c: 95: currentState = 1;
 13312     0E9D  01F6               	clrf	_currentState
 13313     0E9E  0AF6               	incf	_currentState,f
 13314                           
 13315                           ;i2c_slave.c: 96: break;
 13316     0E9F  2EC0               	goto	i1l294
 13317     0EA0                     i1l3601:
 13318                           
 13319                           ;i2c_slave.c: 99: currentRegister = value % 64u;
 13320     0EA0  0873               	movf	i2c_slave_interrupt@value,w
 13321     0EA1  393F               	andlw	63
 13322     0EA2  00F7               	movwf	_currentRegister
 13323     0EA3                     i1l3603:
 13324                           
 13325                           ;i2c_slave.c: 100: currentState = 2;
 13326     0EA3  3002               	movlw	2
 13327     0EA4  00F6               	movwf	_currentState
 13328                           
 13329                           ;i2c_slave.c: 101: break;
 13330     0EA5  2EC0               	goto	i1l294
 13331     0EA6                     i1l3605:
 13332                           
 13333                           ;i2c_slave.c: 105: if (currentRegister < 57) {
 13334     0EA6  3039               	movlw	57
 13335     0EA7  0277               	subwf	_currentRegister,w
 13336     0EA8  1803               	skipnc
 13337     0EA9  2EAB               	goto	u224_21
 13338     0EAA  2EAC               	goto	u224_20
 13339     0EAB                     u224_21:
 13340     0EAB  2EB3               	goto	i1l3609
 13341     0EAC                     u224_20:
 13342     0EAC                     i1l3607:
 13343                           
 13344                           ;i2c_slave.c: 106: slaveData[currentRegister] = value;
 13345     0EAC  0877               	movf	_currentRegister,w
 13346     0EAD  3E20               	addlw	(low (_slaveData| (0+256)))& (0+255)
 13347     0EAE  0086               	movwf	6
 13348     0EAF  3001               	movlw	1	; select bank2/3
 13349     0EB0  0087               	movwf	7
 13350     0EB1  0873               	movf	i2c_slave_interrupt@value,w
 13351     0EB2  0081               	movwf	1
 13352     0EB3                     i1l3609:
 13353                           
 13354                           ;i2c_slave.c: 107: };i2c_slave.c: 108: currentState = 0;
 13355     0EB3  01F6               	clrf	_currentState
 13356                           
 13357                           ;i2c_slave.c: 109: break;
 13358     0EB4  2EC0               	goto	i1l294
 13359     0EB5                     i1l3613:
 13360     0EB5  0876               	movf	_currentState,w
 13361                           
 13362                           ; Switch size 1, requested type "simple"
 13363                           ; Number of cases is 3, Range of values is 0 to 2
 13364                           ; switch strategies available:
 13365                           ; Name         Instructions Cycles
 13366                           ; simple_byte           10     6 (average)
 13367                           ; direct_byte           12     6 (fixed)
 13368                           ; jumptable            260     6 (fixed)
 13369                           ;	Chosen strategy is simple_byte
 13370     0EB6  3A00               	xorlw	0	; case 0
 13371     0EB7  1903               	skipnz
 13372     0EB8  2E9D               	goto	i1l296
 13373     0EB9  3A01               	xorlw	1	; case 1
 13374     0EBA  1903               	skipnz
 13375     0EBB  2EA0               	goto	i1l3601
 13376     0EBC  3A03               	xorlw	3	; case 2
 13377     0EBD  1903               	skipnz
 13378     0EBE  2EA6               	goto	i1l3605
 13379     0EBF  2EC0               	goto	i1l294
 13380     0EC0                     i1l294:
 13381                           
 13382                           ;i2c_slave.c: 114: };i2c_slave.c: 117: SSP1CON1bits.CKP = 1;
 13383     0EC0  1610               	bsf	16,4	;volatile
 13384     0EC1                     i1l291:
 13385     0EC1  0008               	return
 13386     0EC2                     __end_of_i2c_slave_interrupt:
 13387     007E                     btemp	set	126	;btemp
 13388     007E                     int$flags	set	126
 13389     007E                     wtemp0	set	126
 13390                           
 13391                           	psect	idloc
 13392                           
 13393                           ;Config register IDLOC0 @ 0x8000
 13394                           ;	unspecified, using default values
 13395     8000                     	org	32768
 13396     8000  3FFF               	dw	16383
 13397                           
 13398                           ;Config register IDLOC1 @ 0x8001
 13399                           ;	unspecified, using default values
 13400     8001                     	org	32769
 13401     8001  3FFF               	dw	16383
 13402                           
 13403                           ;Config register IDLOC2 @ 0x8002
 13404                           ;	unspecified, using default values
 13405     8002                     	org	32770
 13406     8002  3FFF               	dw	16383
 13407                           
 13408                           ;Config register IDLOC3 @ 0x8003
 13409                           ;	unspecified, using default values
 13410     8003                     	org	32771
 13411     8003  3FFF               	dw	16383
 13412                           
 13413                           	psect	config
 13414                           
 13415                           ;Config register CONFIG1 @ 0x8007
 13416                           ;	External Oscillator mode selection bits
 13417                           ;	FEXTOSC = OFF, Oscillator not enabled
 13418                           ;	Power-up default value for COSC bits
 13419                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 13420                           ;	Clock Out Enable bit
 13421                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 13422                           ;	Clock Switch Enable bit
 13423                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
 13424                           ;	Fail-Safe Clock Monitor Enable bit
 13425                           ;	FCMEN = OFF, FSCM timer disabled
 13426     8007                     	org	32775
 13427     8007  17EC               	dw	6124
 13428                           
 13429                           ;Config register CONFIG2 @ 0x8008
 13430                           ;	Master Clear Enable bit
 13431                           ;	MCLRE = OFF, MCLR pin function is port defined function
 13432                           ;	Power-up Timer Enable bit
 13433                           ;	PWRTS = OFF, PWRT disabled
 13434                           ;	Low-Power BOR enable bit
 13435                           ;	LPBOREN = OFF, ULPBOR disabled
 13436                           ;	Brown-out reset enable bits
 13437                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 13438                           ;	Brown-out Reset Voltage Selection
 13439                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 13440                           ;	Zero-cross detect disable
 13441                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 13442                           ;	Peripheral Pin Select one-way control
 13443                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 13444                           ;	Stack Overflow/Underflow Reset Enable bit
 13445                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 13446     8008                     	org	32776
 13447     8008  3FFE               	dw	16382
 13448                           
 13449                           ;Config register CONFIG3 @ 0x8009
 13450                           ;	WDT Period Select bits
 13451                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13452                           ;	WDT operating mode
 13453                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 13454                           ;	WDT Window Select bits
 13455                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13456                           ;	WDT input clock selector
 13457                           ;	WDTCCS = SC, Software Control
 13458     8009                     	org	32777
 13459     8009  3F9F               	dw	16287
 13460                           
 13461                           ;Config register CONFIG4 @ 0x800A
 13462                           ;	Boot Block Size Selection bits
 13463                           ;	BBSIZE = BB512, 512 words boot block size
 13464                           ;	Boot Block Enable bit
 13465                           ;	BBEN = OFF, Boot Block disabled
 13466                           ;	SAF Enable bit
 13467                           ;	SAFEN = OFF, SAF disabled
 13468                           ;	Application Block Write Protection bit
 13469                           ;	WRTAPP = OFF, Application Block not write protected
 13470                           ;	Boot Block Write Protection bit
 13471                           ;	WRTB = OFF, Boot Block not write protected
 13472                           ;	Configuration Register Write Protection bit
 13473                           ;	WRTC = OFF, Configuration Register not write protected
 13474                           ;	Data EEPROM write protection bit
 13475                           ;	WRTD = OFF, Data EEPROM NOT write protected
 13476                           ;	Storage Area Flash Write Protection bit
 13477                           ;	WRTSAF = OFF, SAF not write protected
 13478                           ;	Low Voltage Programming Enable bit
 13479                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 13480     800A                     	org	32778
 13481     800A  3FFF               	dw	16383
 13482                           
 13483                           ;Config register CONFIG5 @ 0x800B
 13484                           ;	UserNVM Program memory code protection bit
 13485                           ;	CP = ON, UserNVM code protection enabled
 13486     800B                     	org	32779
 13487     800B  3FFE               	dw	16382

Data Sizes:
    Strings     719
    Constant    18
    Data        2
    BSS         82
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     62      80
    BANK1            80     33      37
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> main@buffer(BANK1[3]), 

    printf$1520	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), STR_26(CODE[17]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_25(CODE[7]), printf@c(BANK0[1]), ?_printf(BANK0[2]), STR_19(CODE[6]), 
		 -> STR_18(CODE[9]), slaveData(BANK2[64]), STR_3(CODE[11]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 152
		 -> STR_24(CODE[33]), STR_23(CODE[33]), STR_22(CODE[34]), STR_21(CODE[43]), 
		 -> STR_20(CODE[43]), STR_17(CODE[24]), STR_16(CODE[33]), STR_15(CODE[43]), 
		 -> STR_14(CODE[17]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[6]), STR_5(CODE[152]), 
		 -> STR_4(CODE[148]), STR_2(CODE[9]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    as7341_power_enable$1190	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_19(CODE[6]), STR_18(CODE[9]), 

    dump_buffer@buffer	PTR const void  size(1) Largest target is 64
		 -> slaveData(BANK2[64]), 

    dump_buffer@p	PTR const unsigned char  size(1) Largest target is 64
		 -> slaveData(BANK2[64]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_i2c_slave_init
    _main->_i2c_slave_set_register
    _strtol->_isdigit
    _strtol->_isspace
    _strtol->_toupper
    _isalpha->_isupper
    _dump_buffer->_isprint
    _control_LED->_as7341_i2c_write
    _as7341_start_measurement->_as7341_i2c_write
    _set_GPIO_mode->_as7341_i2c_write
    _set_F5F8ClearNIR->_as7341_write_byte
    _set_F1F4ClearNIR->_as7341_write_byte
    _as7341_write_byte->_I2C_Write
    _enable_sp_en->_as7341_i2c_write
    _enable_smux->_as7341_i2c_write
    _as7341_smux_cmd_config->_as7341_i2c_write
    _as7341_config->_as7341_i2c_write
    _set_ATIME->_as7341_i2c_write
    _set_ASTEP->_as7341_i2c_write
    _set_AGAIN->_as7341_i2c_write
    _as7341_power_enable->_as7341_i2c_write
    _printf->___lwmod
    _printf->___wmul
    _printf->_isdigit
    _printf->_putch
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _as7341_enableLED->_as7341_i2c_write
    _set_bank->_as7341_i2c_write
    _as7341_i2c_write->_I2C_Write
    _as7341_i2c_read->_I2C_Read
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_slave_interrupt

Critical Paths under _main in BANK0

    _strtol->___lmul
    _readSpectralDataTwo->_get_channel_data
    _readSpectralDataOne->_get_channel_data
    _get_channel_data->_as7341_i2c_read
    _dump_memory_map->_dump_buffer
    _dump_buffer->_printf
    _control_LED->_set_bank
    _as7341_start_measurement->_printf
    _set_GPIO_mode->_as7341_i2c_read
    _set_GPIO_mode->_as7341_i2c_write
    _set_F5F8ClearNIR->_as7341_write_byte
    _set_F1F4ClearNIR->_as7341_write_byte
    _enable_sp_en->_as7341_i2c_read
    _enable_sp_en->_as7341_i2c_write
    _enable_smux->_as7341_i2c_read
    _enable_smux->_as7341_i2c_write
    _as7341_smux_cmd_config->_as7341_i2c_write
    _as7341_config->_set_bank
    _as7341_begin->_as7341_init
    _set_ATIME->_as7341_i2c_write
    _set_ASTEP->_as7341_i2c_write
    _set_AGAIN->_as7341_i2c_write
    _as7341_init->_as7341_power_enable
    _as7341_power_enable->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _as7341_enableLED->_set_bank
    _set_bank->_as7341_i2c_read
    _set_bank->_as7341_i2c_write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0  166349
                                             60 BANK0      2     2      0
                                              0 BANK1     33    33      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                       _as7341_begin
                   _as7341_enableLED
           _as7341_start_measurement
                     _calculate_diff
                        _control_LED
                    _dump_memory_map
                _get_ticks_with_lock
                    _i2c_master_init
                     _i2c_slave_init
             _i2c_slave_set_register
                             _printf
                _readSpectralDataOne
                _readSpectralDataTwo
                             _strtol
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (1) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _strtol                                              15    11      4    1979
                                             12 BANK0     15    11      4
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              2     2      0      67
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              2     2      0      90
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              2     2      0     229
                                              0 BANK0      2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _readSpectralDataTwo                                 25    13     12     618
                                             13 BANK0     25    13     12
                   _get_channel_data
 ---------------------------------------------------------------------------------
 (1) _readSpectralDataOne                                 25    13     12     618
                                             13 BANK0     25    13     12
                   _get_channel_data
 ---------------------------------------------------------------------------------
 (2) _get_channel_data                                    11     9      2     399
                                              2 BANK0     11     9      2
                    _as7341_i2c_read
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_set_register                               2     1      1    1184
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_ticks_with_lock                                  8     4      4      34
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _dump_memory_map                                      0     0      0    5691
                        _dump_buffer
 ---------------------------------------------------------------------------------
 (2) _dump_buffer                                         14    12      2    5691
                                             45 BANK0     14    12      2
                            _isprint
                             _printf
 ---------------------------------------------------------------------------------
 (3) _isprint                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _control_LED                                          4     3      1   14522
                                              4 BANK0      4     3      1
                   _as7341_i2c_write
                           _set_bank
 ---------------------------------------------------------------------------------
 (1) _calculate_diff                                      20    12      8     403
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (1) _as7341_start_measurement                             3     3      0   62775
                                             45 BANK0      3     3      0
                      _as7341_config
                    _as7341_i2c_read
                   _as7341_i2c_write
             _as7341_smux_cmd_config
                        _enable_smux
                       _enable_sp_en
                             _printf
                   _set_F1F4ClearNIR
                   _set_F5F8ClearNIR
                      _set_GPIO_mode
 ---------------------------------------------------------------------------------
 (2) _set_GPIO_mode                                        2     2      0    7292
                                              2 BANK0      2     2      0
                    _as7341_i2c_read
                   _as7341_i2c_write
 ---------------------------------------------------------------------------------
 (2) _set_F5F8ClearNIR                                     0     0      0    3724
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                  _as7341_write_byte
 ---------------------------------------------------------------------------------
 (2) _set_F1F4ClearNIR                                     0     0      0    3724
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                  _as7341_write_byte
 ---------------------------------------------------------------------------------
 (3) _as7341_write_byte                                    2     1      1    3693
                                              5 COMMON     1     0      1
                                              0 BANK0      1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _enable_sp_en                                         6     6      0    7261
                                              2 BANK0      6     6      0
                    _as7341_i2c_read
                   _as7341_i2c_write
 ---------------------------------------------------------------------------------
 (2) _enable_smux                                          2     2      0    7261
                                              2 BANK0      2     2      0
                    _as7341_i2c_read
                   _as7341_i2c_write
 ---------------------------------------------------------------------------------
 (2) _as7341_smux_cmd_config                               0     0      0    6967
                   _as7341_i2c_write
 ---------------------------------------------------------------------------------
 (2) _as7341_config                                        2     2      0   14559
                                              4 BANK0      2     2      0
                    _as7341_i2c_read
                   _as7341_i2c_write
                           _set_bank
 ---------------------------------------------------------------------------------
 (1) _as7341_begin                                         0     0      0   57645
                   _as7341_enableLED
                        _as7341_init
                             _printf
                          _set_AGAIN
                          _set_ASTEP
                          _set_ATIME
 ---------------------------------------------------------------------------------
 (2) _set_ATIME                                            1     1      0    6998
                                              2 BANK0      1     1      0
                   _as7341_i2c_write
 ---------------------------------------------------------------------------------
 (2) _set_ASTEP                                            5     3      2    7187
                                              2 BANK0      5     3      2
                   _as7341_i2c_write
 ---------------------------------------------------------------------------------
 (2) _set_AGAIN                                            1     1      0    7032
                                              2 BANK0      1     1      0
                   _as7341_i2c_write
 ---------------------------------------------------------------------------------
 (2) _as7341_init                                          6     6      0   17106
                                             54 BANK0      6     6      0
                    _as7341_i2c_read
                _as7341_power_enable
                             _printf
 ---------------------------------------------------------------------------------
 (3) _as7341_power_enable                                  9     9      0   12092
                                             45 BANK0      9     9      0
                    _as7341_i2c_read
                   _as7341_i2c_write
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              37    23     14    4726
                                             12 BANK0     33    19     14
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              5 COMMON     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _as7341_enableLED                                     3     3      0   14596
                                              4 BANK0      3     3      0
                    _as7341_i2c_read
                   _as7341_i2c_write
                           _set_bank
 ---------------------------------------------------------------------------------
 (2) _set_bank                                             2     2      0    7261
                                              2 BANK0      2     2      0
                    _as7341_i2c_read
                   _as7341_i2c_write
 ---------------------------------------------------------------------------------
 (3) _as7341_i2c_write                                     3     2      1    6967
                                              5 COMMON     1     0      1
                                              0 BANK0      2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _as7341_i2c_read                                      2     2      0     161
                                              0 BANK0      2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Read                                             2     2      0      65
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0      91
                _i2c_slave_interrupt
 ---------------------------------------------------------------------------------
 (8) _i2c_slave_interrupt                                  4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _as7341_begin
     _as7341_enableLED
       _as7341_i2c_read
         _I2C_Read
         _I2C_Start
         _I2C_Stop
           _I2C_Wait
         _I2C_Write
       _as7341_i2c_write
         _I2C_Start
         _I2C_Stop
         _I2C_Write
       _set_bank
         _as7341_i2c_read
         _as7341_i2c_write
     _as7341_init
       _as7341_i2c_read
       _as7341_power_enable
         _as7341_i2c_read
         _as7341_i2c_write
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
           _putch
             _EUSART1_Write
       _printf
     _printf
     _set_AGAIN
       _as7341_i2c_write
     _set_ASTEP
       _as7341_i2c_write
     _set_ATIME
       _as7341_i2c_write
   _as7341_enableLED
   _as7341_start_measurement
     _as7341_config
       _as7341_i2c_read
       _as7341_i2c_write
       _set_bank
     _as7341_i2c_read
     _as7341_i2c_write
     _as7341_smux_cmd_config
       _as7341_i2c_write
     _enable_smux
       _as7341_i2c_read
       _as7341_i2c_write
     _enable_sp_en
       _as7341_i2c_read
       _as7341_i2c_write
     _printf
     _set_F1F4ClearNIR
       _I2C_Start
       _I2C_Stop
       _I2C_Write
       _as7341_write_byte
         _I2C_Write
     _set_F5F8ClearNIR
       _I2C_Start
       _I2C_Stop
       _I2C_Write
       _as7341_write_byte
     _set_GPIO_mode
       _as7341_i2c_read
       _as7341_i2c_write
   _calculate_diff
   _control_LED
     _as7341_i2c_write
     _set_bank
   _dump_memory_map
     _dump_buffer
       _isprint
       _printf
   _get_ticks_with_lock
   _i2c_master_init
   _i2c_slave_init
   _i2c_slave_set_register
   _printf
   _readSpectralDataOne
     _get_channel_data
       _as7341_i2c_read
   _readSpectralDataTwo
     _get_channel_data
   _strtol
     ___lmul
     _isalpha
       _isupper
     _isdigit
     _isspace
     _toupper
   _tmr0_init

 _INTERRUPT_InterruptManager (ROOT)
   _i2c_slave_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      BF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3E      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     21      25       8       46.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Apr 14 14:11:56 2024

                      __end_of_as7341_enableLED 0C90                              set_ASTEP@low_value 0026  
                         __end_of_set_GPIO_mode 0B19                         as7341_power_enable@flag 0050  
                                            l41 0978                                              l35 0982  
                                            l38 0953                                              l88 0C29  
                           as7341_i2c_write@reg 0020                             ___wmul@multiplicand 0022  
               as7341_start_measurement@channel 004E                                             l201 09A2  
                                           l210 095C                                             l204 09AD  
                                           l221 09B7                                             l222 09B9  
                                           l207 0956                                             l143 0A56  
                                           l232 0AC3                                             l304 0996  
                                           l209 095A                                             l225 0A33  
                                           l234 0AC8                                             l235 0AD5  
                                           l219 09B3                                             l227 0A38  
                                           l148 0F16                                             l237 0ADA  
                                           l229 0A42                                             l238 0ADC  
                                           l511 0ABF                                             l271 0B37  
                                           l167 045A                                             l506 0BFE  
                                           l530 0FFF                                             l274 096E  
                                           l434 09C6                                             l347 0BDC  
                                           l371 0984                                             l419 0631  
                                           l195 09D4                                             l380 093D  
                                           l604 0D65                                             l533 07D6  
                                           l374 098C                                             l527 07FD  
                                           l392 0931                                             l536 09A1  
                                           l560 0D2E                                             l395 0937  
                                           l483 0BBA                                             l563 0E2C  
                                           l549 0F86                                             l398 092B  
                                           l494 0DBE                                             l582 0965  
                                           l574 0B18                                             l566 0E71  
                                           l912 028B                                             l488 0C5B  
                                           l585 0AA4                                             l569 094A  
                                           l850 0059                                             l930 0CC3  
                                           l675 0B99                                             l579 0A89  
                                           l499 0DE7                                             l916 0B43  
                                           l860 00A7                                             l597 0C8F  
                                           l861 00A8                                             l589 09E5  
                                           l918 0B57                                             l679 0B78  
                                           l881 0153                                             l886 0182  
                                           _GIE 005F                            as7341_i2c_write@data 0021  
                                           _ack 0078                        as7341_power_enable@state 004F  
                          as7341_init@as7341_id 005B                                             wreg 0009  
                                  ?_control_LED 0024                                            l1420 0A6E  
                                          l1415 0AF9                                            l1408 056A  
                                          l3201 0C08                                            l1425 0A1B  
                                          l3211 0C0E                                            l3203 0C09  
                                          l1188 0DA2                                            l3221 0C19  
                                          l3213 0C10                                            l3205 0C0A  
                                          l3141 0A06                                            l1429 0A2E  
                                          l1198 0CF8                                            l1374 0A09  
                                          l3311 092C                                            l3231 0C27  
                                          l3223 0C1C                                            l3215 0C12  
                                          l3207 0C0B                                            l3143 0A08  
                                          l3135 09F9                                            l3313 0932  
                                          l3233 094B                                            l3225 0C1F  
                                          l3217 0C14                                            l3209 0C0C  
                                          l1369 09F7                                            l3137 09FA  
                                          l1385 0463                                            l3315 0926  
                                          l3235 094E                                            l3227 0C22  
                                          l3219 0C16                                            l4131 09A7  
                                          l4211 005A                                            l4203 0046  
                                          l3139 0A00                                            l3237 094F  
                                          l3229 0C24                                            l4133 0954  
                                          l4141 0A3E                                            l4301 01BA  
                                          l4221 0076                                            l4205 004A  
                                          l3239 0952                                            l3191 096F  
                                          l4151 0AC1                                            l4135 09AE  
                                          l4143 0A3F                                            l4311 01DB  
                                          l4303 01C5                                            l4231 00B1  
                                          l4223 0087                                            l4215 005E  
                                          l4207 0050                                            l3193 0BFF  
                                          l4153 0AC9                                            l4129 09A2  
                                          l4137 09B1                                            l4313 01DF  
                                          l4321 0200                                            l4305 01CE  
                                          l4241 00C6                                            l4233 00B5  
                                          l4225 0096                                            l4217 0067  
                                          l4209 0055                                            l4401 0DE1  
                                          l3521 0A5A                                            l3195 0C03  
                                          l4155 0ACC                                            l4147 0A41  
                                          l4139 0A30                                            l4411 0A83  
                                          l4403 0A71                                            l4171 0B4D  
                                          l4163 0B38                                            l4331 024F  
                                          l4323 0203                                            l4315 01EB  
                                          l4307 01D1                                            l4251 00E7  
                                          l4243 00D1                                            l4235 00BB  
                                          l4227 009A                                            l4219 0073  
                                          l3523 0A60                                            l3197 0C05  
                                          l4157 0AD4                                            l4405 0A77  
                                          l4181 0D6F                                            l4173 0B53  
                                          l4165 0B3A                                            l4333 0253  
                                          l4325 022B                                            l4341 026E  
                                          l4317 01F1                                            l4309 01D5  
                                          l4261 0114                                            l4253 00F5  
                                          l4245 00DB                                            l4237 00BF  
                                          l4229 00AA                                            l4501 0C37  
                                          l4413 0999                                            l4421 0A18  
                                          l3525 0A66                                            l3621 09C2  
                                          l3631 0BCC                                            l3199 0C07  
                                          l4159 0ADB                                            l4351 0B69  
                                          l4407 0A7C                                            l4431 0C63  
                                          l4191 0D8E                                            l4183 0D72  
                                          l4167 0B3F                                            l4327 0246  
                                          l4319 01F5                                            l4263 0118  
                                          l4255 00FD                                            l4247 00E0  
                                          l4239 00C2                                            l4271 0126  
                                          l4343 0278                                            l4503 0C3F  
                                          l4511 0A8A                                            l4423 0A1A  
                                          l4415 0A0B                                            l3527 0A6C  
                                          l3519 0A58                                            l3551 0A29  
                                          l3623 09C3                                            l3615 09BA  
                                          l3633 0BD3                                            l3625 0BBB  
                                          l3561 097F                                            l4353 0B6D  
                                          l4345 0B5A                                            l4361 0B7B  
                                          l4409 0A80                                            l4441 0C7E  
                                          l4433 0C69                                            l4193 0D92  
                                          l4185 0D77                                            l4177 0D66  
                                          l4169 0B48                                            l4337 0261  
                                          l4329 024A                                            l4281 015C  
                                          l4265 011C                                            l4257 0102  
                                          l4249 00E3                                            l4273 0147  
                                          l4505 0C43                                            l4521 09D7  
                                          l4513 0A8D                                            l4601 0FEB  
                                          l3641 09D0                                            l4417 0A0C  
                                          l3529 0A6D                                            l3553 0A2D  
                                          l3617 09BF                                            l3635 0BDA  
                                          l3627 0BC4                                            l4355 0B73  
                                          l4347 0B5D                                            l4371 0B90  
                                          l4363 0B7E                                            l4443 0C84  
                                          l4435 0C6F                                            l4427 0C5E  
                                          l4195 0D93                                            l4187 0D7B  
                                          l4179 0D69                                            l4339 026A  
                                          l4291 018B                                            l4275 014E  
                                          l4267 0121                                            l4259 010F  
                                          l4507 0C46                                            l4523 09DD  
                                          l4515 0A8F                                            l4531 0BEA  
                                          l4603 0FF1                                            l4611 0761  
                                          l4451 0572                                            l3643 09D1  
                                          l3651 0B1F                                            l4419 0A12  
                                          l3547 0A1D                                            l3619 09C0  
                                          l3629 0BC5                                            l3557 0979  
                                          l4357 0B76                                            l4349 0B61  
                                          l4373 0B96                                            l4365 0B82  
                                          l4445 0C8B                                            l4437 0C74  
                                          l4429 0C5F                                            l4197 0D98  
                                          l4189 0D7F                                            l2941 0CD7  
                                          l2933 0CC4                                            l2845 0984  
                                          l4285 0177                                            l4277 0155  
                                          l4525 09DF                                            l4517 0A95  
                                          l4509 095F                                            l4541 0AB2  
                                          l4533 0BF3                                            l4605 0FF6  
                                          l4621 077A                                            l4613 0765  
                                          l4461 0590                                            l4453 057D  
                                          l3637 09C7                                            l3653 0B21  
                                          l3645 0B19                                            l4701 0AE1  
                                          l3549 0A23                                            l3559 097C  
                                          l4367 0B87                                            l4439 0C78  
                                          l4199 0D9E                                            l2943 0CDB  
                                          l2935 0CCB                                            l2951 0CF4  
                                          l2847 0989                                            l4295 01A6  
                                          l4287 0184                                            l4391 0DC0  
                                          l4383 0DA5                                            l4519 0A9C  
                                          l4551 07DD                                            l4543 0AB6  
                                          l4535 0BF8                                            l4527 0BDF  
                                          l4607 0FFC                                            l4631 0797  
                                          l4623 0780                                            l4615 076A  
                                          l4471 05C5                                            l4463 05A9  
                                          l4447 056D                                            l3639 09CD  
                                          l3663 0B27                                            l3655 0B23  
                                          l3647 0B1B                                            l4703 0AE7  
                                          l4369 0B8D                                            l2945 0CE5  
                                          l2937 0CCE                                            l2881 09E7  
                                          l4393 0DC8                                            l4385 0DAB  
                                          l4553 07E4                                            l4561 07F2  
                                          l4545 0AB9                                            l4537 0AA7  
                                          l4529 0BE5                                            l4641 07B2  
                                          l4633 079D                                            l4625 0785  
                                          l4617 076F                                            l4609 075E  
                                          l4801 0F6E                                            l4721 0EC2  
                                          l4481 05EA                                            l4465 05B0  
                                          l4449 056F                                            l4713 0A43  
                                          l3665 0B2D                                            l3657 0B25  
                                          l3649 0B1D                                            l3761 0967  
                                          l4705 0AED                                            l4379 0B98  
                                          l2947 0CE9                                            l2939 0CD3  
                                          l2883 09E8                                            l4299 01B1  
                                          l4395 0DCD                                            l4387 0DB0  
                                          l4731 0B9A                                            l4555 07E8  
                                          l4547 07D9                                            l4539 0AAD  
                                          l4571 0F9A                                            l4563 0F87  
                                          l4651 07CD                                            l4643 07B8  
                                          l4635 07A3                                            l4627 078B  
                                          l4619 0774                                            l4803 0F75  
                                          l4723 0ED5                                            l4491 061B  
                                          l4483 05F0                                            l4467 05B5  
                                          l4459 0580                                            l4715 0A44  
                                          l3667 0B31                                            l4811 0DE8  
                                          l4707 0AF5                                            l2949 0CEE  
                                          l2885 09EE                                            l4397 0DD2  
                                          l4389 0DB9                                            l4733 0B9E  
                                          l4557 07ED                                            l4549 07D9  
                                          l4581 0FB4                                            l4573 0F9F  
                                          l4565 0F8A                                            l4653 07D3  
                                          l4645 07BD                                            l4637 07A8  
                                          l4629 0791                                            l4661 0B07  
                                          l4805 0F79                                            l4725 0EEA  
                                          l4741 0D31                                            l4493 0622  
                                          l4485 0602                                            l4477 05C8  
                                          l4469 05BE                                            l4717 0A4D  
                                          l4813 0E1E                                            l4709 0AF7  
                                          l2887 09F4                                            l2879 0939  
                                          l4399 0DD6                                            l4735 0BA2  
                                          l4655 0944                                            l4591 0FCE  
                                          l4583 0FB9                                            l4575 0FA4  
                                          l4567 0F8E                                            l4647 07C2  
                                          l4639 07AD                                            l4663 0B0A  
                                          l4807 0F7D                                            l4727 0F0E  
                                          l4751 0D40                                            l4743 0D31  
                                          l4479 05D8                                            l4487 060D  
                                          l4495 0627                                            l4671 0CFB  
                                          l4903 0562                                            l4831 047F  
                                          l4823 0463                                            l4911 0295  
                                          l2889 09F6                                            l4497 0C2C  
                                          l4737 0BAA                                            l4593 0FD4  
                                          l4585 0FBF                                            l4577 0FA9  
                                          l4569 0F94                                            l4649 07C8  
                                          l4665 0B0F                                            l4657 0AFC  
                                          l4761 0D52                                            l4753 0D42  
                                          l4745 0D36                                            l4489 0612  
                                          l4681 0D29                                            l4673 0D07  
                                          l4817 0E2D                                            l4841 0492  
                                          l4833 0480                                            l4825 0469  
                                          l4921 02A3                                            l4913 029D  
                                          l4499 0C32                                            l4739 0BAE  
                                          l4595 0FDA                                            l4587 0FC4  
                                          l4579 0FAF                                            l4667 0B12  
                                          l4659 0B02                                            l4771 0F22  
                                          l4763 0D58                                            l4755 0D46  
                                          l4747 0D38                                            l4907 098D  
                                          l4675 0D13                                            l4819 0E63  
                                          l4691 0CA5                                            l4851 04A4  
                                          l4835 0486                                            l4827 046D  
                                          l4931 02C0                                            l4923 02A6  
                                          l4915 029F                                 ?_calculate_diff 0020  
                                          l4597 0FDF                                            l4589 0FC9  
                                          l4781 0F3C                                            l4773 0F28  
                                          l4765 0F19                                            l4757 0D4C  
                                          l4749 0D3A                                            l4677 0D17  
                                          l4669 0CFB                                            l4693 0CAC  
                                          l4685 0C90                                            l4861 04C1  
                                          l4853 04A8                                            l4837 0488  
                                          l4829 0476                                            l4941 0318  
                                          l4933 02C4                                            l4925 02A9  
                                          l4917 02A1                                            l4909 028C  
                                          l4599 0FE5                                            l4791 0F53  
                                          l4783 0F40                                            l4775 0F2C  
                                          l4767 0F19                                            l4759 0D50  
                                          l4679 0D20                                            l4695 0CBB  
                                          l4687 0C99                                            l4863 04C5  
                                          l4855 04AE                                            l4871 04D9  
                                          l4847 0499                                            l4839 048D  
                                          l4951 03BC                                            l4943 031C  
                                          l4935 02CB                                            l4927 02B1  
                                          l4919 02A2                                            l4793 0F59  
                                          l4785 0F45                                            l4777 0F2F  
                                          l4769 0F1F                                            l4689 0C9D  
                                          l4881 04FD                                            l4873 04DF  
                                          l4865 04CA                                            l4857 04B5  
                                          l4849 049F                                            l4961 03DF  
                                          l4953 03C3                                            l4945 032E  
                                          l4937 02DE                                            l4929 02BD  
                                          l4795 0F60                                            l4787 0F4C  
                                          l4779 0F35                                            l4699 0ADF  
                                          l4891 053C                                            l4883 0500  
                                          l4875 04E3                                            l4859 04BB  
                                          l4867 04CF                                            l4971 0402  
                                          l4963 03E6                                            l4955 03CA  
                                          l4947 0365                                            l4939 030F  
                                          l4797 0F64                                            l4789 0F4F  
                                          l4893 0541                                            l4877 04EB  
                                          l4869 04D5                                            l4973 0409  
                                          l4965 03ED                                            l4957 03D1  
                                          l4949 03BB                                            l4799 0F69  
                                          l4895 0547                                            l4887 050C  
                                          l4879 04F4                                            l4991 044E  
                                          l4983 0418                                            l4975 0410  
                                          l4967 03F4                                            l4959 03D8  
                                          l4897 054D                                            l4889 0537  
                                          l4993 0454                                            l4985 0438  
                                          l4977 0416                                            l4969 03FB  
                                          l4899 0552                                            l4995 045B  
                                          l4987 0439                                            l4989 0447  
                                          STR_1 111E                                            STR_2 1184  
                                          STR_3 1166                                            STR_4 06CA  
                                          STR_5 0632                                            _GAIN 006F  
                                          STR_6 1166                                            STR_7 1166  
                                          STR_8 11A2                                            STR_9 11A8  
                                          u3000 01C5                                            u2120 0A60  
                                          u3001 01C4                                            u2121 0A5F  
                                          u3010 01D5                                            u2130 0A66  
                                          u3011 01D4                                            u2131 0A65  
                                          u3020 01DB                                            u3100 0DB0  
                                          u2140 0A6C                                            u3021 01DA  
                                          u3005 01C1                                            u3101 0DAF  
                                          u2141 0A6B                                            _LATA 0018  
                                          u3030 01EA                                            u3110 0DCD  
                                          u3031 01E9                                            u3111 0DCC  
                                          _LATC 001A                                            u3120 0A7C  
                                          u1600 0CDB                                            u1360 0989  
                                          u3040 01F1                                            u3200 061B  
                                          u3121 0A7B                                            u1601 0CDA  
                                          u1361 0988                                            u3041 01F0  
                                          u3201 061A                                            u1610 0CE5  
                                          u1450 09EE                                            u3050 0200  
                                          u3210 0631                                            u2250 0B37  
                                          u3130 0A12                                            u1611 0CE4  
                                          u1451 09ED                                            u3051 01FF  
                                          u3211 0630                                            u2251 0B36  
                                          u3131 0A11                                            u1460 09F4  
                                          u3060 024A                                            u3220 0C37  
                                          u3140 0A18                                            u2180 0A23  
                                          u1461 09F3                                            u3061 0249  
                                          u3221 0C36                                            u3141 0A17  
                                          u2181 0A22                                            u3150 0C74  
                                          u1630 0CF4                                            u3070 0278  
                                          u3230 09DD                                            u3310 0CBB  
                                          u2190 0A29                                            u3151 0C73  
                                          u1631 0CF3                                            u1615 0CE1  
                                          u3071 0277                                            u3231 09DC  
                                          u3215 062D                                            u3311 0CBA  
                                          u2191 0A28                                            u3080 028B  
                                          u3240 0BEA                                            u3400 0F45  
                                          u3160 0590                                            u3320 0AE7  
                                          u1625 0CEA                                            u3081 028A  
                                          u3241 0BE9                                            u3401 0F44  
                                          u3161 058F                                            u3305 0CAD  
                                          u3321 0AE6                                            u3090 0B96  
                                          u3250 0AB2                                            u3410 0F59  
                                          u3170 05BE                                            u3330 0AED  
                                          u3091 0B95                                            u3251 0AB1  
                                          u3411 0F58                                            u3171 05BD  
                                          u3331 0AEC                                            u2700 0A3E  
                                          u1580 0CCB                                            u3260 0B07  
                                          u3420 0F6E                                            u3180 05D8  
                                          u3340 0AF5                                            u3500 04B5  
                                          u2701 0A3D                                            u1581 0CCA  
                                          u3261 0B06                                            u3421 0F6D  
                                          u3181 05D7                                            u3165 058C  
                                          u3341 0AF4                                            u3501 04B4  
                                          u2710 0AC8                                            u3270 0B0F  
                                          u3350 0ED5                                            u3190 05EA  
                                          u3430 0E28                                            u3510 04BB  
                                          u2711 0AC7                                            u3271 0B0E  
                                          u3351 0ED4                                            u3191 05E9  
                                          u3511 04BA                                            u2720 0AD2  
                                          u3360 0D36                                            u3440 0E6D  
                                          u3280 0C9D                                            u3520 04C1  
                                          u3600 030F                                            u2721 0ACF  
                                          u3361 0D35                                            u3185 05D4  
                                          u3281 0C9C                                            u3521 04C0  
                                          u3601 030E                                            u2650 09A7  
                                          u2810 0D7F                                            u3370 0D40  
                                          u3530 04D5                                            u3450 0476  
                                          u3610 032A                                            u2651 09A6  
                                          u2811 0D7E                                            u1595 0CCF  
                                          u3355 0ED1                                            u3371 0D3F  
                                          u3531 04D4                                            u3451 0474  
                                          u2740 0ADA                                            u2660 09AD  
                                          u2900 00D1                                            u3380 0D4C  
                                          u3540 04DF                                            u3460 0486  
                                          u3620 0380                                            u2741 0AD9  
                                          u2661 09AC                                            u2805 0D73  
                                          u2901 00D0                                            u3381 0D4B  
                                          u3541 04DE                                            u3461 0485  
                                          u2734 0AD4                                            u2670 095A  
                                          u2830 0D8E                                            u2750 0B3F  
                                          u2910 00DB                                            u3390 0F35  
                                          u3550 04EB                                            u3470 0498  
                                          u3630 045A                                            u2671 0959  
                                          u2831 0D8D                                            u2751 0B3E  
                                          u2911 00DA                                            u3391 0F34  
                                          u3295 0CA6                                            u3551 04EA  
                                          u3471 0497                                            u3631 0459  
                                          u2680 09B7                                            u2920 00F4  
                                          u1880 0A00                                            u3560 04FD  
                                          u3480 049F                                            u2681 09B6  
                                          u2825 0D80                                            u2921 00F3  
                                          u1881 09FF                                            u3561 04FC  
                                          u3481 049E                                            u2690 0A38  
                                          u2850 0D9E                                            u2930 010E  
                                          u1890 0A06                                            u3570 050B  
                                          u3490 04AE                                            u2691 0A37  
                                          u2851 0D9D                                            u2835 0D8A  
                                          u2931 010D                                            u2915 00D7  
                                          u1891 0A05                                            u3571 050A  
                                          u3491 04AD                                            u2780 0B53  
                                          u2940 015B                                            u2860 0050  
                                          u3580 0547                                            _PMD0 0796  
                                          u2845 0D94                                            u2781 0B52  
                                          u2765 0B44                                            u2941 015A  
                                          u2861 004F                                            u3581 0546  
                                          u3717 0299                                            _PMD1 0797  
                                          u2790 0D6F                                            u2950 0176  
                                          u2870 0073                                            u3590 0552  
                                          _PMD2 0798                                            u2791 0D6E  
                                          u2775 0B49                                            u2951 0175  
                                          u2871 0072                                            u3591 0551  
                                          u3575 0507                                            u3727 0369  
                                          _PMD3 0799                                            u2960 0181  
                                          u2880 00A6                                            _PMD4 079A  
                                          u2961 0180                                            u2881 00A5  
                                          u3737 0D24                                            _PMD5 079B  
                                          u2970 018A                                            u2890 00BB  
                                          _PMD6 079C                                            u2971 0189  
                                          u2955 0172                                            u2891 00BA  
                                          u3747 0D5C                                            _PMD7 079D  
                                          u2980 01A5                                            u2981 01A4  
                                          u3757 0F81                                            u2990 01B0  
                                          u2991 01AF                                            u3767 0AA0  
                                          u2985 01A1                                            _WPUA 1F39  
                                          _WPUC 1F4F                                   _EUSART1_Write 0983  
                           _readSpectralDataOne 0DE8                             _readSpectralDataTwo 0E2D  
                                          _nack 0079                                            _main 028C  
                              __end_of_I2C_Read 0ADD                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                              __end_of_I2C_Wait 09AE                           as7341_i2c_write@value 0075  
                              __end_of_I2C_Stop 09BA                                _get_channel_data 0CF9  
                                          start 0020                                    ?_dump_buffer 004D  
                     ?_as7341_start_measurement 0070                            ?_readSpectralDataOne 002D  
                              _set_F1F4ClearNIR 0F87                            ?_readSpectralDataTwo 002D  
                 __end_of_OSCILLATOR_Initialize 0954                                ?_as7341_i2c_read 0070  
                                         ?_main 0070                                           STR_10 11AE  
                                         STR_11 11AF                                           STR_12 11B2  
                                         STR_20 1000                                           STR_13 10C1  
                                         STR_21 102B                                           STR_14 1155  
                                         STR_22 1081                                           STR_23 10A3  
                                         STR_15 1056                                           STR_24 10E5  
                                         STR_16 10C4                                           STR_25 1195  
                                         STR_17 1106                                           STR_18 117B  
                                         STR_26 1133                                           STR_19 119C  
                                         STR_27 1144                                 __end_of___lwdiv 0DA3  
                                         i1l155 001E                                 __end_of___lwmod 0CF9  
                                         i1l291 0EC1                                           i1l294 0EC0  
                                         i1l296 0E9D                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _TRISA 0012                                           _TRISC 0014  
                           ___lmul@multiplicand 0024                         __end_of_dump_memory_map 0997  
                                 ??_as7341_init 0056                                 __end_of_dpowers 117B  
                               __end_of_isalpha 0AFA                                 __end_of_isdigit 09F8  
                                         _ticks 0062                                           _putch 0938  
                                         main@i 00A8                                 __end_of_isspace 0A6F  
                             __end_of_I2C_Start 095D                                  ?_EUSART1_Write 0070  
                               __end_of_isprint 0A0A                               __end_of_I2C_Write 0A43  
                               __end_of_isupper 0A1C                                           status 0003  
                                         wtemp0 007E                                 __end_of_toupper 0A2F  
            _EUSART1_DefaultFramingErrorHandler 0000                                 __initialization 0022  
                    __end_of_EUSART1_Initialize 0BDD                                    __end_of_main 0461  
                        _as7341_smux_cmd_config 0944                                   ?_as7341_begin 0070  
                         ??_readSpectralDataOne 0039                           ??_readSpectralDataTwo 0039  
                   ?_INTERRUPT_InterruptManager 0070                                          ??_main 005C  
                       readSpectralDataOne@data 003A                       i2c_slave_interrupt@isNack 0072  
                     i2c_slave_interrupt@isRead 0071                            __end_of_enable_sp_en 0BFF  
                                _i2c_slave_init 0B19                                       I2C_Read@a 0074  
                              _set_F5F8ClearNIR 075E                                          _ACKEN2 0CDC  
                                        _ACKDT2 0CDD                               ?_as7341_i2c_write 0075  
                                        _ANSELA 1F38                                          ?_putch 0070  
                                        _ANSELC 1F4E                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RC0PPS 1F20                                          _RC1PPS 1F21  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC4PPS 1F24                                          _RC5PPS 1F25  
                       readSpectralDataTwo@data 003A                                          _ODCONA 1F3A  
                                        _ODCONC 1F50                                          i1l3601 0EA0  
                                        i1l3603 0EA3                                          i1l3605 0EA6  
                                        i1l3613 0EB5                                          i1l3607 0EAC  
                                        i1l3609 0EB3                                          i1l3581 0E72  
                                        i1l3591 0E87                                          i1l3583 0E7B  
                                        i1l3593 0E8E                                          i1l3585 0E80  
                                        i1l3595 0E92                                          i1l3597 0E98  
                                        i1l3589 0E82                                          i1l3599 0E9A  
                                        i1l3871 0015                                          u221_20 0E80  
                                        u221_21 0E7F                                          i1l3873 001A  
                                        i1l3865 0006                                          i1l3875 001B  
                                        i1l3867 000B                                          i1l3869 000C  
                                        u222_20 0E87                                          u222_21 0E86  
                                        u223_20 0E98                                          u223_21 0E97  
                                        u224_20 0EAC                                          u224_21 0EAB  
                                        _INLVLA 1F3C                                          _INLVLC 1F52  
                                        u252_20 000B                                          u252_21 000A  
                                        u253_20 001A                                          u253_21 0019  
                           _i2c_slave_interrupt 0E72                              ??_as7341_i2c_write 0076  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                             __end_of_as7341_init 0C5C  
                                set_AGAIN@value 0022                                  ??_as7341_begin 0076  
                                        ___lmul 0C90                                          ___wmul 0B38  
                               _i2c_master_init 09C7                                       ??___lwdiv 0074  
                   __end_of_as7341_power_enable 0DE8                                       ??___lwmod 0075  
                      ?_EUSART1_SetErrorHandler 0074                            ?_i2c_slave_interrupt 0070  
                                        _printf 0046                ??_EUSART1_SetOverrunErrorHandler 0076  
               ?_EUSART1_SetOverrunErrorHandler 0074                                 _currentRegister 0077  
                        __end_of_i2c_slave_init 0B38                                          _strtol 0461  
                                 _as7341_config 07D7                                __end_of_set_bank 0A8A  
                                _PMD_Initialize 096F                                    __pdataCOMMON 0079  
                                     ??_isalpha 0076                                       ??_isdigit 0074  
                                     ?_I2C_Read 0070                                       ?_I2C_Wait 0070  
                                     ?_I2C_Stop 0070                                       ??_isspace 0074  
                                     ??_isprint 0074                                       ??_isupper 0074  
                   i2c_slave_set_register@value 0074                                ?_dump_memory_map 0070  
                               ??_EUSART1_Write 0074                                       ??_toupper 0074  
                                set_bank@regVal 0023                               _SYSTEM_Initialize 0979  
                       __end_of__initialization 0042                            as7341_enableLED@data 0026  
                            ?_SYSTEM_Initialize 0070                                  __pcstackCOMMON 0070  
                                  __pidataBANK0 07FF                             ??_SYSTEM_Initialize 0074  
                             ?_as7341_enableLED 0070                           ??_i2c_slave_interrupt 0070  
                                 __end_of_putch 093E                              ??_as7341_enableLED 0076  
                        __end_of_PMD_Initialize 0979                                  ?_as7341_config 0070  
                               ?_i2c_slave_init 0070                        __end_of_get_channel_data 0D2F  
                                    ??_I2C_Read 0074                                      ??_I2C_Wait 0074  
                              ??_calculate_diff 0028                                      ??_I2C_Stop 0074  
                                   _as7341_init 0C2A                       __end_of_SYSTEM_Initialize 0983  
                                       ??_putch 0075                                      __pbssBANK0 005E  
                                    __pbssBANK1 00C1                                      __pbssBANK2 0120  
                      __end_of_set_F1F4ClearNIR 1000                __end_of_as7341_start_measurement 0F87  
                       __end_of_i2c_master_init 09D5                 __end_of_EUSART1_SetErrorHandler 092C  
                                    __pmaintext 028C                                    I2C_Read@temp 0075  
                                       ?___lmul 0020                                         ?___wmul 0020  
                        as7341_write_byte@value 0075                                      __pintentry 0004  
                                set_ATIME@value 0022                             _get_ticks_with_lock 0A43  
                                ___lmul@product 0028                                         ?_printf 002C  
                               ?_PMD_Initialize 0070          __end_of_EUSART1_SetFramingErrorHandler 0932  
                _EUSART1_SetFramingErrorHandler 092C                                         ?_strtol 002C  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                      ??_i2c_slave_set_register 0075                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                    dump_buffer@i 0057  
                                  dump_buffer@j 0059                                    dump_buffer@p 0056  
                          get_channel_data@data 0026                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SSP2ADD 0197  
                                       _SLRCONA 1F3B                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                                         _SSP2BUF 0196  
                                       _SSP1MSK 018E                            __end_of_as7341_begin 0BBB  
                          ?_get_ticks_with_lock 0020                                  set_ASTEP@value 0022  
                                     _I2C_Start 0954                                       _I2C_Write 0A2F  
                                  _enable_sp_en 0BDD                         ?_as7341_smux_cmd_config 0070  
                                     ?_set_bank 0070                        __end_of_set_F5F8ClearNIR 07D7  
                  as7341_start_measurement@data 004F                                         ___lwdiv 0D66  
                                       ___lwmod 0CC4                                 ??_as7341_config 0076  
                                       __ptext1 09BA                                         __ptext2 0461  
                                       __ptext3 0A1C                                         __ptext4 0A57  
                                       __ptext5 0ADD                                         __ptext6 0A0A  
                                       __ptext7 0C90                                         __ptext8 0E2D  
                                       __ptext9 0DE8                               __end_of_hexpowers 1195  
                                       _dpowers 1171                           _OSCILLATOR_Initialize 094B  
                                       _isalpha 0ADD                        _as7341_power_enable$1190 0053  
                                       _isdigit 09E6                        _as7341_power_enable$1184 0051  
         i2c_slave_set_register@registerAddress 0075                              _EUSART1_Initialize 0BBB  
                      ??_PIN_MANAGER_Initialize 0074                                         _isspace 0A57  
                                       _isprint 09F8                                         _isupper 0A0A  
                             __end_of_set_AGAIN 09E6                               __end_of_set_ATIME 0966  
                             __end_of_set_ASTEP 0AA5                           ??_get_ticks_with_lock 0074  
                                       clrloop0 093F                                         main@now 00A4  
                                       _toupper 0A1C                            end_of_initialization 0042  
                             __end_of_tmr0_init 09C7                             ?_EUSART1_Initialize 0070  
                             as7341_config@data 0025                               as7341_config@mode 0024  
                   _EUSART1_OverrunErrorHandler 006B                  __end_of_as7341_smux_cmd_config 094B  
                                    ?_I2C_Start 0070                                      ?_I2C_Write 0070  
                      calculate_diff@prev_ticks 0024                                ?_i2c_master_init 0070  
                   __end_of_readSpectralDataOne 0E2D                                      ??_set_bank 0076  
                   __end_of_readSpectralDataTwo 0E72                        _as7341_start_measurement 0F17  
                                       printf@c 004C                                         printf@f 002C  
                          ??_EUSART1_Initialize 0076                              control_LED@current 0024  
                                 _set_GPIO_mode 0AFA                                         strtol@a 0035  
                                       strtol@c 003A                                         strtol@s 0039  
                                 ??_enable_smux 0076                               enable_sp_en@state 0024  
                                     _TRISCbits 0014                                    strtol@endptr 002C  
                         as7341_enableLED@data1 0025                             EUSART1_Write@txData 0074  
                         as7341_enableLED@state 0024                                      main@buffer 00A1  
                                   printf@width 004A                     get_channel_data@channelData 002B  
                              ??_i2c_slave_init 0074                                  ?_set_GPIO_mode 0070  
                                __end_of___lmul 0CC4                                  __end_of___wmul 0B58  
                                 __pidataCOMMON 07FE                          ?_OSCILLATOR_Initialize 0070  
                                __end_of_printf 028C                               ?_get_channel_data 0022  
                                __end_of_strtol 056B                             start_initialization 0022  
                             _enable_sp_en$1194 0025                              ??_get_channel_data 0024  
                                 ??_control_LED 0025                                    ?_as7341_init 0070  
                             enable_smux@regVal 0023                                     putch@txData 0075  
                         __end_of_EUSART1_Write 098D                             __end_of_enable_smux 0AC0  
                          as7341_write_byte@reg 0020                               ?_set_F1F4ClearNIR 0070  
                             ??_as7341_i2c_read 0076                                     ??_I2C_Start 0074  
                                   ??_I2C_Write 0074                              ??_set_F1F4ClearNIR 0076  
                   __end_of_i2c_slave_interrupt 0EC2                          _i2c_slave_set_register 0966  
                              ??_PMD_Initialize 0074                                        ??___lmul 0074  
                                 ??_dump_buffer 004F                                        ??___wmul 0074  
                                  _as7341_begin 0B9A                                     __pdataBANK0 006F  
                                      ??_printf 003A                                        ??_strtol 0030  
                                 set_bank@state 0022                                     __pbssCOMMON 0076  
                                     ___latbits 0002                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                    _isalpha$1837 0020  
                     as7341_power_enable@regVal 0055                                    _isdigit$1803 0074  
              ??_EUSART1_SetFramingErrorHandler 0076                 ?_EUSART1_SetFramingErrorHandler 0074  
                                  _currentState 0076                             __end_of_control_LED 0D66  
                                     __pnvBANK0 0069                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 0BFF                                 ??_set_GPIO_mode 0076  
                             ?_set_F5F8ClearNIR 0070                                _as7341_i2c_write 0B79  
                                      ?___lwdiv 0020                                        ?___lwmod 0027  
                            ??_set_F5F8ClearNIR 0076                    ??_INTERRUPT_InterruptManager 0074  
                                      _BAUD1CON 011F                             __end_of_dump_buffer 0632  
            _EUSART1_DefaultOverrunErrorHandler 0000                                        ?_isalpha 0070  
                                      ?_isdigit 0070                                        _I2C_Read 0AC0  
                                      _I2C_Wait 09A2                                        _I2C_Stop 09AE  
                          _EUSART1_ErrorHandler 0069                                     _enable_smux 0AA5  
                                      ?_isspace 0070                                        ?_isprint 0070  
                                      ?_isupper 0070                                       _gpio_mode 0066  
                       _EUSART1_SetErrorHandler 0926                               dump_buffer@buffer 0053  
                             set_GPIO_mode@data 0023                                       _hexpowers 118D  
                             set_GPIO_mode@mode 0022                                ___lwdiv@quotient 0025  
                                      ?_toupper 0070                      ??_as7341_start_measurement 004D  
                                     _set_AGAIN 09D5                                       _set_ATIME 095D  
                                     _set_ASTEP 0A8A                                  ___wmul@product 0074  
       EUSART1_SetErrorHandler@interruptHandler 0074                                       clear_ram0 093E  
                                     _tmr0_init 09BA                                        _PIE0bits 0716  
                               i2c_slave_init@i 0075                                        _PIE3bits 0719  
                                      _PIR0bits 070C                                        _PIR3bits 070F  
                                     _slaveData 0120                                        _SSP1CON1 0190  
                                      _SSP1CON2 0191                                        _SSP2CON1 019A  
                                      _SSP2CON2 019B                               ??_dump_memory_map 0076  
                                      _SSP1STAT 018F                                        _SSP2STAT 0199  
                             _as7341_write_byte 0997                           __end_of_as7341_config 07FE  
                             ___wmul@multiplier 0020                                       main@data1 00B5  
                                     main@data2 00A9                     __end_of_get_ticks_with_lock 0A57  
                                    printf@flag 0049                              ?_as7341_write_byte 0075  
                                    printf@prec 0041                                       main@value 00A0  
                                  _isspace$1840 0074                                _as7341_enableLED 0C5C  
                                   _control_LED 0D2F                               ___lmul@multiplier 0020  
                           ??_as7341_write_byte 0076                                      ?_set_AGAIN 0070  
                                    ?_set_ATIME 0070                                      ?_set_ASTEP 0022  
                      i2c_slave_interrupt@value 0073                                    _isprint$1806 0074  
                              enable_smux@state 0022                                      ?_tmr0_init 0070  
                           _as7341_power_enable 0DA3                                     _dump_buffer 056B  
                                 I2C_Write@data 0074                                 control_LED@data 0027  
                       ??_OSCILLATOR_Initialize 0074                       __end_of_as7341_write_byte 09A2  
                                    _ANSELCbits 1F4E                       ??_EUSART1_SetErrorHandler 0076  
                              _dump_buffer$1020 0054                     _EUSART1_DefaultErrorHandler 0000  
                                  _isupper$1843 0074                            ?_as7341_power_enable 0070  
                               _as7341_i2c_read 0B58                                 ___lwdiv@divisor 0020  
                               ___lwdiv@counter 0024                                        __ptext10 0CF9  
                                      __ptext11 0966                                        __ptext20 0F17  
                                      __ptext12 0B19                                        __ptext21 0AFA  
                                      __ptext13 09C7                                        __ptext30 095D  
                                      __ptext22 075E                                        __ptext14 0A43  
                                      __ptext31 0A8A                                        __ptext23 0F87  
                                      __ptext15 098D                                        __ptext40 0CC4  
                                      __ptext32 09D5                                        __ptext24 0997  
                                      __ptext16 056B                                        __ptext41 0D66  
                                      __ptext33 0C2A                                        __ptext25 0BDD  
                                      __ptext17 09F8                                        __ptext50 0AC0  
                                      __ptext42 0C5C                                        __ptext34 0DA3  
                                      __ptext26 0AA5                                        __ptext18 0D2F  
                                      __ptext51 0979                                        __ptext43 0A6F  
                                      __ptext35 0046                                        __ptext27 0944  
                                      __ptext19 0EC2                                        __ptext60 0E72  
                                      __ptext52 096F                                        __ptext44 0B79  
                                      __ptext36 0938                                        __ptext28 07D7  
                                      __ptext53 0BFF                                        __ptext45 0B58  
                                      __ptext37 0983                                        __ptext29 0B9A  
                                      __ptext54 094B                                        __ptext46 0A2F  
                                      __ptext38 09E6                                        __ptext55 0BBB  
                                      __ptext47 09AE                                        __ptext39 0B38  
                                      __ptext56 0932                                        __ptext48 09A2  
                                      __ptext57 092C                                        __ptext49 0954  
                                      __ptext58 0926                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                       get_ticks_with_lock@result 0024  
                                  _SSP2CON2bits 019B                         ?_i2c_slave_set_register 0074  
                                      _set_bank 0A6F                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0074                                        int$flags 007E  
                                    strtol@base 002D                                      strtol@sign 0034  
            __end_of_INTERRUPT_InterruptManager 0020                      _INTERRUPT_InterruptManager 0004  
                                     printf@idx 003E                                       printf@len 0047  
                               as7341_init@mode 005A                                       printf@val 0044  
                                  _SSP1STATbits 018F                     _EUSART1_FramingErrorHandler 006D  
                         ??_as7341_power_enable 004D                                _measurement_mode 0067  
                                    _INTCONbits 000B                                  control_LED@LED 0026  
                                __pstringtext10 10C4                                  __pstringtext11 10E5  
                                __pstringtext20 1195                                  __pstringtext12 1106  
                                __pstringtext21 119C                                  __pstringtext13 111E  
                                __pstringtext22 11A2                                  __pstringtext14 1133  
                                __pstringtext23 11A8                                  __pstringtext15 1144  
                                __pstringtext24 11AE                                  __pstringtext16 1155  
                                __pstringtext25 11B2                                  __pstringtext17 1166  
                                __pstringtext26 0000                                  __pstringtext18 117B  
                                __pstringtext19 1184                                        isalpha@c 0021  
                               main@prev_ticks1 00C1                                 main@prev_ticks2 005E  
                                      isdigit@c 0075                        __end_of_as7341_i2c_write 0B9A  
                      ??_as7341_smux_cmd_config 0076                                        intlevel1 0000  
                                   ??_set_AGAIN 0076                  __end_of_i2c_slave_set_register 096F  
                                   ??_set_ATIME 0076                                     ??_set_ASTEP 0024  
                                _calculate_diff 0EC2                                ___lwmod@dividend 0029  
                                      isspace@c 0075                         ?_PIN_MANAGER_Initialize 0070  
                                      isprint@c 0075          __end_of_EUSART1_SetOverrunErrorHandler 0938  
                _EUSART1_SetOverrunErrorHandler 0932                                     ??_tmr0_init 0074  
                                 ?_enable_sp_en 0070                             set_ASTEP@high_value 0025  
                                      isupper@c 0075                                 dump_buffer@size 004D  
                       get_channel_data@channel 002A                                        printf@ap 0046  
                                      printf@cp 0042  EUSART1_SetFramingErrorHandler@interruptHandler 0074  
                            _eusart1RxLastError 0068                         __end_of_as7341_i2c_read 0B79  
                                 __pstringtext1 1171                                   __pstringtext2 118D  
                                 __pstringtext3 0632                                   __pstringtext4 06CA  
                                 __pstringtext5 1000                                   __pstringtext6 102B  
                                 __pstringtext7 1056                                   __pstringtext8 1081  
                                 __pstringtext9 10A3                                     _printf$1520 003F  
                                    _SSP1DATPPS 1EC6                                      _SSP2DATPPS 1EC9  
                                    _SSP1CLKPPS 1EC5                                      _SSP2CLKPPS 1EC8  
                               ___lwmod@divisor 0027                                 ___lwmod@counter 002B  
                                  ?_enable_smux 0070                               ??_i2c_master_init 0074  
                                      toupper@c 0075                              as7341_i2c_read@buf 0021  
                                    _TX1STAbits 011E                              as7341_i2c_read@reg 0020  
                        __end_of_calculate_diff 0F17                  __end_of_PIN_MANAGER_Initialize 0C2A  
                               _dump_memory_map 098D                              enable_sp_en@regVal 0027  
                                ??_enable_sp_en 0022                              calculate_diff@diff 0030  
                             calculate_diff@now 0020  
